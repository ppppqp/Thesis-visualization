[{"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/index.js":"1","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/App.js":"2","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/reportWebVitals.js":"3","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/navbar.jsx":"4","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/Dashboard.js":"5","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/charts/ThemeRiver/index.js":"6","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/charts/ThemeRiver/vis.js":"7","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/search.jsx":"8","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/data/allTopic.js":"9","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/colorScale.js":"10","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/legend.jsx":"11","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/drawLegend.js":"12","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/info.jsx":"13","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/recommend.jsx":"14","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/charts/Graph/index.js":"15","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/charts/Graph/vis.js":"16","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/HiddenBox.js":"17","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/graphWeight.js":"18","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/cloud.jsx":"19","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/drawCloud.js":"20","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/data/allTopic2.js":"21","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/detailedKey.js":"22","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/data/cloud.js":"23","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/index.js":"24","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/App.js":"25","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/graphWeight.js":"26","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/detailedKey.js":"27","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/data/allTopic.js":"28","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Graph/index.js":"29","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/ThemeRiver/index.js":"30","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/navbar.jsx":"31","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/search.jsx":"32","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/recommend.jsx":"33","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/info.jsx":"34","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/legend.jsx":"35","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/cloud.jsx":"36","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/drawCloud.js":"37","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/ThemeRiver/vis.js":"38","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Graph/vis.js":"39","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/colorScale.js":"40","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/drawLegend.js":"41","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/HiddenBox.js":"42","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/data/cloud.js":"43","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/data/allTopic2.js":"44","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/DashboardT.js":"45","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/DashboardR.js":"46","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Line/index.js":"47","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Line/vis.js":"48","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/year.jsx":"49","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Map/index.js":"50","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Map/vis.js":"51","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/pool.js":"52","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/mentorRelation.js":"53","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/MapBox.jsx":"54","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/MapWhole/index.js":"55","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/MapWhole/vis.js":"56","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/position_json.js":"57","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Sankey/index.js":"58","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Sankey/vis.js":"59","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/Notice.jsx":"60"},{"size":392,"mtime":1610106219518,"results":"61","hashOfConfig":"62"},{"size":509,"mtime":1612857736073,"results":"63","hashOfConfig":"62"},{"size":362,"mtime":1610104313633,"results":"64","hashOfConfig":"62"},{"size":595,"mtime":1612857709862,"results":"65","hashOfConfig":"62"},{"size":11026,"mtime":1612447054159,"results":"66","hashOfConfig":"62"},{"size":298,"mtime":1610178825220,"results":"67","hashOfConfig":"62"},{"size":5301,"mtime":1611411961820,"results":"68","hashOfConfig":"62"},{"size":3668,"mtime":1610506988825,"results":"69","hashOfConfig":"62"},{"size":1494,"mtime":1612861808705,"results":"70","hashOfConfig":"62"},{"size":417,"mtime":1610783300987,"results":"71","hashOfConfig":"62"},{"size":1449,"mtime":1611411713350,"results":"72","hashOfConfig":"62"},{"size":1051,"mtime":1610181168700,"results":"73","hashOfConfig":"62"},{"size":468,"mtime":1610262313688,"results":"74","hashOfConfig":"62"},{"size":3305,"mtime":1612442482056,"results":"75","hashOfConfig":"62"},{"size":346,"mtime":1610613668023,"results":"76","hashOfConfig":"62"},{"size":5165,"mtime":1612447030197,"results":"77","hashOfConfig":"62"},{"size":1226,"mtime":1613977030611,"results":"78","hashOfConfig":"62"},{"size":73179,"mtime":1613661170853,"results":"79","hashOfConfig":"62"},{"size":327,"mtime":1611124113855,"results":"80","hashOfConfig":"62"},{"size":2407,"mtime":1613653738135,"results":"81","hashOfConfig":"62"},{"size":1490,"mtime":1610785091378,"results":"82","hashOfConfig":"62"},{"size":96827,"mtime":1611023333895,"results":"83","hashOfConfig":"62"},{"size":6789,"mtime":1611123785928,"results":"84","hashOfConfig":"62"},{"size":356,"mtime":1614257970882,"results":"85","hashOfConfig":"86"},{"size":613,"mtime":1614257927008,"results":"87","hashOfConfig":"86"},{"size":73179,"mtime":1613661170853,"results":"88","hashOfConfig":"86"},{"size":114336,"mtime":1628347721024,"results":"89","hashOfConfig":"86"},{"size":1494,"mtime":1614335719471,"results":"90","hashOfConfig":"86"},{"size":346,"mtime":1610613668023,"results":"91","hashOfConfig":"86"},{"size":298,"mtime":1610178825220,"results":"92","hashOfConfig":"86"},{"size":775,"mtime":1627746473332,"results":"93","hashOfConfig":"86"},{"size":3631,"mtime":1628349103396,"results":"94","hashOfConfig":"86"},{"size":3473,"mtime":1628347738649,"results":"95","hashOfConfig":"86"},{"size":352,"mtime":1614576825236,"results":"96","hashOfConfig":"86"},{"size":2843,"mtime":1627823419119,"results":"97","hashOfConfig":"86"},{"size":300,"mtime":1614042598049,"results":"98","hashOfConfig":"86"},{"size":2957,"mtime":1627747979255,"results":"99","hashOfConfig":"86"},{"size":5893,"mtime":1614582803720,"results":"100","hashOfConfig":"86"},{"size":5165,"mtime":1615124339566,"results":"101","hashOfConfig":"86"},{"size":417,"mtime":1610783300987,"results":"102","hashOfConfig":"86"},{"size":1186,"mtime":1614257062455,"results":"103","hashOfConfig":"86"},{"size":1657,"mtime":1628347801079,"results":"104","hashOfConfig":"86"},{"size":6757,"mtime":1627782252867,"results":"105","hashOfConfig":"86"},{"size":1490,"mtime":1610785091378,"results":"106","hashOfConfig":"86"},{"size":9504,"mtime":1628349023036,"results":"107","hashOfConfig":"86"},{"size":15532,"mtime":1628939366243,"results":"108","hashOfConfig":"86"},{"size":340,"mtime":1614332019728,"results":"109","hashOfConfig":"86"},{"size":2982,"mtime":1614570239670,"results":"110","hashOfConfig":"86"},{"size":735,"mtime":1614582470671,"results":"111","hashOfConfig":"86"},{"size":1011,"mtime":1628001892615,"results":"112","hashOfConfig":"86"},{"size":34103,"mtime":1628002082615,"results":"113","hashOfConfig":"86"},{"size":6717,"mtime":1619880548917,"results":"114","hashOfConfig":"86"},{"size":319112,"mtime":1619879253568,"results":"115","hashOfConfig":"86"},{"size":3776,"mtime":1627822672238,"results":"116","hashOfConfig":"86"},{"size":381,"mtime":1621089128667,"results":"117","hashOfConfig":"86"},{"size":20582,"mtime":1628939145619,"results":"118","hashOfConfig":"86"},{"size":309051,"mtime":1627181343881,"results":"119","hashOfConfig":"86"},{"size":1767,"mtime":1627827879578,"results":"120","hashOfConfig":"86"},{"size":8321,"mtime":1627827349920,"results":"121","hashOfConfig":"86"},{"size":1496,"mtime":1627824436644,"results":"122","hashOfConfig":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},"1e0rv1j",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"126"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"126"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"126"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"126"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"126"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"126"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"126"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"126"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"126"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"126"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},"1jszely",{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"183"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"183"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"183"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"183"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"183"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"183"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"183"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"183"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"183"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"183"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"183"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"183"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"183"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":50,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"183"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"183"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":55,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"183"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/index.js",["272"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport Dashboard from \"./Dashboard\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport App from \"./App\";\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);",["273","274"],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/App.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/reportWebVitals.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/navbar.jsx",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/Dashboard.js",["275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291"],"import React, { Component } from \"react\";\nimport { select, csv, map } from \"d3\";\nimport { Layout } from \"antd\";\n// import data from \"./data/data\";\n// import View1 from \"./views/View1/index\";\n// import View2 from \"./views/View2/index\";\n// import View3 from \"./views/View3/index\";\n// import View4 from \"./views/View4/index\";\n// import View5 from \"./views/View5/index\";\n// import View6 from \"./views/View6/index\";\nimport \"./dashboard.css\";\nimport weight from \"./graphWeight\";\nimport { forEach, range } from \"lodash\";\nimport ThemeRiver from \"./charts/ThemeRiver/index\";\nimport Search from \"./components/search\";\nimport allTopic from \"./data/allTopic\";\nimport Legend from \"./components/legend\";\nimport Info from \"./components/info\";\nimport Recommend from \"./components/recommend\";\nimport Scatter from \"./charts/Graph/index\";\nimport Cloud from \"./components/cloud\";\nimport detailedKey from \"./detailedKey\";\nconst { Sider, Content, Footer } = Layout;\n\nexport default class Dashboard extends Component {\n  componentDidMount() {\n    this.getData();\n    this.updateGraph();\n  }\n  state = {\n    data: [],\n    Keys: [],\n    dataE: [],\n    dataV: [],\n    dataRecom: [],\n    selectedMentor: [\"董笑菊\"],\n    selectedTopic: allTopic,\n    selectedYear: \"2019\",\n    dataTheme: [\n      { year: 2019 },\n      { year: 2018 },\n      { year: 2017 },\n      { year: 2016 },\n      { year: 2015 },\n    ],\n    dataLegend: {},\n    dataRecomKey: {},\n  };\n  changeYearHandle = (target) => {\n    this.setState({ selectedYear: target.toString() });\n    this.updateLegend();\n    this.updateGraph();\n  };\n  changeTopicHandle = (target) => {\n    if (target === \"全选\") this.setState({ selectedTopic: allTopic });\n    else this.setState({ selectedTopic: [target] });\n    this.updateTheme();\n    this.updateGraph();\n  };\n  changeMentorHandle = (target) => {\n    this.setState({ selectedMentor: [target] });\n    this.updateTheme();\n    this.updateGraph();\n  };\n  getData() {\n    csv(\"./data_brief.csv\").then((data) => {\n      data.forEach((d) => {\n        d.school = d.school.slice(5);\n        if (d.school === \"上海交大-密西根大学联合学院\")\n          d.school = \"上海交大密西根学院\";\n        if (d.school === \"上海交通大学上海高级金融学院\")\n          d.school = \"上海高级金融学院\";\n        /*let arr = [];\n        if (d.keyword[d.keyword.length - 1] === \";\")\n          d.keyword.slice(0, d.keyword.length - 1);\n        if (d.keyword.indexOf(\";\") !== -1) arr = d.keyword.split(\";\");\n        //get rid of the last \";\"\n        else if (d.keyword.indexOf(\"\") !== -1) arr = d.keyword.split(\",\");\n        for (let i = 0; i < arr.length; i++) {\n        */\n        //  arr[i] = arr[i].replace(/\\s*/g, \"\");\n        //}\n        //d.keyword = arr;\n      });\n      this.setState({ data: data });\n\n      this.updateGraph();\n      this.updateTheme();\n    });\n    let Keys = [];\n    csv(\"./Keys2.csv\").then((data) => {\n      Keys = data;\n      this.setState({ Keys: Keys });\n    });\n  }\n  eliminateNan(index, range, newDataTheme, value) {\n    for (let i = 0; i < range; i++) {\n      if (i !== index && !newDataTheme[i].hasOwnProperty(value))\n        newDataTheme[i][value] = 0;\n    }\n  }\n  updateTheme() {\n    let { data, selectedTopic, selectedMentor } = this.state;\n    const isMentor = this.props.match.path === \"/Mentor\";\n    let key = isMentor ? \"mentor\" : \"school\";\n    let filtered = data.filter((d) => {\n      return isMentor\n        ? selectedMentor[0] === d[\"mentor\"]\n        : selectedTopic.indexOf(d[\"school\"]) != -1;\n    });\n    let newDataTheme = [\n      { year: 2019 },\n      { year: 2018 },\n      { year: 2017 },\n      { year: 2016 },\n      { year: 2015 },\n    ];\n    filtered.forEach((d) => {\n      var temp;\n      if (!newDataTheme[this.getYearIndex(d.year)].hasOwnProperty(d[key]))\n        newDataTheme[this.getYearIndex(d.year)][d[key]] = 1;\n      else newDataTheme[this.getYearIndex(d.year)][d[key]]++;\n      this.eliminateNan(this.getYearIndex(d.year), 5, newDataTheme, d[key]);\n    });\n    this.setState({ dataTheme: newDataTheme });\n    this.updateLegend();\n  }\n  updateLegend() {\n    const { dataTheme, selectedYear } = this.state;\n    if (selectedYear === \"2019\") this.setState({ dataLegend: dataTheme[0] });\n    if (selectedYear === \"2018\") this.setState({ dataLegend: dataTheme[1] });\n    if (selectedYear === \"2017\") this.setState({ dataLegend: dataTheme[2] });\n    if (selectedYear === \"2016\") this.setState({ dataLegend: dataTheme[3] });\n    if (selectedYear === \"2015\") this.setState({ dataLegend: dataTheme[4] });\n  }\n  updateGraph() {\n    const isMentor = this.props.match.path === \"/Mentor\";\n    const {\n      data,\n      selectedYear,\n      selectedTopic,\n      selectedMentor,\n      Keys,\n    } = this.state;\n    let edgeSet = [],\n      verticeSet = [];\n    let recomSet = {};\n    if (isMentor) {\n      /*\n      const target = selectedMentor[0];\n      let targetKeys = {};\n      data.forEach((d) => {\n        let arr = [];\n        if (d.keyword[d.keyword.length - 1] === \";\")\n          d.keyword.slice(0, d.keyword.length - 1);\n        if (d.keyword.indexOf(\";\") !== -1) arr = d.keyword.split(\";\");\n        //get rid of the last \";\"\n        else if (d.keyword.indexOf(\"，\") !== -1) arr = d.keyword.split(\"，\");\n        for (let i = 0; i < arr.length; i++) {\n          */\n      //arr[i] = arr[i].replace(/\\s*/g, \"\");\n      /*\n          if (targetKeys.hasOwnProperty(arr[i])) targetKeys[arr[i]]++;\n          else targetKeys[arr[i]] = 1;\n        }\n      });\n      data.forEach((d)=>{\n        if(d.mentor!==target && )\n      })\n      */\n    } else {\n      const target = selectedTopic[0];\n      const index = allTopic.indexOf(target); //TODO\n      let count = 1;\n      verticeSet.push({\n        name: target,\n        value: 10,\n      });\n\n      let keysSorted = Object.keys(weight[index]).sort(function (a, b) {\n        return weight[index][b] - weight[index][a];\n      });\n      for (let i = 0; i < 8; i++) {\n        recomSet[keysSorted[i]] = weight[index][keysSorted[i]];\n      }\n      this.setState({ dataRecom: recomSet });\n      const temp = detailedKey[allTopic.indexOf(selectedTopic[0])];\n      this.setState({\n        dataRecomKey: temp,\n      });\n      for (let key in weight[index]) {\n        if (weight[index][key] > 0) {\n          verticeSet.push({\n            name: key,\n            value: 3,\n          });\n          edgeSet.push({\n            source: 0,\n            target: count,\n            value: Math.sqrt(2 / weight[index][key]),\n          });\n          count++;\n        }\n      }\n      this.setState({ dataV: verticeSet });\n      this.setState({ dataE: edgeSet });\n      // data.forEach((d) => {\n      //   if (d.year === selectedYear && d.school !== target) {\n      //     for (let tk of targetKeyword) {\n      //       if (d.keyword.indexOf(tk) > -1) {\n      //         if (edgeSet.hasOwnProperty(d.school)) edgeSet[d.school]++;\n      //         else edgeSet[d.school] = 1;\n      //       }\n      //     }\n      //   }\n      // });\n    }\n  }\n  getYearIndex(selectedYear) {\n    if (selectedYear === \"2019\") return 0;\n    if (selectedYear === \"2018\") return 1;\n    if (selectedYear === \"2017\") return 2;\n    if (selectedYear === \"2016\") return 3;\n    if (selectedYear === \"2015\") return 4;\n  }\n  render() {\n    let {\n      data,\n      selectedYear,\n      selectedTopic,\n      selectedMentor,\n      dataV,\n      dataE,\n      dataTheme,\n      dataLegend,\n      dataRecom,\n      dataRecomKey,\n    } = this.state;\n\n    const isMentor = this.props.match.path === \"/Mentor\";\n    var name;\n    var dataScatterV = [];\n    var dataScatterE = [];\n    if (!isMentor) {\n      name = selectedTopic;\n      dataTheme.forEach((d) => {\n        if (d.year == String(selectedYear)) {\n          for (let key in d) {\n            let temp = {};\n            temp[\"name\"] = key;\n            temp[\"value\"] = d[key];\n            dataScatterV.push(temp);\n          }\n        }\n      });\n    } else {\n    }\n    return (\n      <div>\n        <header>\n          <h1>交通大学论文系统</h1>\n          <div class=\"showTime\"></div>\n        </header>\n        <section>\n          <div class=\"mainbox\">\n            <div class=\"column\">\n              <div class=\"panel profile\">\n                <div class=\"boxhead\">查询 Search</div>\n                <Search\n                  onChangeTopic={this.changeTopicHandle}\n                  onChangeMentor={this.changeMentorHandle}\n                  isMentor={isMentor}\n                />\n                <Legend\n                  selectedTopic={selectedTopic}\n                  selectedMentor={selectedMentor}\n                  data={dataLegend}\n                  selectedYear={selectedYear}\n                  isMentor={isMentor}\n                />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n            <div class=\"column\">\n              <div class=\"panel themeriver\">\n                <div class=\"boxhead\">主题河流 Theme River</div>\n                <ThemeRiver\n                  data={dataTheme}\n                  width={850}\n                  height={230}\n                  isMentor={isMentor}\n                  selectedYear={selectedYear}\n                  onChangeMentor={this.changeMentorHandle}\n                  onChangeYear={this.changeYearHandle}\n                  onChangeTopic={this.changeTopicHandle}\n                />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n            <div class=\"column\">\n              <div class=\"panel info\">\n                <div class=\"boxhead\">热点 Hot topics</div>\n                {/* <Info\n                  selectedYear={selectedYear}\n                  selectedMentor={selectedMentor}\n                  selectedTopic={selectedTopic}\n                /> */}\n\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"mainbox\">\n            <div class=\"column\">\n              <div class=\"panel recommend\">\n                <div class=\"boxhead\">Recommendation</div>\n                <Recommend\n                  data={dataRecom}\n                  keys={dataRecomKey}\n                  fulldata={data}\n                />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n            <div class=\"column\">\n              <div class=\"panel graph\">\n                <div class=\"boxhead\">Hot Topic</div>\n                <Cloud selectedTopic={selectedTopic} />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n            <div class=\"column\">\n              <div class=\"panel recommend\">\n                <div class=\"boxhead\">Graph</div>\n                <Scatter\n                  dataV={dataV}\n                  dataE={dataE}\n                  selectedTopic={selectedTopic}\n                />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <script src=\"dist/main.js\"></script>\n      </div>\n    );\n  }\n}\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/charts/ThemeRiver/index.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/charts/ThemeRiver/vis.js",["292","293","294","295","296","297","298"],"import * as d3 from \"d3\";\nimport _, { floor } from \"lodash\";\nimport colorScale from \"../../colorScale\";\nimport \"./style.css\";\nimport allTopic from \"../../data/allTopic\";\n\nconst draw = ({\n  data,\n  width,\n  height,\n  isMentor,\n  onChangeMentor,\n  selectedYear,\n  onChangeYear,\n  onChangeTopic,\n}) => {\n  /*\n  data = [\n    { year: \"2015\", Apple: 15, Orange: 10, Cake: 30, Banana: 20, Peach: 20 },\n    { year: \"2016\", Apple: 16, Orange: 7, Cake: 35, Banana: 14, Peach: 10 },\n    { year: \"2017\", Apple: 19, Orange: 6, Cake: 40, Banana: 9, Peach: 22 },\n    { year: \"2018\", Apple: 10, Orange: 9, Cake: 20, Banana: 5, Peach: 20 },\n    { year: \"2019\", Apple: 13, Orange: 8, Cake: 34, Banana: 2, Peach: 21 },\n  ];\n  */\n  let dataPie = [];\n  let count = 0;\n  let yearData; // how many years covered\n  let maxNum = 0; // max number of the sum of all themes in each years\n  let domain = isMentor ? [] : allTopic; // domain of all the themes\n\n  // get the data for pie chart\n  data.forEach((d) => {\n    if (d.year === selectedYear) yearData = d;\n  });\n  /*\n  for (var key in yearData) {\n    if (key != \"year\") {\n      let temp = {};\n      temp[\"count\"] = yearData[key]; // convert the data format to\n      temp[\"label\"] = key;\n      dataPie.push(temp);\n    }\n  }\n*/\n  console.log(data);\n  data.forEach((d) => {\n    var sum = 0;\n    for (var key in d) {\n      if (isMentor && key != \"year\" && domain.indexOf(key) < 0)\n        domain.push(key);\n      if (key != \"year\") sum += d[key];\n    }\n    if (maxNum < sum) maxNum = sum;\n  });\n  console.log(domain);\n  d3.selectAll(\".vis-themeRiver > *\").remove();\n  let margin = { top: 20, right: 20, bottom: 30, left: 40 };\n  var svg = d3\n    .select(\".vis-themeRiver\")\n    .attr(\"position\", \"relative\")\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    .attr(\"id\", \"themeVis\");\n  var stackGen = d3.stack().keys(domain).order(d3.stackOrderNone);\n  //.offset(d3.stackOffsetWiggle);\n  var stackedSeries = stackGen(data);\n\n  const Riverscale = 1;\n  // Add X axis --> it is a date format\n  let xScale = d3\n    .scaleLinear()\n    .domain(\n      d3.extent(data, function (d) {\n        return parseInt(d.year);\n      })\n    )\n    .range([0, width / Riverscale]);\n\n  //Add X axis\n  const xAxis = d3.axisBottom(xScale).ticks(data.length, \".4\"); //.tickFormat(format(\".4\"));\n  svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .attr(\"id\", \"horizontalAxis\")\n    .call(xAxis)\n    .select(\".domain\")\n    .remove();\n\n  // Add Y axis\n  var yScale = d3\n    .scaleLinear()\n    .domain([0, maxNum])\n    .range([height - 20, 0]);\n  svg.append(\"g\").call(d3.axisLeft(yScale));\n  /*\n  var colorScale = d3\n    .scaleOrdinal()\n    .domain(domain) //TODO\n    .range([\"#045A8D\", \"#2B8CBE\", \"#74A9CF\", \"#A6BDDB\", \"#D0D1E6\", \"#F1EEF6\"]);\n*/\n  var areaGen = d3\n    .area()\n    .curve(d3.curveBasis)\n    .x((d) => xScale(d.data.year))\n    .y0((d) => yScale(d[0]))\n    .y1((d) => yScale(d[1]));\n\n  d3.select(\"#themeVis\")\n    .selectAll(\".areas\")\n    .data(stackedSeries)\n    .join(\"path\")\n    .attr(\"d\", areaGen)\n    .attr(\"fill\", (d) => colorScale(d.key, \"T\"))\n    .attr(\"class\", \"theme\");\n\n  //change font size of the axis\n  d3.selectAll(\"#themeVis .tick>text\").each(function (d, i) {\n    d3.select(this).style(\"font-size\", \"14px\");\n  });\n  d3.selectAll(\".theme\")\n    .attr(\"opacity\", 1)\n    .on(\"mouseover\", function (event, i) {\n      d3.selectAll(\".theme\").attr(\"opacity\", (d, j) => {\n        if (i.key === d.key) return 1;\n        return 0.8;\n      });\n      d3.selectAll(\".pie\").attr(\"opacity\", (d, j) => {\n        if (i.key === d.data.label) return 1;\n        return 0.8;\n      });\n    })\n    .on(\"click\", function (event, i) {\n      onChangeTopic(i.key);\n    });\n\n  var vertical = d3\n    .select(\".vis-themeRiver\")\n    .append(\"div\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"19\")\n    .style(\"bottom\", \"0px\")\n    .style(\"left\", \"0px\")\n    .style(\"width\", \"1px\")\n    .style(\"height\", \"280px\")\n    .style(\"background\", \"#fff\");\n  d3.select(\".vis-themeRiver\")\n    .on(\"mousemove\", function (event, d) {\n      var mousex = d3.pointer(event);\n      mousex = mousex[0] + 5;\n      vertical.style(\"left\", mousex + \"px\");\n    })\n    .on(\"mouseover\", function (event) {\n      var mousex = d3.pointer(event);\n      mousex = mousex[0] + 5;\n      vertical.style(\"left\", mousex + \"px\");\n    })\n    .on(\"click\", function (event, d) {\n      var mousex = d3.pointer(event);\n      mousex = mousex[0] - margin.left;\n      const padding = (width / Riverscale - margin.left) / (data.length - 1);\n      const target = parseInt(mousex / padding) + 2015;\n      onChangeYear(target);\n    });\n\n  /*\n  let radius = Math.min(width, height) / 2;\n\n  let arc = d3.arc().innerRadius(0).outerRadius(radius);\n\n  let pie = d3\n    .pie()\n    .value(function (d) {\n      return d.count;\n    })\n    .sort(null);\n  svg\n    .selectAll(\"pie\")\n    .data(pie(dataPie))\n    .enter()\n    .append(\"path\")\n    .attr(\"transform\", \"translate(1000,\" + radius + \")\")\n    .attr(\"d\", arc)\n    .attr(\"class\", \"pie\")\n    .attr(\"fill\", function (d) {\n      return colorScale(d.data.label);\n    });\n    */\n};\n\nexport default draw;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/search.jsx",["299","300"],"import { Divider } from 'antd';\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport \"./search.css\"\nclass Search extends Component {\n  state = {  }\n  componentDidMount(){\n  }\n\n  onClick(){\n    let{onChangeTopic, onChangeMentor, isMentor} = this.props;\n    var datalist = document.querySelector(\"#exampleDataList\");\n    if(!isMentor) onChangeTopic(datalist.value);\n    else onChangeMentor(datalist.value)\n    console.log(datalist.value)\n  }\n  render() { \n    //console.log(this.props);\n    const{isMentor} = this.props;\n    //const isMentor = this.props.match.path === \"/Mentor\";\n    if(!isMentor)\n    return (<div class = \"inputGroup\">\n     <label for=\"exampleDataList\" class=\"form-label\"></label>\n      <input class=\"form-control\" list=\"datalistOptions\" id=\"exampleDataList\" placeholder=\"Type to search...\"/>\n      <datalist id=\"datalistOptions\">\n        <option value = \"全选\"></option>\n        <option value=\"安泰经济与管理学院\"/>\n        <option value=\"化学化工学院\"/>\n        <option value=\"药学院\"/>\n        <option value=\"船舶海洋与建筑工程学院\"/>\n        <option value=\"生命科学技术学院\"/>\n        <option value=\"农业与生物学院\"/>\n        <option value=\"物理与天文学院\"/>\n        <option value=\"电子信息与电气工程学院(计算机系)\"/>\n        <option value=\"电子信息与电气工程学院(电气系) Angeles\"/>\n        <option value=\"凯原法学院\"/>\n        <option value=\"电子信息与电气工程学院(电子系)\"/>\n        <option value=\"环境科学与工程学院\"/>\n        <option value=\"塑料成型技术与装备研究院\"/>\n        <option value=\"生物医学工程学院\"/>\n        <option value=\"马克思主义学院\"/>\n        <option value=\"高等教育研究院\"/>\n        <option value=\"国际与公共事务学院\"/>\n        <option value=\"数学科学学院\"/>\n        <option value=\"南加州大学文化创意产业学院\"/>\n        <option value=\"外国语学院\"/>\n        <option value=\"中美物流研究院\"/>\n        <option value=\"设计学院\"/>\n        <option value=\"人文学院\"/>\n        <option value=\"媒体与传播学院\"/>\n        <option value=\"电子信息与电气工程学院(微纳电子系)\"/>\n        <option value=\"电子信息与电气工程学院(微电子学院)\"/>\n        <option value=\"材料科学与工程学院\"/>\n        <option value=\"电子信息与电气工程学院(网络空间安全学院)\"/>\n        <option value=\"电子信息与电气工程学院(软件学院)\"/>\n        <option value=\"系统生物医学研究院\"/>\n        <option value=\"电子信息与电气工程学院(自动化系)\"/>\n        <option value=\"电子信息与电气工程学院\"/>\n        <option value=\"上海交大-巴黎高科卓越工程师学院\"/>\n        <option value=\"电子信息与电气工程学院(仪器系)\"/>\n        <option value=\"航空航天学院\"/>\n        <option value=\"上海交大密西根学院\"/>\n        <option value=\"人文艺术研究院\"/>\n        <option value=\"微纳科学技术研究院\"/>\n        <option value=\"科学史与科学文化研究院\"/>\n        <option value=\"国际教育学院\"/>\n      </datalist>\n      <button type=\"button\" class=\"btn btn-primary\" onClick={()=>this.onClick()}>Search</button>\n    </div>);\n    else return(\n      <div class = \"inputGroup\">\n     <label for=\"exampleDataList\" class=\"form-label\"></label>\n      <input class=\"form-control\" list=\"datalistOptions\" id=\"exampleDataList\" placeholder=\"Type to search...\"/>\n      <button type=\"button\" class=\"btn btn-primary\" onClick={()=>this.onClick()}>Search</button>\n    </div>\n    )\n  }\n}\n \nexport default Search;","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/data/allTopic.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/colorScale.js",["301"],"import allTopic from \"./data/allTopic2\";\nfunction colorScale(name, mode) {\n  if (mode === \"T\") {\n    //topic mode\n    var i = 0;\n    var index = allTopic.indexOf(name);\n    index = index + 30;\n    return (\n      \"rgb(\" +\n      Math.abs((255 - index) % 255) +\n      \",\" +\n      Math.abs((255 - index * 2) % 255) +\n      \",\" +\n      Math.abs((255 - index * 2) % 255) +\n      \")\"\n    );\n  }\n}\nexport default colorScale;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/legend.jsx",["302","303","304"],"import React, { Component } from 'react';\nimport colorScale from '../colorScale';\nimport * as d3 from \"d3\"\nimport draw from './drawLegend'\nimport { selectAll } from 'd3';\nimport \"./legend.css\"\nclass Legend extends Component {\n\n  state = {\n  }\n  componentDidMount() {\n    //draw(this.props);\n    //this.findMax()\n  }\n\n  componentDidUpdate(){\n    \n  }\n  findMax(){\n    const {data, selectedYear} = this.props;\n    let maxNum = 0;\n    for(let key in data){\n      if( key !==\"year\" &&  maxNum < data[key]) maxNum = data[key];\n    }\n    return maxNum;\n  }\n  scaleLength(t){\n    const {data} = this.props;\n    const maxNum = this.findMax();\n    const scale = d3.scaleLinear().domain([0, maxNum]).range([0,150])\n    return scale(data[t] === undefined ? 0 : data[t]);\n  }\n  render() {\n\n    let{selectedTopic, selectedMentor, isMentor} = this.props;\n    const data = (isMentor) ? selectedMentor : selectedTopic\n    return(\n      <div className=\"Legend-vis\">\n        {\n          data.map((t)=>{\n            let color ={};\n            color[\"bgcolor\"] = colorScale(t);\n            return (\n              <div class =\"row\">\n                <div class = \"colorbox\">\n                  <div class = \"color\" style = {{background: colorScale(t, \"T\"), width: this.scaleLength(t)+\"px\"}}></div>\n                </div>\n                <div class = \"name\">{t}</div>\n             </div>\n          );\n          })\n        }\n      </div>\n    )\n  }\n}\n \nexport default Legend;","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/drawLegend.js",["305","306"],"import colorScale from \"../colorScale\";\nimport * as d3 from \"d3\";\nimport { scaleLinear } from \"d3\";\nconst draw = (props) => {\n  let { selectedTopic } = props;\n  d3.selectAll(\".Legend-vis > *\").remove();\n  var data_legend = [];\n  console.log(props);\n  for (let t of selectedTopic) {\n    console.log(t);\n    let temp = {};\n    temp[\"name\"] = t;\n    temp[\"color\"] = colorScale(t, \"T\");\n    data_legend.push(temp);\n  }\n  const yScale = d3\n    .scaleBand()\n    .domain(data_legend.map((d) => d.color))\n    .range([0, 500])\n    .padding(0.1);\n\n  console.log(data_legend);\n  var svg = d3\n    .select(\".Legend-vis\")\n    .attr(\"position\", \"relative\")\n    .append(\"svg\")\n    .attr(\"width\", 200)\n    .attr(\"height\", 200);\n\n  var legend = svg\n    .selectAll(\".legend\")\n    .data(data_legend)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"legend\")\n    .append(\"rect\")\n    .attr(\"width\", \"10px\")\n    .attr(\"height\", \"10px\")\n    .attr(\"x\", \"10px\")\n    .attr(\"y\", (d) => yScale(d.color))\n    .attr(\"fill\", (d) => colorScale(d.name, \"T\"));\n};\nexport default draw;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/info.jsx",["307"],"import React, { Component } from 'react';\nimport \"./info.css\"\nclass Info extends Component {\n  state = {  }\n  render() { \n    const {selectedYear, selectedMentor, selectedTopic} = this.props;\n    return ( \n      <div class = \"Info\">\n        <div class = \"yearDisplay\">Year: {selectedYear}</div>\n        {\n          selectedTopic.map((t)=>{\n            return <div class = \"topicDisplay\">{t}</div>\n          })\n        }\n      </div>\n    );\n  }\n}\n \nexport default Info;","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/recommend.jsx",["308","309","310"],"import React, { Component } from 'react';\nimport colorScale from '../colorScale';\nimport * as d3 from \"d3\";\nimport \"./recommend.css\"\nimport HiddenBox from \"./HiddenBox\";\nclass Recommend extends Component {\n  state = {\n    id: -1,\n    selected: 0\n    }\n  findMax(){\n    const {data} = this.props;\n    let maxNum = 0;\n    for(let key in data){\n      if(maxNum < data[key]) maxNum = data[key];\n    }\n    return maxNum;\n  }\n  onClick(id){\n    if(this.state.selected === 1){\n      this.setState({id:-1});\n      this.setState({selected: 0});\n    }\n    else {\n      this.setState({id:id});\n      this.setState({selected: 1});\n    }\n  }\n\n  onHover(id){\n    const selector = \"#\"+\"rec\"+id;\n    const element = document.querySelector(selector);\n    element.style.opacity = \"0.8\";\n  }\n  onLeave(id){\n    const selector = \"#\"+\"rec\"+id;\n    const element = document.querySelector(selector);\n    element.style.opacity = \"1\";\n  }\n  scaleLength(t){\n    const {data} = this.props;\n    const maxNum = this.findMax();\n    const scale = d3.scaleLinear().domain([0, maxNum]).range([0,400])\n    return scale(data[t] === undefined ? 0 : data[t]);\n  }\n  render() {\n    let{data, keys,isMentor, fulldata} = this.props;\n    let domain = [];\n    for(let key in data){\n         domain.push(key);\n    }\n    return( <div className = \"Recommend-vis\">\n      {\n        domain.map((t)=>{\n          return(\n            <div>\n              <div class = \"row\">\n                <div class = \"colorbox\">\n                  <div class = \"color\"\n                        id = {\"rec\" + domain.indexOf(t)} \n                        onClick={()=>this.onClick(domain.indexOf(t))} \n                        onMouseOver={()=>this.onHover(domain.indexOf(t))}\n                        onMouseLeave = {()=>this.onLeave(domain.indexOf(t))}\n                        style = {{background: colorScale(t, \"T\"), width: this.scaleLength(t)+\"px\"}}>{data[t]}\n                  </div>\n                  </div>\n                <div class = \"name\">{t}</div>\n              </div>\n                {<HiddenBox id = {domain.indexOf(t)} chosen = {this.state.id} topic = {t} keys = {keys} fulldata={fulldata}>\n              </HiddenBox> }\n            </div>\n          )\n        })\n      }\n    </div>\n    );\n  }\n    // let{data} = this.props;\n    // let domain = [];\n    // for(let key in data){\n    //   domain.push(key);\n    // }\n    // return( \n    //   <div className=\"Recommend-vis\">\n    // )}\n}\n\nexport default Recommend;\n\n/* {\n          domain.map((t)=>{\n            return (\n              <div>\n              <div class =\"row\">\n                <div class = \"colorbox\">\n                  <div class = \"color\"\n                       id = {\"rec\" + domain.indexOf(t)} \n                       onClick={()=>this.onClick(domain.indexOf(t))} \n                       onMouseOver={()=>this.onHover(domain.indexOf(t))}\n                       onMouseLeave = {()=>this.onLeave(domain.indexOf(t))}\n                       style = {{background: colorScale(t, \"T\"), width: this.scaleLength(t)+\"px\"}}>{data[t]}</div>\n                </div>\n                <div class = \"name\">{t}</div>\n             </div>\n             <div>\n             <HiddenBox id = {\"box\" + domain.indexOf(t)}>\n             </HiddenBox>\n             </div>\n          );\n          })\n        }\n      </div>\n    );\n  } */","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/charts/Graph/index.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/charts/Graph/vis.js",["311","312","313","314","315","316"],"import * as d3 from \"d3\";\nimport colorScale from \"../../colorScale\";\nconst draw = (props) => {\n  d3.selectAll(\".vis-scatter > *\").remove();\n  const { dataV, dataE, selectedTopic } = props;\n  /*\n  const dataV = [\n    { name: \"Apple\", value: 13 },\n    { name: \"Orange\", value: 8 },\n    { name: \"Cake\", value: 34 },\n    { name: \"Peach\", value: 2 },\n    { name: \"Banana\", value: 21 },\n  ];\n  let dataE = [\n    { source: 0, target: 4, value: 1 },\n    { source: 1, target: 3, value: 0.8 },\n    { source: 2, target: 4, value: 0.6 },\n    { source: 4, target: 3, value: 1.3 },\n    { source: 1, target: 4, value: 0.9 },\n    { source: 2, target: 1, value: 1.5 },\n  ];\n*/\n  let keyRange = [];\n  dataV.forEach((d) => {\n    keyRange.push(d.name);\n  });\n\n  const width = 400;\n  const height = 500;\n  let margin = { top: 20, right: 20, bottom: 30, left: 40 };\n  let svg = d3\n    .select(\".vis-scatter\")\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .call(d3.zoom);\n\n  const g = svg\n    .append(\"g\")\n    .attr(\"id\", \"maingroup\")\n    .attr(\"transform\", `translate(${margin.top}, ${margin.right})`);\n  const xScale = d3\n    .scaleLinear()\n    .domain([d3.min(dataV, (d) => d.x), d3.max(dataV, (d) => d.x)])\n    .range([0, 900]);\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([d3.min(dataV, (d) => d.y), d3.max(dataV, (d) => d.y)])\n    .range([0, height - 200]);\n\n  const sizeScale = d3\n    .scaleSqrt()\n    .domain([0, d3.max(dataV, (d) => d.value)])\n    .range([0, 20]);\n\n  //TODO: draw the chart\n  var scaleColor = d3\n    .scaleOrdinal()\n    .domain(d3.range(dataV.length))\n    .range(d3.schemeCategory10);\n\n  var forceSimulation = d3\n    .forceSimulation(dataV)\n    .force(\"link\", d3.forceLink())\n    .force(\"collision\", d3.forceCollide(1).strength(0.1))\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"center\", d3.forceCenter());\n  forceSimulation.nodes(dataV).on(\"tick\", () => {\n    links\n      .attr(\"x1\", function (d) {\n        return d.source.x;\n      })\n      .attr(\"y1\", function (d) {\n        return d.source.y;\n      })\n      .attr(\"x2\", function (d) {\n        return d.target.x;\n      })\n      .attr(\"y2\", function (d) {\n        return d.target.y;\n      });\n    linksText\n      .attr(\"x\", function (d) {\n        return (d.source.x + d.target.x) / 2;\n      })\n      .attr(\"y\", function (d) {\n        return (d.source.y + d.target.y) / 2;\n      });\n    gs &&\n      gs.attr(\"transform\", function (d, i) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\n      });\n  });\n  forceSimulation\n    .force(\"link\")\n    .links(dataE)\n    .distance(function (d, i) {\n      return d.value * 100; //设置边长\n    });\n  forceSimulation\n    .force(\"center\")\n    .x(width / 2) //设置x坐标\n    .y(height / 2); //设置y坐标\n\n  var links = g\n    .append(\"g\")\n    .selectAll(\"line\")\n    .data(dataE)\n    .enter()\n    .append(\"line\")\n    .attr(\"stroke\", function (d, i) {\n      return colorScale(d.name, \"T\"); //设置边线颜色\n    })\n    .attr(\"stroke-width\", \"5\"); //设置边线宽度\n\n  var linksText = g\n    .append(\"g\")\n    .selectAll(\"text\")\n    .data(dataE)\n    .enter()\n    .append(\"text\")\n    .text(function (d, i) {\n      return d.name;\n    });\n  //创建节点分组\n  var gs = g\n    .selectAll(\".circle\")\n    .data(dataV)\n    .enter()\n    .append(\"g\")\n    .attr(\"transform\", function (d, i) {\n      return \"translate(\" + d.x + \",\" + d.y + \")\";\n    })\n    .call(\n      d3\n        .drag() //相当于移动端的拖拽手势  分以下三个阶段\n        .on(\"start\", (event, d) => {\n          if (!d3.active) {\n            forceSimulation.alphaTarget(0.8).restart();\n          }\n          d.fx = event.x;\n          d.fy = event.y;\n        })\n\n        .on(\"drag\", drag)\n        .on(\"end\", (event, d) => {\n          if (!d3.active) {\n            forceSimulation.alphaTarget(0);\n          }\n          d.fx = null;\n          d.fy = null;\n        })\n    );\n\n  //绘制节点\n  let circles = gs\n    .append(\"circle\")\n    .attr(\"r\", (d) => sizeScale(d.value))\n    .attr(\"opacity\", 0.7)\n    .attr(\"stroke\", \"none\")\n    .attr(\"fill\", function (d, i) {\n      return colorScale(d.name, \"T\");\n    })\n    .on(\"click\", function (d) {\n      console.log(d3.select(this).text());\n    })\n    .on(\"mouseover\", function (d) {\n      d3.select(this)\n        .attr(\"opacity\", 0.5)\n        .attr(\"stroke\", \"white\")\n        .attr(\"stroke-width\", 6);\n    })\n    .on(\"mouseout\", function (d) {\n      d3.select(this).attr(\"opacity\", 0.7).attr(\"stroke\", \"none\");\n    })\n    .append(\"title\")\n    .text(\n      (d) => d.name //+ \": \" + format(\",\")(d[`${caseType}`])\n    );\n\n  gs.append(\"title\").text(function (d, i) {\n    return d.name;\n  });\n  const zoom = d3\n    .zoom()\n    .scaleExtent([1, 40])\n    .on(\"zoom\", (event, d) => {\n      let k = (event.transform.k - 1) * 0.1 + 1;\n      g.attr(\n        \"transform\",\n        \"translate(\" +\n          event.transform.x / 5 +\n          \",\" +\n          event.transform.y / 5 +\n          \") scale(\" +\n          k +\n          \")\"\n      );\n    });\n  //svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity);\n};\n\nfunction drag(event, d) {\n  d.fx = event.x;\n  d.fy = event.y;\n}\n\nexport default draw;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/HiddenBox.js",["317"],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/graphWeight.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/cloud.jsx",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/components/drawCloud.js",["318","319"],"import * as d3 from \"d3\";\nimport cloud from \"d3-cloud\";\nimport data from \"../data/cloud\";\nimport allTopic from \"../data/allTopic\";\nconst draw = (props) => {\n  d3.selectAll(\".cloud-vis > *\").remove();\n  const { selectedTopic, selectedMentor, isMentor } = props;\n  var frequency_list = [];\n  if (!isMentor)\n    data[selectedTopic[0]].forEach((e, i) => {\n      frequency_list.push({ text: e, size: Math.log(i) * 30 });\n    });\n  // var frequency_list = [\n  //   { text: \"互联网\", size: 50 },\n  //   { text: \"有限元\", size: 20 },\n  //   { text: \"复合材料\", size: 40 },\n  //   { text: \"传感器\", size: 30 },\n  //   { text: \"swot\", size: 19 },\n  //   { text: \"神经网络\", size: 80 },\n  //   { text: \"人满为患\", size: 50 },\n  //   { text: \"动力学\", size: 70 },\n  //   { text: \"机器人\", size: 80 },\n  // ];\n  /*\n神经网络\n动力学\n机器人\n互联网\n复合材料\n传感器\nswot\n有限元\n\n*/\n  //自定义一个线性非连贯比例尺来进行给不同大小的词赋颜色.\n  //   var color = d3.scale.linear()\n  //            .domain([0,1,2,3,4,5,6,10,15,20,100])\n  //            .range([\"#ddd\", \"#ccc\", \"#bbb\", \"#aaa\", \"#999\", \"#888\", \"#777\", \"#666\", \"#555\", \"#444\", \"#333\", \"#222\"]);\n  var color = d3\n    .scaleOrdinal()\n    .domain(d3.range(frequency_list.length))\n    .range(d3.schemeCategory10);\n\n  var layout = cloud()\n    .size([750, 600])\n    .words(frequency_list)\n    .rotate(0)\n    .fontSize(function (d) {\n      return d.size;\n    })\n    .on(\"end\", paint);\n\n  layout.start();\n\n  function paint(words) {\n    d3.select(\".cloud-vis\")\n      .append(\"svg\") //根据id插入svg\n      .attr(\"width\", layout.size()[0]) //宽度\n      .attr(\"height\", layout.size()[1]) //高度\n      .attr(\"viewBox\", \"0 0 600 350\") //可见区域\n      .attr(\"preserveAspectRatio\", \"xMaxYMax meet\")\n      .attr(\"class\", \"wordcloud\")\n      .append(\"g\")\n      .attr(\"transform\", \"translate(200,100)\")\n      .selectAll(\"text\")\n      .data(words)\n      .enter()\n      .append(\"text\")\n      .style(\"font-size\", function (d) {\n        return d.size + \"px\";\n      })\n      .style(\"fill\", function (d, i) {\n        return color(i);\n      }) //颜色\n      .attr(\"transform\", function (d) {\n        //每个词条的偏移量\n        return \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\";\n      })\n      .text(function (d) {\n        return d.text;\n      }); //内容\n  }\n};\nexport default draw;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/data/allTopic2.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/detailedKey.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/final/src/data/cloud.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/index.js",[],["320","321"],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/App.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/graphWeight.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/detailedKey.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/data/allTopic.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Graph/index.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/ThemeRiver/index.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/navbar.jsx",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/search.jsx",["322","323"],"import { Divider } from 'antd';\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport \"./search.css\"\nclass Search extends Component {\n  state = {  }\n  componentDidMount(){\n  }\n\n  onClick(){\n    let{onChangeTopic, onChangeMentor, isMentor} = this.props;\n    var datalist = document.querySelector(\"#exampleDataList\");\n    if(!isMentor) onChangeTopic(datalist.value);\n    else onChangeMentor(datalist.value)\n    console.log(datalist.value)\n  }\n  render() { \n    //console.log(this.props);\n    const{isMentor} = this.props;\n    //const isMentor = this.props.match.path === \"/Mentor\";\n    if(!isMentor)\n    return (<div class = \"inputGroup\">\n     <label for=\"exampleDataList\" class=\"form-label\"></label>\n      <input class=\"form-control\" list=\"datalistOptions\" id=\"exampleDataList\" placeholder=\"搜索学院\"/>\n      <datalist id=\"datalistOptions\">\n        <option value = \"全选\"></option>\n        <option value=\"安泰经济与管理学院\"/>\n        <option value=\"化学化工学院\"/>\n        <option value=\"药学院\"/>\n        <option value=\"船舶海洋与建筑工程学院\"/>\n        <option value=\"生命科学技术学院\"/>\n        <option value=\"农业与生物学院\"/>\n        <option value=\"物理与天文学院\"/>\n        <option value=\"电子信息与电气工程学院(计算机系)\"/>\n        <option value=\"电子信息与电气工程学院(电气系)\"/>\n        <option value=\"凯原法学院\"/>\n        <option value=\"电子信息与电气工程学院(电子系)\"/>\n        <option value=\"环境科学与工程学院\"/>\n        <option value=\"塑料成型技术与装备研究院\"/>\n        <option value=\"生物医学工程学院\"/>\n        <option value=\"马克思主义学院\"/>\n        <option value=\"高等教育研究院\"/>\n        <option value=\"国际与公共事务学院\"/>\n        <option value=\"数学科学学院\"/>\n        <option value=\"南加州大学文化创意产业学院\"/>\n        <option value=\"外国语学院\"/>\n        <option value=\"中美物流研究院\"/>\n        <option value=\"设计学院\"/>\n        <option value=\"人文学院\"/>\n        <option value=\"媒体与传播学院\"/>\n        <option value=\"电子信息与电气工程学院(微纳电子系)\"/>\n        <option value=\"电子信息与电气工程学院(微电子学院)\"/>\n        <option value=\"材料科学与工程学院\"/>\n        <option value=\"电子信息与电气工程学院(网络空间安全学院)\"/>\n        <option value=\"电子信息与电气工程学院(软件学院)\"/>\n        <option value=\"系统生物医学研究院\"/>\n        <option value=\"电子信息与电气工程学院(自动化系)\"/>\n        <option value=\"电子信息与电气工程学院\"/>\n        <option value=\"上海交大-巴黎高科卓越工程师学院\"/>\n        <option value=\"电子信息与电气工程学院(仪器系)\"/>\n        <option value=\"航空航天学院\"/>\n        <option value=\"上海交大密西根学院\"/>\n        <option value=\"人文艺术研究院\"/>\n        <option value=\"微纳科学技术研究院\"/>\n        <option value=\"科学史与科学文化研究院\"/>\n        <option value=\"国际教育学院\"/>\n      </datalist>\n      <button type=\"button\" class=\"btn btn-primary\" onClick={()=>this.onClick()}>Search</button>\n    </div>);\n    else return(\n      <div class = \"inputGroup\">\n     <label for=\"exampleDataList\" class=\"form-label\"></label>\n      <input class=\"form-control\" list=\"datalistOptions\" id=\"exampleDataList\" placeholder=\"Type to search...\"/>\n      <button type=\"button\" onClick={()=>this.onClick()}>Search</button>\n    </div>\n    )\n  }\n}\n \nexport default Search;","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/recommend.jsx",["324","325","326"],"import React, { Component } from 'react';\nimport colorScale from '../colorScale';\nimport * as d3 from \"d3\";\nimport \"./recommend.css\"\nimport HiddenBox from \"./HiddenBox\";\nclass Recommend extends Component {\n  state = {\n    id: -1,\n    selected: 0\n    }\n  findMax(){\n    const {data} = this.props;\n    let maxNum = 0;\n    for(let key in data){\n      if(maxNum < data[key]) maxNum = data[key];\n    }\n    return maxNum;\n  }\n  onClick(id){\n    if(this.state.selected === 1){\n      this.setState({id:-1});\n      this.setState({selected: 0});\n    }\n    else {\n      this.setState({id:id});\n      this.setState({selected: 1});\n    }\n  }\n\n  onHover(id){\n    const selector = \"#\"+\"rec\"+id;\n    const element = document.querySelector(selector);\n    element.style.opacity = \"0.8\";\n  }\n  onLeave(id){\n    const selector = \"#\"+\"rec\"+id;\n    const element = document.querySelector(selector);\n    element.style.opacity = \"1\";\n  }\n  scaleLength(t){\n    const {data} = this.props;\n    const maxNum = this.findMax();\n    const scale = d3.scaleLinear().domain([0, maxNum]).range([0,400])\n    return scale(data[t] === undefined ? 0 : data[t]);\n  }\n  render() {\n    let{data, keys,isMentor, fulldata} = this.props;\n    let domain = [];\n    for(let key in data){\n         domain.push(key);\n    }\n    console.log('keys in recommend', keys);\n    console.log('topic in recommend', domain);\n    return( <div className = \"Recommend-vis\">\n      {\n        domain.map((t)=>{\n          console.log('see', keys[t])\n          return(\n            <div>\n              <div class = \"row\">\n                <div class = \"colorbox\">\n                  <div class = \"color\"\n                        id = {\"rec\" + domain.indexOf(t)} \n                        onClick={()=>this.onClick(domain.indexOf(t))} \n                        onMouseOver={()=>this.onHover(domain.indexOf(t))}\n                        onMouseLeave = {()=>this.onLeave(domain.indexOf(t))}\n                        style = {{background: colorScale(t, \"T\"), width: this.scaleLength(t)+\"px\"}}>{data[t]}\n                  </div>\n                  </div>\n                <div class = \"name\">{t}</div>\n              </div>\n                {<HiddenBox id = {domain.indexOf(t)} chosen = {this.state.id} topic = {t} keys = {keys} fulldata={fulldata} selectedYear={this.props.selectedYear}>\n              </HiddenBox> }\n            </div>\n          )\n        })\n      }\n    </div>\n    );\n  }\n    // let{data} = this.props;\n    // let domain = [];\n    // for(let key in data){\n    //   domain.push(key);\n    // }\n    // return( \n    //   <div className=\"Recommend-vis\">\n    // )}\n}\n\nexport default Recommend;\n\n/* {\n          domain.map((t)=>{\n            return (\n              <div>\n              <div class =\"row\">\n                <div class = \"colorbox\">\n                  <div class = \"color\"\n                       id = {\"rec\" + domain.indexOf(t)} \n                       onClick={()=>this.onClick(domain.indexOf(t))} \n                       onMouseOver={()=>this.onHover(domain.indexOf(t))}\n                       onMouseLeave = {()=>this.onLeave(domain.indexOf(t))}\n                       style = {{background: colorScale(t, \"T\"), width: this.scaleLength(t)+\"px\"}}>{data[t]}</div>\n                </div>\n                <div class = \"name\">{t}</div>\n             </div>\n             <div>\n             <HiddenBox id = {\"box\" + domain.indexOf(t)}>\n             </HiddenBox>\n             </div>\n          );\n          })\n        }\n      </div>\n    );\n  } */","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/info.jsx",["327","328"],"import React, { Component } from 'react';\nimport \"./info.css\"\nclass Info extends Component {\n  state = {  }\n  render() { \n    const {selectedYear, selectedMentor, selectedTopic} = this.props;\n    return ( \n      <div class = \"Info\">\n        <div class = \"yearDisplay\">Year: {selectedYear}</div>\n        \n      </div>\n    );\n  }\n}\n \nexport default Info;","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/legend.jsx",["329","330","331","332"],"import React, { Component } from 'react';\n//import colorScale from '../colorScale';\nimport * as d3 from \"d3\"\nimport draw from './drawLegend'\nimport { selectAll } from 'd3';\nimport Notice from './Notice'\n\nimport \"./legend.css\"\nimport Axios from \"axios\";\n\nclass Legend extends Component {\n  keywordInfo={info:[]};\n  state = {\n    open: false,\n  }\n  componentDidMount() {\n    //draw(this.props);\n    //this.findMax()\n  }\n\n  componentDidUpdate(){\n    \n  }\n  \n  handleClickToOpen = () => {\n    this.setState({open: true});\n  };\n  \n  handleToClose = () => {\n    this.setState({open: false});\n  };\n  findMax(){\n    const {data, selectedYear} = this.props;\n    let maxNum = 0;\n    for(let key in data){\n      if( key !==\"year\" &&  maxNum < data[key]) maxNum = data[key];\n    }\n    return maxNum;\n  }\n  scaleLength(t){\n    const {data} = this.props;\n    const maxNum = this.findMax();\n    const scale = d3.scaleLinear().domain([0, maxNum]).range([0,250])\n    return scale(data[t] === undefined ? 0 : data[t]);\n  }\n  Hover(t){\n    document.querySelector(\"#\"+t).style.opacity = 0.5\n  }\n  Leave(t){\n    console.log(\"Leave\")\n    document.querySelector(\"#\"+t).style.opacity = 1\n    console.log(document.querySelector(\"#\"+t))\n    console.log(\"opacity set to 1\")\n  }\n  async Click(keyw){\n\n    await Axios.get(\"http://localhost:3001/getLegend\", {\n      params: { keyw: keyw, year: this.props.selectedYear, topic:this.props.selectedTopic },\n    }).then((response) => {\n      this.keywordInfo={\n        school: this.props.selectedTopic,\n        keyword: keyw,\n        info: []\n      }\n      const data = response.data;\n      for(let d of data){\n        this.keywordInfo.info.push({\n          title: d.title,\n          mentor: d.mentor,\n        })\n      }\n    });\n    this.setState({open: true})\n  }\n  render() {\n    let{data} = this.props;\n    let list = []\n    for(let k in data){\n      if(k != \"year\" & data[k]>0) list.push(k)\n    }\n    var colorScale = d3\n    .scaleOrdinal()\n    .domain(list) //TODO\n    .range([\"#045A8D\", \"#2B8CBE\", \"#74A9CF\", \"#A6BDDB\", \"#D0D1E6\", \"#F1EEF6\"]);\n    return(\n      <div className=\"Legend-vis\">\n        {\n          list.map((t)=>{\n            let color ={};\n            color[\"bgcolor\"] = colorScale(t);\n            return (\n              <div class =\"row\">\n                <div class = \"colorbox\" id = {t} onClick={()=>this.Click(t) } onMouseEnter={()=>this.Hover(t)} onMouseLeave = {()=>this.Leave(t)}>\n                  <div class = \"color\" style = {{background: colorScale(t, \"T\"), width: this.scaleLength(t)+\"px\"}}></div>\n                </div>\n                <div class = \"name\">{t}{'('+data[t]+')'}</div>\n             </div>\n          );\n          })\n        }\n        <Notice open={this.state.open} handleToClose={this.handleToClose} keywordInfo={this.keywordInfo} />\n      </div>\n    )\n  }\n}\n \nexport default Legend;","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/cloud.jsx",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/drawCloud.js",["333","334","335","336"],"import * as d3 from \"d3\";\nimport cloud from \"d3-cloud\";\nimport data from \"../data/cloud\";\nimport allTopic from \"../data/allTopic\";\nconst draw = (props) => {\n  d3.selectAll(\".cloud-vis > *\").remove();\n  const { selectedTopic, selectedMentor, isMentor } = props;\n  var frequency_list = [];\n  if (!isMentor)\n    data[selectedTopic[0]].forEach((e, i) => {\n      frequency_list.push({ text: e, size: Math.log(i) * 30 });\n    });\n  // var frequency_list = [\n  //   { text: \"互联网\", size: 50 },\n  //   { text: \"有限元\", size: 20 },\n  //   { text: \"复合材料\", size: 40 },\n  //   { text: \"传感器\", size: 30 },\n  //   { text: \"swot\", size: 19 },\n  //   { text: \"神经网络\", size: 80 },\n  //   { text: \"人满为患\", size: 50 },\n  //   { text: \"动力学\", size: 70 },\n  //   { text: \"机器人\", size: 80 },\n  // ];\n  /*\n神经网络\n动力学\n机器人\n互联网\n复合材料\n传感器\nswot\n有限元\n\n*/\n  //自定义一个线性非连贯比例尺来进行给不同大小的词赋颜色.\n  //   var color = d3.scale.linear()\n  //            .domain([0,1,2,3,4,5,6,10,15,20,100])\n  //            .range([\"#ddd\", \"#ccc\", \"#bbb\", \"#aaa\", \"#999\", \"#888\", \"#777\", \"#666\", \"#555\", \"#444\", \"#333\", \"#222\"]);\n  var color = d3\n    .scaleOrdinal()\n    .domain(d3.range(frequency_list.length))\n    .range([\"#045A8D\", \"#2B8CBE\", \"#74A9CF\", \"#A6BDDB\", \"#D0D1E6\", \"#F1EEF6\"]);\n\n  var layout = cloud()\n    .size([900, 270])\n    .words(frequency_list)\n    .rotate(0)\n    .fontSize(function (d) {\n      return d.size;\n    })\n    .on(\"end\", paint);\n\n  layout.start();\n\n  function paint(words) {\n    const svg = d3\n      .select(\".cloud-vis\")\n      .append(\"svg\") //根据id插入svg\n      .attr(\"width\", layout.size()[0]) //宽度\n      .attr(\"height\", layout.size()[1]) //高度\n      //.attr(\"viewBox\", \"0 0 900 300\") //可见区域\n      .attr(\"preserveAspectRatio\", \"xMaxYMax meet\")\n      .attr(\"class\", \"wordcloud\");\n    const g = svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(400,150)\")\n      .selectAll(\"text\")\n      .data(words)\n      .enter()\n      .append(\"text\")\n      .style(\"font-size\", function (d) {\n        return d.size + \"px\";\n      })\n      .style(\"fill\", function (d, i) {\n        return color(i);\n      }) //颜色\n      .attr(\"transform\", function (d) {\n        //每个词条的偏移量\n        return \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\";\n      })\n      .on(\"mouseover\", function (event, i) {\n        d3.select(\".cloud-vis\")\n          .selectAll(\"text\")\n          .style(\"font-size\", (d) => {\n            if (i.text == d.text) return d.size * 1.1 + \"px\";\n            else return d.size + \"px\";\n          });\n      })\n      .on(\"mouseleave\", function (event, i) {\n        d3.select(\".cloud-vis\")\n          .selectAll(\"text\")\n          .style(\"font-size\", (d) => {\n            return d.size + \"px\";\n          });\n      })\n      .text(function (d) {\n        return d.text;\n      });\n  }\n};\nexport default draw;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/ThemeRiver/vis.js",["337","338","339","340","341","342","343"],"import * as d3 from \"d3\";\nimport _, { floor } from \"lodash\";\n//import colorScale from \"../../colorScale\";\nimport \"./style.css\";\nimport allTopic from \"../../data/allTopic\";\n\nconst draw = ({\n  data,\n  width,\n  height,\n  isMentor,\n  onChangeMentor,\n  selectedYear,\n  onChangeYear,\n  onChangeTopic,\n}) => {\n  // data = [\n  //   { year: \"2015\", Apple: 15, Orange: 10, Cake: 30, Banana: 20, Peach: 20 },\n  //   { year: \"2016\", Apple: 16, Orange: 7, Cake: 35, Banana: 14, Peach: 10 },\n  //   { year: \"2017\", Apple: 19, Orange: 6, Cake: 40, Banana: 9, Peach: 22 },\n  //   { year: \"2018\", Apple: 10, Orange: 9, Cake: 20, Banana: 5, Peach: 20 },\n  //   { year: \"2019\", Apple: 13, Orange: 8, Cake: 34, Banana: 2, Peach: 21 },\n  // ];\n\n  // console.log(data);\n  let dataPie = [];\n  let count = 0;\n  let yearData = d3.extent(data, function (d) {\n    return parseInt(d.year);\n  }); // how many years covered\n  let maxNum = 0; // max number of the sum of all themes in each years\n  let domain = []; // domain of all the themes\n  // console.log(yearData);\n  const yearLB = yearData[0];\n  // get the data for pie chart\n  data.forEach((d) => {\n    if (d.year === selectedYear) yearData = d;\n  });\n  /*\n  for (var key in yearData) {\n    if (key != \"year\") {\n      let temp = {};\n      temp[\"count\"] = yearData[key]; // convert the data format to\n      temp[\"label\"] = key;\n      dataPie.push(temp);\n    }\n  }\n*/\n  // data.forEach((d)=>{\n\n  // })\n  data.forEach((d) => {\n    var sum = 0;\n    for (var key in d) {\n      if (key != \"year\" && domain.indexOf(key) < 0) domain.push(key);\n      if (key != \"year\") sum += d[key];\n    }\n    if (maxNum < sum) maxNum = sum;\n  });\n  // console.log(domain);\n  d3.selectAll(\".vis-themeRiver > *\").remove();\n  let margin = { top: 20, right: 20, bottom: 30, left: 40 };\n  var svg = d3\n    .select(\".vis-themeRiver\")\n    .attr(\"position\", \"relative\")\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    .attr(\"id\", \"themeVis\");\n  var stackGen = d3.stack().keys(domain).order(d3.stackOrderNone);\n  //.offset(d3.stackOffsetWiggle);\n  var stackedSeries = stackGen(data);\n\n  const Riverscale = 1;\n  // Add X axis --> it is a date format\n  let xScale = d3\n    .scaleLinear()\n    .domain(\n      d3.extent(data, function (d) {\n        return parseInt(d.year);\n      })\n    )\n    .range([0, width / Riverscale]);\n\n  //Add X axis\n  const xAxis = d3.axisBottom(xScale).ticks(data.length - 1, \".4\"); //.tickFormat(format(\".4\"));\n  svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .attr(\"id\", \"horizontalAxis\")\n    .call(xAxis)\n    .select(\".domain\")\n    .remove();\n\n  // Add Y axis\n  var yScale = d3\n    .scaleLinear()\n    .domain([0, maxNum])\n    .range([height - 20, 0]);\n  svg.append(\"g\").call(d3.axisLeft(yScale));\n\n  var colorScale = d3\n    .scaleOrdinal()\n    .domain(domain) //TODO\n    .range([\"#045A8D\", \"#2B8CBE\", \"#74A9CF\", \"#A6BDDB\", \"#D0D1E6\", \"#F1EEF6\"]);\n\n  var areaGen = d3\n    .area()\n    .curve(d3.curveBasis)\n    .x((d) => xScale(d.data.year))\n    .y0((d) => yScale(d[0]))\n    .y1((d) => yScale(d[1]));\n\n  d3.select(\"#themeVis\")\n    .selectAll(\".areas\")\n    .data(stackedSeries)\n    .join(\"path\")\n    .attr(\"d\", areaGen)\n    .attr(\"fill\", (d) => colorScale(d.key, \"T\"))\n    .attr(\"class\", \"theme\");\n\n  //change font size of the axis\n  d3.selectAll(\"#themeVis .tick>text\").each(function (d, i) {\n    d3.select(this).style(\"font-size\", \"14px\");\n  });\n  var tooltip = d3\n    .select(\".theme\")\n    .append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0)\n    .html(\n      \"<p>I'm a tooltip written in HTML</p><img src='https://github.com/holtzy/D3-graph-gallery/blob/master/img/section/ArcSmal.png?raw=true'></img><br>Fancy<br><span style='font-size: 40px;'>Isn't it?</span>\"\n    );\n\n  d3.selectAll(\".theme\")\n    .attr(\"opacity\", 1)\n    .on(\"mouseover\", function (event, i) {\n      d3.selectAll(\".theme\").attr(\"opacity\", (d, j) => {\n        if (i.key === d.key) return 1;\n        return 0.8;\n      });\n\n      tooltip.style(\"opacity\", 0.9);\n\n      // d3.selectAll(\".pie\").attr(\"opacity\", (d, j) => {\n      //   if (i.key === d.data.label) return 1;\n      //   return 0.8;\n      // });\n    })\n    .append(\"title\")\n    .text((d) => d.key);\n\n  // .on(\"click\", function (event, i) {\n  //   alert(i.key);\n  // });\n\n  var vertical = d3\n    .select(\".vis-themeRiver\")\n    .append(\"div\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"19\")\n    .style(\"bottom\", \"0px\")\n    .style(\"left\", \"0px\")\n    .style(\"width\", \"1px\")\n    .style(\"height\", height + margin.top + \"px\")\n    .style(\"background\", \"#fff\");\n  d3.select(\".vis-themeRiver\")\n    .on(\"mousemove\", function (event, d) {\n      var mousex = d3.pointer(event);\n      mousex = mousex[0] + 5;\n      vertical.style(\"left\", mousex + \"px\");\n    })\n    .on(\"mouseover\", function (event) {\n      var mousex = d3.pointer(event);\n      mousex = mousex[0] + 5;\n      vertical.style(\"left\", mousex + \"px\");\n    })\n    .on(\"click\", function (event, d) {\n      var mousex = d3.pointer(event);\n      mousex = mousex[0] - margin.left;\n      const padding = (width / Riverscale - margin.left) / (data.length - 1);\n      const target = parseInt(mousex / padding) + yearLB;\n      onChangeYear(target);\n    });\n\n  /*\n  let radius = Math.min(width, height) / 2;\n\n  let arc = d3.arc().innerRadius(0).outerRadius(radius);\n\n  let pie = d3\n    .pie()\n    .value(function (d) {\n      return d.count;\n    })\n    .sort(null);\n  svg\n    .selectAll(\"pie\")\n    .data(pie(dataPie))\n    .enter()\n    .append(\"path\")\n    .attr(\"transform\", \"translate(1000,\" + radius + \")\")\n    .attr(\"d\", arc)\n    .attr(\"class\", \"pie\")\n    .attr(\"fill\", function (d) {\n      return colorScale(d.data.label);\n    });\n    */\n};\n\nexport default draw;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Graph/vis.js",["344","345","346","347","348","349"],"import * as d3 from \"d3\";\nimport colorScale from \"../../colorScale\";\nconst draw = (props) => {\n  d3.selectAll(\".vis-scatter > *\").remove();\n  const { dataV, dataE, selectedTopic } = props;\n  /*\n  const dataV = [\n    { name: \"Apple\", value: 13 },\n    { name: \"Orange\", value: 8 },\n    { name: \"Cake\", value: 34 },\n    { name: \"Peach\", value: 2 },\n    { name: \"Banana\", value: 21 },\n  ];\n  let dataE = [\n    { source: 0, target: 4, value: 1 },\n    { source: 1, target: 3, value: 0.8 },\n    { source: 2, target: 4, value: 0.6 },\n    { source: 4, target: 3, value: 1.3 },\n    { source: 1, target: 4, value: 0.9 },\n    { source: 2, target: 1, value: 1.5 },\n  ];\n*/\n  let keyRange = [];\n  dataV.forEach((d) => {\n    keyRange.push(d.name);\n  });\n\n  const width = 400;\n  const height = 270;\n  let margin = { top: 20, right: 20, bottom: 30, left: 40 };\n  let svg = d3\n    .select(\".vis-scatter\")\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .call(d3.zoom);\n\n  const g = svg\n    .append(\"g\")\n    .attr(\"id\", \"maingroup\")\n    .attr(\"transform\", `translate(${margin.top}, ${margin.right})`);\n  const xScale = d3\n    .scaleLinear()\n    .domain([d3.min(dataV, (d) => d.x), d3.max(dataV, (d) => d.x)])\n    .range([0, 900]);\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([d3.min(dataV, (d) => d.y), d3.max(dataV, (d) => d.y)])\n    .range([0, height - 200]);\n\n  const sizeScale = d3\n    .scaleSqrt()\n    .domain([0, d3.max(dataV, (d) => d.value)])\n    .range([0, 20]);\n\n  //TODO: draw the chart\n  var scaleColor = d3\n    .scaleOrdinal()\n    .domain(d3.range(dataV.length))\n    .range(d3.schemeCategory10);\n\n  var forceSimulation = d3\n    .forceSimulation(dataV)\n    .force(\"link\", d3.forceLink())\n    .force(\"collision\", d3.forceCollide(1).strength(0.1))\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"center\", d3.forceCenter());\n  forceSimulation.nodes(dataV).on(\"tick\", () => {\n    links\n      .attr(\"x1\", function (d) {\n        return d.source.x;\n      })\n      .attr(\"y1\", function (d) {\n        return d.source.y;\n      })\n      .attr(\"x2\", function (d) {\n        return d.target.x;\n      })\n      .attr(\"y2\", function (d) {\n        return d.target.y;\n      });\n    linksText\n      .attr(\"x\", function (d) {\n        return (d.source.x + d.target.x) / 2;\n      })\n      .attr(\"y\", function (d) {\n        return (d.source.y + d.target.y) / 2;\n      });\n    gs &&\n      gs.attr(\"transform\", function (d, i) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\n      });\n  });\n  forceSimulation\n    .force(\"link\")\n    .links(dataE)\n    .distance(function (d, i) {\n      return d.value * 100; //设置边长\n    });\n  forceSimulation\n    .force(\"center\")\n    .x(width / 2) //设置x坐标\n    .y(height / 2); //设置y坐标\n\n  var links = g\n    .append(\"g\")\n    .selectAll(\"line\")\n    .data(dataE)\n    .enter()\n    .append(\"line\")\n    .attr(\"stroke\", function (d, i) {\n      return colorScale(d.name, \"T\"); //设置边线颜色\n    })\n    .attr(\"stroke-width\", \"5\"); //设置边线宽度\n\n  var linksText = g\n    .append(\"g\")\n    .selectAll(\"text\")\n    .data(dataE)\n    .enter()\n    .append(\"text\")\n    .text(function (d, i) {\n      return d.name;\n    });\n  //创建节点分组\n  var gs = g\n    .selectAll(\".circle\")\n    .data(dataV)\n    .enter()\n    .append(\"g\")\n    .attr(\"transform\", function (d, i) {\n      return \"translate(\" + d.x + \",\" + d.y + \")\";\n    })\n    .call(\n      d3\n        .drag() //相当于移动端的拖拽手势  分以下三个阶段\n        .on(\"start\", (event, d) => {\n          if (!d3.active) {\n            forceSimulation.alphaTarget(0.8).restart();\n          }\n          d.fx = event.x;\n          d.fy = event.y;\n        })\n\n        .on(\"drag\", drag)\n        .on(\"end\", (event, d) => {\n          if (!d3.active) {\n            forceSimulation.alphaTarget(0);\n          }\n          d.fx = null;\n          d.fy = null;\n        })\n    );\n\n  //绘制节点\n  let circles = gs\n    .append(\"circle\")\n    .attr(\"r\", (d) => sizeScale(d.value))\n    .attr(\"opacity\", 0.7)\n    .attr(\"stroke\", \"none\")\n    .attr(\"fill\", function (d, i) {\n      return colorScale(d.name, \"T\");\n    })\n    .on(\"click\", function (d) {\n      console.log(d3.select(this).text());\n    })\n    .on(\"mouseover\", function (d) {\n      d3.select(this)\n        .attr(\"opacity\", 0.5)\n        .attr(\"stroke\", \"white\")\n        .attr(\"stroke-width\", 6);\n    })\n    .on(\"mouseout\", function (d) {\n      d3.select(this).attr(\"opacity\", 0.7).attr(\"stroke\", \"none\");\n    })\n    .append(\"title\")\n    .text(\n      (d) => d.name //+ \": \" + format(\",\")(d[`${caseType}`])\n    );\n\n  gs.append(\"title\").text(function (d, i) {\n    return d.name;\n  });\n  const zoom = d3\n    .zoom()\n    .scaleExtent([1, 40])\n    .on(\"zoom\", (event, d) => {\n      let k = (event.transform.k - 1) * 0.1 + 1;\n      g.attr(\n        \"transform\",\n        \"translate(\" +\n          event.transform.x / 5 +\n          \",\" +\n          event.transform.y / 5 +\n          \") scale(\" +\n          k +\n          \")\"\n      );\n    });\n  //svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity);\n};\n\nfunction drag(event, d) {\n  d.fx = event.x;\n  d.fy = event.y;\n}\n\nexport default draw;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/colorScale.js",["350"],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/drawLegend.js",["351","352"],"//import colorScale from \"../colorScale\";\nimport * as d3 from \"d3\";\nimport { scaleLinear } from \"d3\";\nconst draw = (props) => {\n  let { keyw } = props;\n  d3.selectAll(\".Legend-vis > *\").remove();\n  var data_legend = [];\n  console.log(props);\n  for (let k in keyw) {\n    let temp = {};\n    temp[\"name\"] = k;\n    temp[\"value\"] = keyw[k];\n    data_legend.push(temp);\n  }\n  var colorScale = d3\n    .scaleOrdinal()\n    .domain(data_legend.map((d) => d.name)) //TODO\n    .range([\"#045A8D\", \"#2B8CBE\", \"#74A9CF\", \"#A6BDDB\", \"#D0D1E6\", \"#F1EEF6\"]);\n\n  const yScale = d3\n    .scaleBand()\n    .domain(data_legend.map((d) => d.color))\n    .range([0, 500])\n    .padding(0.1);\n\n  console.log(data_legend);\n  var svg = d3\n    .select(\".Legend-vis\")\n    .attr(\"position\", \"relative\")\n    .append(\"svg\")\n    .attr(\"width\", 200)\n    .attr(\"height\", 200);\n\n  var legend = svg\n    .selectAll(\".legend\")\n    .data(data_legend)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"legend\")\n    .append(\"rect\")\n    .attr(\"width\", (d) => d.value)\n    .attr(\"height\", \"10px\")\n    .attr(\"x\", \"10px\")\n    .attr(\"y\", (d) => yScale(d.color))\n    .attr(\"fill\", (d) => colorScale(d.name, \"T\"));\n};\nexport default draw;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/HiddenBox.js",["353"],"import React, { Component } from \"react\";\nimport \"./HiddenBox.css\";\nimport { forEach } from \"lodash\";\nimport Notice from \"./Notice\";\nimport Axios from \"axios\";\nclass HiddenBox extends Component {\n  state = {\n    open: false,\n  };\n  keywordInfo = { info: [] };\n  handleClickToOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleToClose = () => {\n    this.setState({ open: false });\n  };\n  async click(k, topic) {\n    //alert(topic);\n    await Axios.get(\"http://localhost:3001/getLegend\", {\n      params: {\n        keyw: k,\n        year: this.props.selectedYear,\n        topic: topic,\n      },\n    }).then((response) => {\n      this.keywordInfo = {\n        school: topic,\n        keyword: k,\n        info: [],\n      };\n      const data = response.data;\n      for (let d of data) {\n        this.keywordInfo.info.push({\n          title: d.title,\n          mentor: d.mentor,\n        });\n      }\n    });\n    this.setState({ open: true });\n  }\n\n  render() {\n    let show = \"none\";\n    const { keys, topic } = this.props;\n    if (this.props.chosen === this.props.id) show = \"block\";\n    return (\n      <div class=\"hidden\" style={{ display: show }}>\n        {/* <span class=\"badge bg-primary\">Keyword</span> */}\n        <ul class=\"list\">\n          {keys[topic].map((k) => {\n            return (\n              <li class=\"item\" key={k} onClick={() => this.click(k, topic)}>\n                {k}\n              </li>\n            );\n          })}\n        </ul>\n        <Notice\n          open={this.state.open}\n          handleToClose={this.handleToClose}\n          keywordInfo={this.keywordInfo}\n        />\n      </div>\n    );\n  }\n}\n\nexport default HiddenBox;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/data/cloud.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/data/allTopic2.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/DashboardT.js",["354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369"],"import React, { Component } from \"react\";\nimport { select, csv, map } from \"d3\";\nimport { Layout } from \"antd\";\nimport Axios from \"axios\";\nimport \"./dashboardT.css\";\nimport weight from \"./graphWeight\";\nimport { forEach, range } from \"lodash\";\nimport ThemeRiver from \"./charts/ThemeRiver/index\";\nimport Search from \"./components/search\";\nimport allTopic from \"./data/allTopic\";\nimport Legend from \"./components/legend\";\nimport Info from \"./components/info\";\nimport Recommend from \"./components/recommend\";\nimport Scatter from \"./charts/Graph/index\";\nimport Cloud from \"./components/cloud\";\nimport detailedKey from \"./detailedKey\";\n\nimport Year from \"./components/year\";\nconst { Sider, Content, Footer } = Layout;\n\nexport default class DashboardT extends Component {\n  componentDidMount() {\n    this.getData();\n    this.updateGraph();\n  }\n  state = {\n    data: [],\n    Keys: [],\n    dataE: [],\n    dataV: [],\n    dataRecom: [],\n    selectedMentor: [\"董笑菊\"],\n    selectedTopic: allTopic,\n    selectedYear: \"2018\",\n    dataTheme: [\n      { year: 2019 },\n      { year: 2018 },\n      { year: 2017 },\n      { year: 2016 },\n      { year: 2015 },\n    ],\n    dataLegend: {},\n    dataRecomKey: {},\n  };\n  changeYearHandle = async (target) => {\n    await this.setState({ selectedYear: target.toString() });\n    Axios.post(\"http://localhost:3001/changeYear\", {\n      selectedYear: this.state.selectedYear,\n    }).then(() => {\n      // alert(\"success\");\n    });\n    Axios.get(\"http://localhost:3001/getYear\", {\n      params: { year: this.state.selectedYear },\n    }).then((response) => {\n      console.log(response);\n    });\n    await this.updateLegend();\n    await this.updateGraph();\n  };\n  changeTopicHandle = async (target) => {\n    if (target === \"全选\") this.setState({ selectedTopic: allTopic });\n    else await this.setState({ selectedTopic: [target] });\n    await this.updateTheme();\n    await this.updateGraph();\n  };\n  changeMentorHandle = async (target) => {\n    await this.setState({ selectedMentor: [target] });\n    await this.updateTheme();\n    await this.updateGraph();\n  };\n  getData() {\n    csv(\"./data_brief.csv\").then((data) => {\n      data.forEach((d) => {\n        d.school = d.school.slice(5);\n        if (d.school === \"上海交大-密西根大学联合学院\")\n          d.school = \"上海交大密西根学院\";\n        if (d.school === \"上海交通大学上海高级金融学院\")\n          d.school = \"上海高级金融学院\";\n        /*let arr = [];\n        if (d.keyword[d.keyword.length - 1] === \";\")\n          d.keyword.slice(0, d.keyword.length - 1);\n        if (d.keyword.indexOf(\";\") !== -1) arr = d.keyword.split(\";\");\n        //get rid of the last \";\"\n        else if (d.keyword.indexOf(\"\") !== -1) arr = d.keyword.split(\",\");\n        for (let i = 0; i < arr.length; i++) {\n        */\n        //  arr[i] = arr[i].replace(/\\s*/g, \"\");\n        //}\n        //d.keyword = arr;\n      });\n      this.setState({ data: data });\n\n      this.updateGraph();\n      this.updateTheme();\n    });\n    let Keys = [];\n    csv(\"./Keys2.csv\").then((data) => {\n      Keys = data;\n      this.setState({ Keys: Keys });\n    });\n  }\n  eliminateNan(index, range, newDataTheme, value) {\n    for (let i = 0; i < range; i++) {\n      if (i !== index && !newDataTheme[i].hasOwnProperty(value))\n        newDataTheme[i][value] = 0;\n    }\n  }\n  async updateTheme() {\n    let { data, selectedTopic, selectedMentor } = this.state;\n    let yearRange = [\"2019\", \"2018\"];\n    let newDataTheme = [{ year: 2019 }, { year: 2018 }];\n    let list = [];\n    for (let year of yearRange) {\n      const response = await Axios.get(\"http://localhost:3001/getTheme\", {\n        params: {\n          year: year,\n          topic: this.state.selectedTopic[0],\n        },\n      });\n      let data = response.data;\n      for (let i = 0; i < 8; i++) {\n        //console.log(data[i]);\n        if (list.indexOf(data[i].keyw) == -1) list.push(data[i].keyw);\n      }\n      for (let i = 0; i < 8; i++)\n        newDataTheme[this.getYearIndex(year)][data[i].keyw] = data[i].num;\n    }\n    for (let year of yearRange) {\n      for (let item of list) {\n        if (!newDataTheme[this.getYearIndex(year)].hasOwnProperty(item))\n          newDataTheme[this.getYearIndex(year)][item] = 0;\n      }\n    }\n    this.setState({ dataTheme: newDataTheme });\n    /*\n    let filtered = data.filter((d) => {\n      return isMentor\n        ? selectedMentor[0] === d[\"mentor\"]\n        : selectedTopic.indexOf(d[\"school\"]) != -1;\n    });\n\n    filtered.forEach((d) => {\n      var temp;\n      if (!newDataTheme[this.getYearIndex(d.year)].hasOwnProperty(d[key]))\n        newDataTheme[this.getYearIndex(d.year)][d[key]] = 1;\n      else newDataTheme[this.getYearIndex(d.year)][d[key]]++;\n      this.eliminateNan(this.getYearIndex(d.year), 5, newDataTheme, d[key]);\n    });\n    */\n\n    this.updateLegend();\n  }\n  updateLegend() {\n    const { dataTheme, selectedYear } = this.state;\n    if (selectedYear === \"2019\") this.setState({ dataLegend: dataTheme[0] });\n    if (selectedYear === \"2018\") this.setState({ dataLegend: dataTheme[1] });\n    if (selectedYear === \"2017\") this.setState({ dataLegend: dataTheme[2] });\n    if (selectedYear === \"2016\") this.setState({ dataLegend: dataTheme[3] });\n    if (selectedYear === \"2015\") this.setState({ dataLegend: dataTheme[4] });\n  }\n  updateGraph() {\n    const { selectedTopic } = this.state;\n    let recomSet = {};\n\n    const target = selectedTopic[0];\n    const index = allTopic.indexOf(target); //TODO\n\n    let keysSorted = Object.keys(weight[index]).sort(function (a, b) {\n      return weight[index][b] - weight[index][a];\n    });\n    for (let i = 0; i < 8; i++) {\n      recomSet[keysSorted[i]] = weight[index][keysSorted[i]];\n    }\n    this.setState({ dataRecom: recomSet });\n    const temp = detailedKey[allTopic.indexOf(selectedTopic[0])];\n    this.setState({\n      dataRecomKey: temp,\n    });\n  }\n  getYearIndex(selectedYear) {\n    if (selectedYear === \"2019\") return 0;\n    if (selectedYear === \"2018\") return 1;\n    if (selectedYear === \"2017\") return 2;\n    if (selectedYear === \"2016\") return 3;\n    if (selectedYear === \"2015\") return 4;\n  }\n  render() {\n    let {\n      data,\n      selectedYear,\n      selectedTopic,\n      selectedMentor,\n      dataTheme,\n      dataLegend,\n      dataRecom,\n      dataRecomKey,\n    } = this.state;\n    const isMentor = this.props.match.path === \"/Mentor\";\n    var name;\n    var dataScatterV = [];\n    var dataScatterE = [];\n    if (!isMentor) {\n      name = selectedTopic;\n      dataTheme.forEach((d) => {\n        if (d.year == String(selectedYear)) {\n          for (let key in d) {\n            let temp = {};\n            temp[\"name\"] = key;\n            temp[\"value\"] = d[key];\n            dataScatterV.push(temp);\n          }\n        }\n      });\n    } else {\n    }\n    return (\n      <div>\n        <section>\n          <div class=\"mainbox\">\n            <div class=\"column\">\n              <div class=\"panel profile\">\n                <div class=\"boxhead\">查询 Search</div>\n                <Search\n                  onChangeTopic={this.changeTopicHandle}\n                  onChangeMentor={this.changeMentorHandle}\n                  isMentor={isMentor}\n                />\n                <Year onChangeYear={this.changeYearHandle} />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n            <div class=\"column\">\n              <div class=\"panel themeriver\">\n                <div class=\"boxhead\">Cloud</div>\n                <Cloud selectedTopic={selectedTopic} />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n            <div class=\"column\">\n              <div class=\"panel info\">\n                <div class=\"boxhead\">Keyword Barchart</div>\n                <Legend\n                  selectedTopic={selectedTopic[0]}\n                  selectedMentor={selectedMentor}\n                  data={dataLegend}\n                  selectedYear={selectedYear}\n                  isMentor={isMentor}\n                />\n                {/* <Info\n                  selectedYear={selectedYear}\n                  selectedMentor={selectedMentor}\n                  selectedTopic={selectedTopic}\n                /> */}\n\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"mainbox\">\n            <div class=\"column\">\n              <div class=\"panel recommend\">\n                <div class=\"boxhead\">School Relation</div>\n                <Recommend\n                  data={dataRecom}\n                  keys={dataRecomKey}\n                  fulldata={data}\n                  selectedYear={selectedYear}\n                />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n            <div class=\"column\">\n              <div class=\"panel graph\">\n                <div class=\"boxhead\">Keyword Themeriver</div>\n                <ThemeRiver\n                  data={dataTheme}\n                  width={1150}\n                  height={600}\n                  isMentor={isMentor}\n                  selectedYear={selectedYear}\n                  onChangeMentor={this.changeMentorHandle}\n                  onChangeYear={this.changeYearHandle}\n                  onChangeTopic={this.changeTopicHandle}\n                />\n                <div class=\"panel-footer\"></div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <script src=\"dist/main.js\"></script>\n      </div>\n    );\n  }\n}\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/DashboardR.js",["370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409"],"import React, { Component } from \"react\";\nimport { select, csv, map, count } from \"d3\";\nimport { Layout } from \"antd\";\nimport Axios from \"axios\";\nimport \"./dashboardR.css\";\nimport Pool from \"./pool\";\nimport weight from \"./graphWeight\";\nimport { forEach, range } from \"lodash\";\nimport ThemeRiver from \"./charts/ThemeRiver/index\";\nimport Search from \"./components/search\";\nimport allTopic from \"./data/allTopic\";\nimport Legend from \"./components/legend\";\nimport Info from \"./components/info\";\nimport Recommend from \"./components/recommend\";\nimport Scatter from \"./charts/Graph/index\";\nimport Cloud from \"./components/cloud\";\nimport detailedKey from \"./detailedKey\";\nimport Line from \"./charts/Line/index\";\nimport Map from \"./charts/Map/index\";\nimport mentorRelation from \"./mentorRelation\";\nimport MapBox from \"./components/MapBox\";\nimport Flow from \"./charts/Sankey/index\";\nimport { Tooltip } from \"react-bootstrap\";\n// import { bootstrap } from \"bootstrap\";\nconst { Sider, Content, Footer } = Layout;\n\nexport default class DashboardR extends Component {\n  componentDidMount() {\n    this.getData();\n    this.updateGraph();\n    this.updateMap();\n    this.updateFlow();\n  }\n  state = {\n    data: [],\n    Keys: [],\n    dataE: [],\n    dataV: [],\n    dataRecom: [],\n    selectedMentor: [\"明新国\", \"史占中\", \"孙小明\", \"顾孟迪\", \"吕巍\"],\n    selectedMentorL: [],\n    selectedTopic: allTopic,\n    selectedYear: \"2019\",\n    dataTheme: [\n      { year: 2019 },\n      { year: 2018 },\n      { year: 2017 },\n      { year: 2016 },\n      { year: 2015 },\n    ],\n    dataLegend: {},\n    dataRecomKey: {},\n    mapNode: [],\n    mapEdge: [],\n    flowNode: [],\n    flowLink: [],\n  };\n  changeYearHandle = (target) => {\n    this.setState({ selectedYear: target.toString() });\n    Axios.post(\"http://localhost:3001/changeYear\", {\n      selectedYear: this.state.selectedYear,\n    }).then(() => {\n      alert(\"success\");\n    });\n    Axios.get(\"http://localhost:3001/getYear\", {\n      params: { year: this.state.selectedYear },\n    }).then((response) => {\n      // console.log(response);\n    });\n    //this.updateLegend();\n    //this.updateGraph();\n  };\n  changeTopicHandle = (target) => {\n    if (target === \"全选\") this.setState({ selectedTopic: allTopic });\n    else this.setState({ selectedTopic: [target] });\n    this.updateTheme();\n    this.updateGraph();\n  };\n  changeMentorHandle = async (target) => {\n    this.setState({ selectedMentor: [target] });\n    // this.updateTheme();\n    // this.updateGraph();\n    await this.updateMap();\n  };\n  appendMentorHandle = (target) => {\n    const mentorL = this.state.selectedMentorL;\n    if (mentorL.indexOf(target) === -1) mentorL.push(target);\n    else mentorL.splice(mentorL.indexOf(target), 1);\n    console.log(\"mentorL\", mentorL);\n    this.setState({ selectedMentorL: mentorL });\n    this.updateFlow();\n  };\n  resetMentorLHandle = async () => {\n    await this.setState({ selectedMentorL: [] });\n    await this.updateFlow();\n  };\n  getData() {\n    csv(\"./data_brief.csv\").then((data) => {\n      data.forEach((d) => {\n        d.school = d.school.slice(5);\n        if (d.school === \"上海交大-密西根大学联合学院\")\n          d.school = \"上海交大密西根学院\";\n        if (d.school === \"上海交通大学上海高级金融学院\")\n          d.school = \"上海高级金融学院\";\n        /*let arr = [];\n        if (d.keyword[d.keyword.length - 1] === \";\")\n          d.keyword.slice(0, d.keyword.length - 1);\n        if (d.keyword.indexOf(\";\") !== -1) arr = d.keyword.split(\";\");\n        //get rid of the last \";\"\n        else if (d.keyword.indexOf(\"\") !== -1) arr = d.keyword.split(\",\");\n        for (let i = 0; i < arr.length; i++) {\n        */\n        //  arr[i] = arr[i].replace(/\\s*/g, \"\");\n        //}\n        //d.keyword = arr;\n      });\n      this.setState({ data: data });\n\n      this.updateGraph();\n      this.updateTheme();\n    });\n    let Keys = [];\n    csv(\"./Keys2.csv\").then((data) => {\n      Keys = data;\n      this.setState({ Keys: Keys });\n    });\n  }\n  eliminateNan(index, range, newDataTheme, value) {\n    for (let i = 0; i < range; i++) {\n      if (i !== index && !newDataTheme[i].hasOwnProperty(value))\n        newDataTheme[i][value] = 0;\n    }\n  }\n  async updateTheme() {\n    let { data, selectedTopic, selectedMentor } = this.state;\n    const isMentor = this.props.match.path === \"/Mentor\";\n    let key = isMentor ? \"mentor\" : \"school\";\n    let yearRange = [\"2019\", \"2018\"];\n    let newDataTheme = [{ year: 2019 }, { year: 2018 }];\n    let list = [];\n    for (let year of yearRange) {\n      const response = await Axios.get(\"http://localhost:3001/getTheme\", {\n        params: {\n          year: year,\n          topic: this.state.selectedTopic[0],\n        },\n      });\n      let data = response.data;\n      for (let i = 0; i < 8; i++) {\n        //console.log(data[i]);\n        if (list.indexOf(data[i].keyw) == -1) list.push(data[i].keyw);\n      }\n      for (let i = 0; i < 8; i++)\n        newDataTheme[this.getYearIndex(year)][data[i].keyw] = data[i].num;\n    }\n    for (let year of yearRange) {\n      for (let item of list) {\n        if (!newDataTheme[this.getYearIndex(year)].hasOwnProperty(item))\n          newDataTheme[this.getYearIndex(year)][item] = 0;\n      }\n    }\n    this.setState({ dataTheme: newDataTheme });\n    /*\n    let filtered = data.filter((d) => {\n      return isMentor\n        ? selectedMentor[0] === d[\"mentor\"]\n        : selectedTopic.indexOf(d[\"school\"]) != -1;\n    });\n\n    filtered.forEach((d) => {\n      var temp;\n      if (!newDataTheme[this.getYearIndex(d.year)].hasOwnProperty(d[key]))\n        newDataTheme[this.getYearIndex(d.year)][d[key]] = 1;\n      else newDataTheme[this.getYearIndex(d.year)][d[key]]++;\n      this.eliminateNan(this.getYearIndex(d.year), 5, newDataTheme, d[key]);\n    });\n    */\n\n    this.updateLegend();\n  }\n  updateLegend() {\n    const { dataTheme, selectedYear } = this.state;\n    if (selectedYear === \"2019\") this.setState({ dataLegend: dataTheme[0] });\n    if (selectedYear === \"2018\") this.setState({ dataLegend: dataTheme[1] });\n    if (selectedYear === \"2017\") this.setState({ dataLegend: dataTheme[2] });\n    if (selectedYear === \"2016\") this.setState({ dataLegend: dataTheme[3] });\n    if (selectedYear === \"2015\") this.setState({ dataLegend: dataTheme[4] });\n  }\n  async updateMap() {\n    const { selectedMentor, selectedYear } = this.state;\n    const mentorNode = [];\n    const mentor = selectedMentor[0];\n    const year = selectedYear;\n    let count = 0;\n    const mentorEdge = [];\n    const allMentor = [mentor];\n    // console.log(mentorRelation[mentor]);\n    for (let m of mentorRelation[mentor]) {\n      // console.log(m);\n      allMentor.push(m.name);\n    }\n    for (let m of allMentor) {\n      // for every mentor of interest\n      const response = await Axios.get(\"http://localhost:3001/getMentor\", {\n        params: {\n          year,\n          mentorOI: m,\n        },\n      });\n      const data = response.data;\n      // console.log(data);\n      const keywordList = [];\n      // keywordList = [\"aaa;bbb;ccc\"]\n\n      for (let i of data) {\n        keywordList.push(i.keyword);\n      }\n      // console.log(keywordList);\n      const temp = [];\n      for (let keyword of keywordList) {\n        // filter the keywords in the pool\n        Pool.filter((d) => {\n          if (keyword.indexOf(d) > -1 && temp.indexOf(d) == -1) temp.push(d);\n        });\n      }\n      //temp = [\"aaa\", \"bbb\", \"ccc\"]\n      mentorNode.push({\n        id: count,\n        name: m,\n        school: \"aaa\",\n        type: 0,\n        keywords: temp,\n      });\n      if (count > 0)\n        mentorEdge.push({\n          id: count,\n          source: 0,\n          target: count,\n          relation: \"相关\",\n          value: 1,\n        });\n      count++;\n    }\n\n    this.setState({ mapNode: mentorNode, mapEdge: mentorEdge });\n  }\n  async updateFlow() {\n    const { selectedMentorL, selectedYear } = this.state;\n    let index = 0;\n    let mentorIndex = {},\n      schoolIndex = {},\n      keywIndex = {},\n      nodes = [],\n      links = [];\n    let keywPool = [];\n    let mentorHasOne = {}; // dealing with hierarchy\n    for (let m of selectedMentorL) {\n      // for every mentor of interest\n      mentorHasOne[m] = false;\n      const response = await Axios.get(\"http://localhost:3001/getMentor\", {\n        params: {\n          year: selectedYear,\n          mentorOI: m,\n        },\n      });\n      const data = response.data;\n      const school = data[0].school;\n\n      // add school/mentor\n      if (schoolIndex[school] === undefined) {\n        nodes.push({ name: school });\n        schoolIndex[school] = index;\n        index++;\n      }\n      if (mentorIndex[m] === undefined) {\n        nodes.push({ name: m });\n        mentorIndex[m] = index;\n        index++;\n      }\n      links.push({\n        source: schoolIndex[school],\n        target: mentorIndex[m],\n        value: 2,\n      });\n\n      const keywordList = [];\n      // keywordList = [\"aaa;bbb;ccc\"]\n      for (let i of data) {\n        keywordList.push(i.keyword);\n      }\n      const temp = [];\n      for (let keyword of keywordList) {\n        // filter the keywords in the pool\n        Pool.filter((d) => {\n          if (keyword.indexOf(d) > -1 && temp.indexOf(d) == -1) temp.push(d);\n        });\n      }\n      for (let d of temp) {\n        // filter the keywords in the pool\n        if (keywIndex[d] !== undefined) {\n          //already has keyw node\n          mentorHasOne[m] = true;\n          links.push({\n            source: mentorIndex[m],\n            target: keywIndex[d],\n            value: 2,\n          });\n        } else {\n          // not exist, check in pool\n          const res = keywPool.filter((k) => k.keyword === d);\n          if (res.length > 0) {\n            // keyword found in previous search\n            mentorHasOne[m] = true;\n            const prevRecord = res[0];\n            nodes.push({ name: d });\n            keywIndex[d] = index;\n            links.push({\n              source: mentorIndex[prevRecord.mentor],\n              target: index,\n              value: 2,\n            });\n            links.push({\n              source: mentorIndex[m],\n              target: index,\n              value: 2,\n            });\n            index++;\n          } else keywPool.push({ mentor: m, keyword: d });\n        }\n      }\n    }\n    for (let m in mentorHasOne) {\n      if (mentorHasOne[m] === false) {\n        nodes.push({ name: \"null\" });\n        links.push({\n          source: mentorIndex[m],\n          target: index,\n          value: 2,\n        });\n        index++;\n      }\n    }\n    this.setState({ flowNode: nodes, flowLink: links });\n  }\n  updateGraph() {\n    const isMentor = this.props.match.path === \"/Mentor\";\n    const { data, selectedYear, selectedTopic, Keys } = this.state;\n    let edgeSet = [],\n      verticeSet = [];\n    let recomSet = {};\n\n    const target = selectedTopic[0];\n    const index = allTopic.indexOf(target); //TODO\n    let count = 1;\n    verticeSet.push({\n      name: target,\n      value: 10,\n    });\n\n    let keysSorted = Object.keys(weight[index]).sort(function (a, b) {\n      return weight[index][b] - weight[index][a];\n    });\n    for (let i = 0; i < 8; i++) {\n      recomSet[keysSorted[i]] = weight[index][keysSorted[i]];\n    }\n    this.setState({ dataRecom: recomSet });\n    const temp = detailedKey[allTopic.indexOf(selectedTopic[0])];\n    this.setState({\n      dataRecomKey: temp,\n    });\n    for (let key in weight[index]) {\n      if (weight[index][key] > 0) {\n        verticeSet.push({\n          name: key,\n          value: 3,\n        });\n        edgeSet.push({\n          source: 0,\n          target: count,\n          value: Math.sqrt(2 / weight[index][key]),\n        });\n        count++;\n      }\n    }\n    this.setState({ dataV: verticeSet });\n    this.setState({ dataE: edgeSet });\n  }\n  getYearIndex(selectedYear) {\n    if (selectedYear === \"2019\") return 0;\n    if (selectedYear === \"2018\") return 1;\n    if (selectedYear === \"2017\") return 2;\n    if (selectedYear === \"2016\") return 3;\n    if (selectedYear === \"2015\") return 4;\n  }\n  render() {\n    let {\n      data,\n      selectedYear,\n      selectedTopic,\n      selectedMentor,\n      dataV,\n      dataE,\n      dataTheme,\n      dataLegend,\n      dataRecom,\n      dataRecomKey,\n      mapNode,\n      mapEdge,\n      selectedMentorL,\n    } = this.state;\n\n    const isMentor = this.props.match.path === \"/Mentor\";\n    var name;\n    var dataScatterV = [];\n    var dataScatterE = [];\n    if (!isMentor) {\n      name = selectedTopic;\n      dataTheme.forEach((d) => {\n        if (d.year == String(selectedYear)) {\n          for (let key in d) {\n            let temp = {};\n            temp[\"name\"] = key;\n            temp[\"value\"] = d[key];\n            dataScatterV.push(temp);\n          }\n        }\n      });\n    } else {\n    }\n    return (\n      <div>\n        <section class=\"relationView\">\n          <div class=\"section1\">\n            <div class=\"mainbox\">\n              {/* <div class=\"column\">\n                <div class=\"panel profile\">\n                  <div class=\"boxhead\">查询 Search</div>\n                  <Search\n                    onChangeTopic={this.changeTopicHandle}\n                    onChangeMentor={this.changeMentorHandle}\n                    isMentor={isMentor}\n                  />\n                  <div class=\"panel-footer\"></div>\n                </div>\n              </div> */}\n\n              <div class=\"column\">\n                <div class=\"panel info\">\n                  <div class=\"boxhead\">\n                    Sankey Graph\n                    <button\n                      className=\"clearButton btn btn-warning\"\n                      onClick={() => this.resetMentorLHandle()}\n                    >\n                      clear Sankey\n                    </button>\n                  </div>\n\n                  {/* <Scatter\n                    dataV={dataV}\n                    dataE={dataE}\n                    selectedTopic={selectedTopic}\n                  />  */}\n                  <Flow\n                    data={{\n                      nodes: this.state.flowNode,\n                      links: this.state.flowLink,\n                    }}\n                  />\n                  <div class=\"panel-footer\"></div>\n                </div>\n              </div>\n            </div>\n            {/* <div class=\"mainbox\">\n              <div class=\"column\">\n                <div class=\"panel recommend\">\n                  <div class=\"boxhead\">Recommendation</div>\n                  <Recommend\n                    data={dataRecom}\n                    keys={dataRecomKey}\n                    fulldata={data}\n                  />\n                  <div class=\"panel-footer\"></div>\n                </div>\n              </div>\n            </div> */}\n          </div>\n          <div class=\"section2\">\n            <div class=\"mainbox\">\n              <div class=\"column\">\n                <div class=\"panel graph\">\n                  <div class=\"boxhead\">Knowledge Graph</div>\n                  <MapBox\n                    mapNode={mapNode}\n                    mapEdge={mapEdge}\n                    onChangeMentor={this.changeMentorHandle}\n                    selectedMentor={selectedMentor}\n                    selectedMentorL={selectedMentorL}\n                    onAppendMentorL={this.appendMentorHandle}\n                  />\n                  <div class=\"panel-footer\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <script src=\"dist/main.js\"></script>\n      </div>\n    );\n  }\n}\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Line/index.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Line/vis.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/year.jsx",["410"],"import React, { Component } from 'react';\nimport \"./year.css\"\nclass Year extends Component {\n  state = {  }\n  Select(){\n    var obj = document.getElementById(\"year\"); //定位id\n    var index = obj.selectedIndex; // 选中索引\n    var text = obj.options[index].text; // 选中文本\n    var value = obj.options[index].value; // 选中值\n    this.props.onChangeYear(value)\n  }\n  render() {\n    let yearRange = [\"2018\", \"2019\"] \n    return ( \n      <select class=\"form-select\" aria-label=\"Default select example\" id = \"year\"  onChange = {()=>this.Select()}>\n\n        {\n          yearRange.map((year)=>{\n            return <option value={year}>{year}</option>\n          })\n        }\n      </select>\n     );\n  }\n}\n \nexport default Year;","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Map/index.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Map/vis.js",["411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460"],"import * as d3 from \"d3\";\nimport Axios from \"axios\";\nimport React from \"react\";\n// import colorScale from \"../../colorScale\";\n\nconst draw = ({\n  mapNode,\n  mapEdge,\n  scale,\n  width,\n  height,\n  onChangeMentor,\n  selectedMentor,\n  handleClickToOpen,\n}) => {\n  // color scale\n  const edgeColor = \"#999\";\n  const colorScale = {\n    安泰经济与管理学院: \"#e8d4d4\",\n    化学化工学院: \"#F7B5A2\",\n    机械动力与工程学院: \"#B9E4DD\",\n    aaa: \"#F7B5A2\",\n  };\n\n  const keywColor = \"rgb(230, 230, 255)\";\n  const keywColorH = \"rgb(72, 75, 255)\";\n  const circleColor = \"#e8d4d4\";\n  const circleWordColor = \"#111\";\n  const keywHightlight = (d, isHighlight) => {\n    if (isHighlight) {\n      d3.selectAll(\".keyword\").attr(\"fill\", (di) => {\n        return di == d ? keywColorH : keywColor;\n      });\n    } else d3.selectAll(\".keyword\").attr(\"fill\", keywColor);\n  };\n\n  // edge scale\n  const keywordOffset = (count, index) => {\n    const angle = (2 * Math.PI) / count;\n    const ret = { x: 0, y: 0 };\n    ret.x = Math.cos(angle * index) * keywEdgeLength(count);\n    ret.y = Math.sin(angle * index) * keywEdgeLength(count);\n    return ret;\n  };\n  const MentorCircleR = (length) => {\n    if (length <= 8) return 50 * scale;\n    else return ((2 * length) / Math.PI) * 10 * scale;\n  };\n  const MentorEdgeLength = 200 * scale;\n  const keywEdgeLength = (length) => MentorCircleR(length) * 1.5;\n  const KeywordCircleR = 20 * scale;\n\n  const showPaperList = async (d, mentorOI) => {\n    const keywordInfo = { info: [] };\n    const response = await Axios.get(\"http://localhost:3001/getMentor\", {\n      params: {\n        mentorOI,\n        year: \"2019\",\n      },\n    });\n    const data = response.data;\n    let arr = \"当前教师：\" + mentorOI + \"\\n当前关键词：\" + d + \"\\n\\n\";\n\n    for (let di of data) {\n      if (di[\"keyword\"].indexOf(d) > -1) {\n        keywordInfo.info.push({\n          title: di.title,\n          mentor: mentorOI,\n        });\n      }\n    }\n    // data.forEach((di) => {\n    //   if (di[\"keyword\"].indexOf(d) > -1) {\n    //     arr += di[\"title\"] + \"\\n\";\n    //   }\n    // });\n    // alert(arr);\n    handleClickToOpen(keywordInfo);\n  };\n  let margin = { top: 10, bottom: 10, left: 10, right: 10 };\n  d3.selectAll(\".vis-map > *\").remove();\n  let svg = d3\n    .select(\".vis-map\")\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom);\n\n  svg\n    .call(\n      d3.zoom().on(\"zoom\", function (event) {\n        g.attr(\"transform\", event.transform);\n      })\n    )\n    .on(\"dblclick.zoom\", null);\n  let g = svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.top + \",\" + margin.left + \")\")\n    .attr(\"class\", \"container\");\n  // 准备数据\n  // 节点集\n  // let nodes = [\n  //   {\n  //     id: 1,\n  //     name: \"周洁如\",\n  //     school: \"安泰经济与管理学院\",\n  //     type: 0,\n  //     keywords: [\"神经网络\", \"可视化\"],\n  //   },\n  //   {\n  //     id: 12,\n  //     name: \"江平开\",\n  //     school: \"化学化工学院\",\n  //     type: 0,\n  //     keywords: [\"神经网络\", \"可视化\"],\n  //   },\n  //   {\n  //     id: 2,\n  //     name: \"吕巍\",\n  //     school: \"安泰经济与管理学院\",\n  //     type: 0,\n  //     keywords: [\"神经网络\", \"可视化\"],\n  //   },\n  //   {\n  //     id: 3,\n  //     name: \"张鹏翥\",\n  //     school: \"化学化工学院\",\n  //     type: 0,\n  //     keywords: [\"神经网络\", \"可视化\"],\n  //   },\n  //   {\n  //     id: 4,\n  //     name: \"蒋炜\",\n  //     school: \"安泰经济与管理学院\",\n  //     type: 0,\n  //     keywords: [\"神经网络\", \"可视化\"],\n  //   },\n  //   {\n  //     id: 5,\n  //     name: \"田澎\",\n  //     school: \"机械动力与工程学院\",\n  //     type: 0,\n  //     keywords: [\"神经网络\", \"可视化\"],\n  //   },\n  //   {\n  //     id: 6,\n  //     name: \"黄丞\",\n  //     school: \"机械动力与工程学院\",\n  //     type: 0,\n  //     keywords: [\"神经网络\", \"可视化\"],\n  //   },\n  //   {\n  //     id: 7,\n  //     name: \"周颖\",\n  //     school: \"安泰经济与管理学院\",\n  //     type: 0,\n  //     keywords: [\"神经网络\", \"可视化\"],\n  //   },\n  //   {\n  //     id: 8,\n  //     name: \"顾琴轩\",\n  //     school: \"安泰经济与管理学院\",\n  //     type: 0,\n  //     keywords: [\"神经网络\", \"可视化\"],\n  //   },\n  //   {\n  //     id: 9,\n  //     name: \"费一文\",\n  //     school: \"化学化工学院\",\n  //     type: 0,\n  //     keywords: [\"神经网络\", \"可视化\"],\n  //   },\n  // ];\n  // mapNode = [\n  //   {\n  //     id: 0,\n  //     name: \"董笑菊\",\n  //     school: \"化学化工学院\",\n  //     type: 0,\n  //     keywords: [\"可视化\", \"可视化\", \"可视化\"],\n  //   },\n  //   {\n  //     id: 1,\n  //     name: \"萧冰\",\n  //     school: \"化学化工学院\",\n  //     type: 0,\n  //     keywords: [\"可视化\", \"可视化\"],\n  //   },\n  //   {\n  //     id: 2,\n  //     name: \"明新国\",\n  //     school: \"化学化工学院\",\n  //     type: 0,\n  //     keywords: [\"差异化\", \"半导体\", \"集装箱\", \"可视化\"],\n  //   },\n  // ];\n  let nodes = mapNode;\n  // console.log(mapNode);\n  // 边集'\n  // let tempEdges = mapEdge;\n  // console.log(mapEdge);\n  let tempEdges = mapNode.length == 0 ? [] : mapEdge;\n  // let tempEdges = [\n  //   { id: 1, source: 12, target: 5, relation: \"渠道管理\", value: 1.3 },\n  //   { id: 2, source: 5, target: 6, relation: \" 营销策略\", value: 1 },\n  //   { id: 3, source: 5, target: 7, relation: \"企业模式\", value: 1 },\n  //   { id: 4, source: 5, target: 8, relation: \"社交网络\", value: 1 },\n  //   { id: 5, source: 2, target: 7, relation: \"神经网络\", value: 2 },\n  //   { id: 6, source: 3, target: 6, relation: \"视网膜\", value: 0.9 },\n  //   { id: 7, source: 4, target: 8, relation: \"分布式\", value: 1 },\n  //   { id: 8, source: 6, target: 7, relation: \"计算机\", value: 1.6 },\n  //   { id: 9, source: 7, target: 8, relation: \"动力学\", value: 0.7 },\n  //   { id: 10, source: 7, target: 9, relation: \"催化剂\", value: 2 },\n  //   { id: 11, source: 9, target: 7, relation: \"管理系统\", value: 2 },\n  //   { id: 12, source: 9, target: 7, relation: \"供应链\", value: 2 },\n  //   { id: 13, source: 1, target: 6, relation: \"供应链\", value: 2 },\n  // ];\n  nodes.forEach((item) => {});\n  // 生成 nodes map\n  let nodesMap = genNodesMap(nodes);\n  let nodesData = [];\n  for (let key in nodesMap) {\n    nodesData.push(nodesMap[key]);\n  }\n  let linkMap = genLinkMap(tempEdges);\n  // 构建 links（source 属性必须从 0 开始）\n  let edges = genLinks(tempEdges);\n  // 设置一个颜色比例尺\n  // let colorScale = d3\n  //   .scaleOrdinal()\n  //   .domain(d3.range(nodesData.length))\n  //   .range(d3.schemeCategory10);\n  // 新建一个力导向图\n  let forceSimulation = d3\n    .forceSimulation()\n    .force(\"link\", d3.forceLink())\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"collide\", d3.forceCollide(100).strength(0.2).iterations(5))\n    .force(\"center\", d3.forceCenter());\n  // 生成节点数据\n  forceSimulation.nodes(nodesData);\n  // 生成边数据\n  forceSimulation\n    .force(\"link\")\n    .links(edges)\n    .distance(function (d) {\n      // 每一边的长度\n      return (\n        d.value * 150 * scale +\n        MentorCircleR(d.source.keywords.length) +\n        MentorCircleR(d.target.keywords.length)\n      );\n    });\n  // 设置图形中心位置\n  forceSimulation\n    .force(\"center\")\n    .x(width / 2)\n    .y(height / 2);\n  // 箭头\n  var marker = g\n    .append(\"g\")\n    .attr(\"class\", \"showLine\")\n    .append(\"marker\")\n    .attr(\"id\", \"resolved\")\n    // .attr(\"markerUnits\",\"strokeWidth\")// 设置为strokeWidth箭头会随着线的粗细发生变化\n    .attr(\"markerUnits\", \"userSpaceOnUse\")\n    .attr(\"viewBox\", \"0 -5 10 10\") // 坐标系的区域\n    .attr(\"refX\", 44) // 箭头坐标\n    .attr(\"refY\", 0)\n    .attr(\"markerWidth\", 10) // 标识的大小\n    .attr(\"markerHeight\", 10)\n    .attr(\"orient\", \"auto\") // 绘制方向，可设定为：auto（自动确认方向）和 角度值\n    .attr(\"stroke-width\", 2) // 箭头宽度\n    .append(\"path\")\n    .attr(\"d\", \"M0,-5L10,0L0,5\") // 箭头的路径\n    .attr(\"fill\", edgeColor); // 箭头颜色\n  // 绘制边\n  let links = g\n    .append(\"g\")\n    .selectAll(\"path\")\n    .data(edges)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", (link) => genLinkPath(link)) // 遍历所有数据。d表示当前遍历到的数据，返回绘制的贝塞尔曲线\n    .attr(\"id\", (d, i) => {\n      return \"edgepath\" + d.id;\n    }) // 设置id，用于连线文字\n    .style(\"stroke\", edgeColor) // 颜色\n    .style(\"stroke-width\", 2) // 粗细\n    .attr(\"class\", \"lines\")\n    .attr(\"marker-end\", \"url(#resolved)\"); // 根据箭头标记的id号标记箭头\n  // 边上的文字\n  let linksText = g\n    .append(\"g\")\n    .selectAll(\"text\")\n    .data(edges)\n    .enter()\n    .append(\"text\")\n    .attr(\"class\", \"linksText\")\n    .text(function (d) {\n      return d.relations;\n    })\n    .style(\"font-size\", 14)\n    // .style(\"text-anchor\", \"start\")\n    // .attr(\"transform\", \"rotate(45)\")//_________________\n    .attr(\"fill-opacity\", 0);\n  // 创建分组\n  let gs = g\n    .append(\"g\")\n    .selectAll(\".circleText\")\n    .data(nodesData)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"singleNode\")\n    .attr(\"id\", function (d) {\n      return \"singleNode\" + d.id;\n    })\n    .style(\"cursor\", \"pointer\")\n    .attr(\"transform\", function (d) {\n      let cirX = d.x;\n      let cirY = d.y;\n      return \"translate(\" + cirX + \",\" + cirY + \")\";\n    });\n  // 鼠标交互\n  gs.on(\"mouseover\", function (event, d, i) {\n    // 显示连接线上的文字\n    // toggleLineText(d, true);\n    toggleLine(links, d, true);\n    toggleNode(gs, d, true);\n  })\n    .on(\"mouseout\", function (event, d, i) {\n      // 隐去连接线上的文字\n      // toggleLineText(d, false);\n      toggleLine(links, d, false);\n      toggleNode(gs, d, false);\n    })\n    .on(\n      \"click\",\n      function (event, d, i) {\n        event.preventDefault();\n        linksText.style(\"fill-opacity\", function (edge) {\n          if (edge.source === d) {\n            return 1;\n          }\n        });\n        // toggleCircle(d3.select(this), d);\n      },\n      true\n    )\n    .call(d3.drag().on(\"start\", started).on(\"drag\", dragged).on(\"end\", ended));\n  svg.on(\n    \"click\",\n    function (event) {\n      nodes.forEach((d) => (d.clickFlag = false));\n      var target = event.srcElement, //  获取事件发生源\n        data = d3.select(target).datum(); //  获取事件发生源的数据\n      removeSingle();\n      if (!data) {\n        // document.getElementById(\"circle8\").innerText = \"\";\n      }\n    },\n    true\n  );\n  forceSimulation.on(\"tick\", ticked);\n  function toggleLineText(currNode, isHover) {\n    if (isHover) {\n      linksText.style(\"fill-opacity\", function (edge) {\n        if (edge.source === currNode) {\n          return 1;\n        }\n      });\n    } else {\n      linksText.style(\"fill-opacity\", function (edge) {\n        if (edge.source === currNode || edge.target === currNode) {\n          return 0;\n        }\n      });\n    }\n  }\n  function toggleLine(linkLine, currNode, isHover) {\n    if (isHover) {\n      // 加重连线样式\n      links\n        .style(\"opacity\", 0.1)\n        .filter((link) => isLinkLine(currNode, link))\n        .style(\"opacity\", 1)\n        .classed(\"link-active\", true);\n    } else {\n      links.style(\"opacity\", 1).classed(\"link-active\", false);\n    }\n  }\n  /*\n  function showMyList() {\n    var e = { id: 10, name: \"河北\" };\n    var h = { id: 11, name: \"河南\" };\n    var f = { id: 13, source: 9, target: 10, relation: \"222\", value: 2 };\n    nodes.push(e);\n    nodes.push(h);\n    tempEdges.push(f);\n    nodesMap = genNodesMap(nodes);\n    let nodesData = [];\n    for (let key in nodesMap) {\n      nodesData.push(nodesMap[key]);\n    }\n    linkMap = genLinkMap(tempEdges);\n    edges = genLinks(tempEdges);\n    updateData();\n  }\n  \n  function updateData() {\n    links = links\n      .data(edges, function (d) {})\n      .join(\"path\")\n      .attr(\"id\", (d, i) => {\n        return \"edgepath\" + d.id;\n      }) // 设置id，用于连线文字\n      .style(\"stroke\", edgeColor) // 颜色\n      .style(\"stroke-width\", 2) // 粗细\n      .attr(\"class\", \"lines\")\n      .attr(\"marker-end\", \"url(#resolved)\") // 根据箭头标记的id号标记箭头\n      .merge(links);\n    linksText = linksText\n      .data(edges)\n      .join(\"text\")\n      .attr(\"class\", \"linksText\")\n      .text(function (d) {\n        return d.relations;\n      })\n      // .style(\"text-anchor\", \"start\")\n      // .attr(\"transform\", \"rotate(45)\")\n      .style(\"font-size\", 14)\n      .attr(\"fill-opacity\", 0);\n    gs = gs\n      .data(nodesData, function (d) {})\n      .join(\"g\")\n      .attr(\"class\", \"singleNode\")\n      .attr(\"id\", function (d) {\n        return \"singleNode\" + d.id;\n      })\n      .style(\"cursor\", \"pointer\")\n      .merge(gs)\n      .call(\n        d3.drag().on(\"start\", started).on(\"drag\", dragged).on(\"end\", ended)\n      );\n    gs.append(\"circle\")\n      .attr(\"fill\", function (d) {\n        return colorScale[d.school];\n      })\n      .attr(\"r\", 35)\n      .attr(\"stroke\", edgeColor)\n      .attr(\"stroke-width\", 3);\n    gs.on(\"mouseover\", function (event, d, i) {\n      // 显示连接线上的文字\n      toggleLineText(d, true);\n      toggleLine(links, d, true);\n      toggleNode(gs, d, true);\n    })\n      .on(\"mouseout\", function (event, d, i) {\n        // 隐去连接线上的文字\n        toggleLineText(d, false);\n        toggleLine(links, d, false);\n        toggleNode(gs, d, false);\n      })\n      .on(\n        \"click\",\n        function (event, d, i) {\n          linksText.style(\"fill-opacity\", function (edge) {\n            if (edge.source === d) {\n              return 1;\n            }\n          });\n          toggleCircle(d3.select(this), d);\n        },\n        true\n      );\n    gs.append(\"text\")\n      .attr(\"y\", -20)\n      .attr(\"dy\", 10)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"font-size\", 12)\n      .attr(\"x\", function ({ name }) {\n        return textBreaking(d3.select(this), name);\n      });\n    gs.append(\"title\").text((node) => {\n      return node.name;\n    });\n    forceSimulation.nodes(nodesData);\n    forceSimulation.force(\"link\").links(edges);\n    forceSimulation.alpha(0.8).restart();\n  }\n  function getLineTextAngle(d, bbox) {\n    if (d.target.x < d.source.x) {\n      const { x, y, width, height } = bbox;\n      const rx = x + width / 2;\n      const ry = y + height / 2;\n      return \"rotate(180 \" + rx + \" \" + ry + \")\";\n    } else {\n      return \"rotate(0)\";\n    }\n  }\n  */\n  function toggleNode(nodeCircle, currNode, isHover) {\n    if (isHover) {\n      // 提升节点层级\n      // nodeCircle.sort((a, b) => a.id === currNode.id ? 1 : -1);\n      // this.parentNode.appendChild(this);\n      nodeCircle\n        .style(\"opacity\", 0.5)\n        .filter((node) => isLinkNode(currNode, node))\n        .style(\"opacity\", 1);\n    } else {\n      nodeCircle.style(\"opacity\", 1);\n    }\n  }\n  function removeSingle() {\n    d3.select(\".singleCircle\").remove();\n  }\n  function toggleCircle(current, d) {\n    var currentD = d;\n    if (d.clickFlag) {\n      removeSingle();\n      // document.getElementById(\"circle8\").innerText = \"\";\n    }\n    d.clickFlag = true;\n    // document.getElementById(\"circle8\").innerText = d.name;\n    var data = [\n      {\n        population: 30,\n        value: \"X\",\n        type: \"delete\",\n      },\n      {\n        population: 30,\n        value: \"收起\",\n        type: \"showOn\",\n      },\n      {\n        population: 30,\n        value: \"展开\",\n        type: \"showOff\",\n      },\n    ];\n    var sum = d3.sum(\n      data.map(function (d) {\n        return d.population;\n      })\n    );\n    for (let i in data) {\n      data[i].Percentage = ((data[i].population / sum) * 100).toFixed(0) + \"%\";\n    }\n    var width = 300,\n      height = 300,\n      margin = { left: 30, top: 30, right: 30, bottom: 30 },\n      svg_width = width + margin.left + margin.right,\n      svg_height = height + margin.top + margin.bottom,\n      font_size = 15;\n    var g = current\n      .append(\"g\")\n      .attr(\"class\", \"singleCircle\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n    var Pie = g.append(\"g\");\n\n    var arc_generator = d3\n      .arc()\n      .innerRadius(width / 6.5)\n      .outerRadius(width / 4);\n    var angle_data = d3.pie().value(function (d) {\n      return d.population;\n    });\n    var pieData = angle_data(data);\n    var pieAngle = pieData.map(function (p) {\n      return ((p.startAngle + p.endAngle) / 2 / Math.PI) * 180;\n    });\n\n    // var color=d3.schemeCategory10;\n\n    //生成内部圆环\n    Pie.selectAll(\"path\")\n      .data(angle_data(data))\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", arc_generator)\n      .style(\"fill\", function (d, i) {\n        switch (i) {\n          case 0:\n            return \"#898778\";\n          case 1:\n            return \"#d1d091\";\n          case 2:\n            return \"#b1aaf1\";\n        }\n      })\n      // .style(\"stroke\", \"black\")\n      .attr(\"class\", \"path\")\n      .attr(\"type\", function (d) {\n        return d.data.type;\n      })\n      .on(\"click\", function (event, d) {\n        if (d.data.type === \"delete\") {\n          deleteNode(currentD);\n        } else if (d.data.type === \"showOn\") {\n          ManipulateNodes(currentD, \"none\");\n        } else {\n          onChangeMentor(currentD.name);\n          ManipulateNodes(currentD, \"block\");\n        }\n        event.stopPropagation();\n      });\n    var arc_label = d3\n      .arc()\n      .innerRadius(width / 4)\n      .outerRadius(width / 2);\n\n    Pie.selectAll(\".arc_label\")\n      .data(angle_data(data))\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", arc_label)\n      .attr(\"class\", \"arc_label\")\n      .style(\"fill\", \"none\");\n    const labelFontSize = 12;\n    const labelValRadius = 170 * 0.35 - labelFontSize * 0.35; // 计算正确半径 文字位置\n    const labelValRadius1 = 170 * 0.35 + labelFontSize * 0.35;\n\n    const labelsVals = current\n      .select(\".singleCircle\")\n      .append(\"g\")\n      .classed(\"labelsvals\", true);\n\n    // 定义两条路径以使标签的方向正确\n    labelsVals\n      .append(\"def\")\n      .append(\"path\")\n      .attr(\"id\", \"label-path-1\")\n      .attr(\n        \"d\",\n        `m0 ${-labelValRadius} a${labelValRadius} ${labelValRadius} 0 1,1 -0.01 0`\n      );\n    labelsVals\n      .append(\"def\")\n      .append(\"path\")\n      .attr(\"id\", \"label-path-2\")\n      .attr(\n        \"d\",\n        `m0 ${-labelValRadius1} a${labelValRadius1} ${labelValRadius1} 0 1,0 0.01 0`\n      );\n\n    labelsVals\n      .selectAll(\"text\")\n      .data(data)\n      .enter()\n      .append(\"text\")\n      .style(\"font-size\", labelFontSize)\n      .style(\"fill\", \"white\")\n      .style(\"font-weight\", \"bold\")\n      .style(\"text-anchor\", \"middle\")\n      .append(\"textPath\")\n      .attr(\"href\", function (d, i) {\n        const p = pieData[i];\n        const angle = pieAngle[i];\n        if (angle > 90 && angle <= 270) {\n          // 根据角度选择路径\n          return \"#label-path-2\";\n        } else {\n          return \"#label-path-1\";\n        }\n      })\n      .attr(\"startOffset\", function (d, i) {\n        const p = pieData[i];\n        const angle = pieAngle[i];\n        let percent = ((p.startAngle + p.endAngle) / 2 / 2 / Math.PI) * 100;\n        if (angle > 90 && angle <= 270) {\n          // 分别计算每条路径的正确百分比\n          return 100 - percent + \"%\";\n        }\n        return percent + \"%\";\n      })\n      .text(function (d) {\n        return d.value;\n      })\n      .on(\n        \"click\",\n        function (event, d) {\n          if (d.type === \"delete\") {\n            deleteNode(currentD);\n          } else if (d.type === \"showOn\") {\n            ManipulateNodes(currentD, \"none\");\n          } else {\n            // showMyList()\n          }\n          event.stopPropagation();\n        },\n        true\n      );\n  }\n  //删除当前节点下一级没有其他关系的节点\n  function ManipulateNodes(curr, type) {\n    // document.getElementById(\"circle8\").innerText = \"\";\n    // var removeIndex = nodesData.findIndex(node=>node.id == curr.id)\n    // nodesData.splice(removeIndex,1)\n    // nodes.splice(removeIndex,1)\n    d3.select(this).attr(\"display\", type);\n    let relationNode = [],\n      relationList = [],\n      hasRelationList = [];\n    var clickNode = curr.id; //点击节点的名字\n    d3.selectAll(\".lines\").each(function (e) {\n      if (e.source.id == curr.id || e.target.id == curr.id) {\n        hasRelationList.push(e);\n      } else {\n        relationList.push(e); //出去跟删除节点有关系的其他关系\n      }\n      //需要删除的节点相关的节点\n      if (e.source.id == curr.id) {\n        relationNode.push(e.target);\n      }\n      //需要删除的节点相关的节点\n      if (e.target.id == curr.id) {\n        relationNode.push(e.source);\n      }\n    });\n    var tempNodeList = JSON.parse(JSON.stringify(relationNode));\n    tempNodeList = uniqObjInArray(tempNodeList);\n    //区分下级节点是否是孤节点\n    tempNodeList.forEach(function (item, index) {\n      var hasLine = relationList.findIndex(\n        (jtem) => jtem.target.id == item.id || jtem.source.id == item.id\n      );\n      if (hasLine >= 0) {\n        item.notSingle = true;\n      }\n    });\n    tempNodeList.forEach(function (item, index) {\n      if (!item.notSingle) {\n        d3.select(\"#singleNode\" + item.id).attr(\"display\", type);\n        //d3.select(\"#singleNode\" + item.id).remove();\n      }\n    });\n    var otherTempNode = [];\n    tempNodeList = tempNodeList.map((item) => {\n      if (!item.notSingle) {\n        otherTempNode.push(item);\n      }\n    });\n    hasRelationList.forEach((item) => {\n      otherTempNode.forEach((jtem) => {\n        if (jtem.id == item.source.id || jtem.id == item.target.id) {\n          //d3.select(\"#edgepath\" + item.id).remove();\n          d3.select(\"#edgepath\" + item.id).attr(\"display\", type);\n        }\n      });\n    });\n    d3.selectAll(\".singleNode\").each(function (d, i) {\n      var temp = d.id;\n      //删除当前需要隐藏的节点\n      if (temp == clickNode) {\n        removeSingle();\n      }\n    });\n    d3.selectAll(\".linksText\").each(function (e) {\n      if (e.source === curr || e.target === curr) {\n        //d3.select(this).remove();\n        d3.select(this).attr(\"display\", type);\n      }\n    });\n    gs.style(\"opacity\", 1);\n    links.style(\"opacity\", 1).classed(\"link-active\", false);\n  }\n  //删除当前及下一级没有其他关系的节点\n  function deleteNode(curr) {\n    // document.getElementById(\"circle8\").innerText = \"\";\n    var removeIndex = nodesData.findIndex((node) => node.id == curr.id);\n    nodesData.splice(removeIndex, 1);\n    nodes.splice(removeIndex, 1);\n    d3.select(this).remove();\n    let relationNode = [],\n      relationList = [];\n    var clickNode = curr.id; //点击节点的名字\n    d3.selectAll(\".lines\").each(function (e) {\n      if (e.source.id == curr.id || e.target.id == curr.id) {\n        //d3.select(this).remove();\n        d3.select(this).attr(\"display\", \"none\");\n      } else {\n        relationList.push(e); //出去跟删除节点有关系的其他关系\n      }\n      //需要删除的节点相关的节点\n      if (e.source.id == curr.id) {\n        relationNode.push(e.target);\n      }\n      //需要删除的节点相关的节点\n      if (e.target.id == curr.id) {\n        relationNode.push(e.source);\n      }\n    });\n    var tempNodeList = JSON.parse(JSON.stringify(relationNode));\n    tempNodeList = uniqObjInArray(tempNodeList);\n    //区分下级节点是否是孤节点\n    tempNodeList.forEach(function (item, index) {\n      var hasLine = relationList.findIndex(\n        (jtem) => jtem.target.id == item.id || jtem.source.id == item.id\n      );\n      if (hasLine >= 0) {\n        item.notSingle = true;\n      }\n    });\n    tempNodeList.forEach(function (item, index) {\n      if (!item.notSingle) {\n        // d3.select(\"#singleNode\" + item.id).remove();\n        d3.select(\"#singleNode\" + item.id).attr(\"display\", \"none\");\n      }\n    });\n    d3.selectAll(\".singleNode\").each(function (d, i) {\n      var temp = d.id;\n      //删除当前需要隐藏的节点\n      if (temp == clickNode) {\n        removeSingle();\n        // d3.select(this).remove();\n        d3.select(this).attr(\"display\", \"none\");\n      }\n    });\n    d3.selectAll(\".linksText\").each(function (e) {\n      if (e.source === curr || e.target === curr) {\n        // d3.select(this).remove();\n        d3.select(this).attr(\"display\", \"none\");\n      }\n    });\n    gs.style(\"opacity\", 1);\n    links.style(\"opacity\", 1).classed(\"link-active\", false);\n  }\n\n  // 关联节点去重重组\n  function uniqObjInArray(objarray) {\n    let len = objarray.length;\n    let tempJson = {};\n    let res = [];\n    for (let i = 0; i < len; i++) {\n      //取出每一个对象\n      tempJson[JSON.stringify(objarray[i])] = true;\n    }\n    let keyItems = Object.keys(tempJson);\n    for (let j = 0; j < keyItems.length; j++) {\n      res.push(JSON.parse(keyItems[j]));\n    }\n    return res;\n  }\n  function isLinkLine(node, link) {\n    return link.source.id === node.id;\n  }\n  function isLinkNode(currNode, node) {\n    if (currNode.id === node.id) {\n      return true;\n    }\n    return (\n      linkMap[currNode.id + \"-\" + node.id] ||\n      linkMap[node.id + \"-\" + currNode.id]\n    );\n  }\n  function largerNode(nodes, currNode, isHover) {\n    if (isHover) {\n      gs.style(\"stroke-width\", 1)\n        .filter((node) => isNode(currNode, node))\n        .style(\"stroke-width\", 10);\n    } else {\n      gs.style(\"stroke-width\", 1);\n    }\n  }\n  function isNode(node, cNode) {\n    return true;\n  }\n  // 绘制节点\n  var mentorNode = gs\n    .append(\"circle\")\n    .attr(\"r\", (d) => MentorCircleR(d.keywords.length))\n    .attr(\"id\", function (d) {\n      return \"circle\" + d.id;\n    })\n    .attr(\"fill\", function (d, i) {\n      const { name, id, school, type, keywords, x, y, vx, vy, vz } = d;\n      // console.log(d);\n      // console.log(name, id, school, type, keywords, x, y, vx, vy, vz);\n      drawKeyWord(d, i, d.x, d.y);\n      return colorScale[d.school];\n    })\n    .attr(\"stroke\", edgeColor)\n    .attr(\"stroke-width\", 3);\n\n  // 文字\n  var nodeText = gs\n    .append(\"text\")\n    // .attr('x', -10)\n    .attr(\"y\", -20)\n    .attr(\"dy\", 10)\n    .attr(\"text-anchor\", \"middle\")\n    .style(\"font-size\", 12)\n    .attr(\"x\", function ({ name }) {\n      return textBreaking(d3.select(this), name);\n    });\n  gs.append(\"title\").text((node) => {\n    return node.name;\n  });\n\n  function drawKeyWord(dx, i, x, y) {\n    // const { name, id, x, y } = dx;\n    // console.log(x, y);\n    let node = d3\n      .select(\".vis-map\")\n      .select(\"#singleNode\" + dx.id)\n      .selectAll(\".keyword\")\n      .data(dx.keywords)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"keyword\")\n      .attr(\"text\", dx.keywords)\n      .attr(\"fill\", keywColor)\n      .attr(\n        \"transform\",\n        (d, i) =>\n          `translate(${keywordOffset(dx.keywords.length, i).x},${\n            keywordOffset(dx.keywords.length, i).y\n          })`\n      )\n      .attr(\"r\", KeywordCircleR)\n      .attr(\"stroke\", edgeColor)\n      .on(\"mouseover\", function (event, d, i) {\n        keywHightlight(d, true);\n        setShow(d, dx);\n        event.stopPropagation();\n        // .filter((link) => isLinkLine(currNode, link))\n        // .style(\"opacity\", 1)\n        // .classed(\"link-active\", true);\n        // d3.select(this).attr(\"stroke-width\", 2).attr(\"stroke\", \"red\");\n      })\n      .on(\"mouseout\", function (event, d, i) {\n        keywHightlight(d, false);\n        setShow(\"\", dx);\n        // d3.select(this).attr(\"stroke-width\", 1).attr(\"stroke\", edgeColor);\n      })\n      .on(\"click\", function (event, d, i) {\n        event.stopPropagation();\n\n        showPaperList(d, dx.name);\n      });\n\n    var lineGenerator = d3.line();\n    // var pathString = lineGenerator(data);\n    d3.select(\".vis-map\")\n      .select(\"#singleNode\" + dx.id)\n      .selectAll(\".keywordPath\")\n      .data(dx.keywords)\n      .enter()\n      .append(\"path\")\n      .attr(\"stroke\", edgeColor)\n      .attr(\"stroke-width\", 1)\n      .attr(\"d\", (d, i) => {\n        const x = keywordOffset(dx.keywords.length, i).x;\n        const y = keywordOffset(dx.keywords.length, i).y;\n        const edge = Math.sqrt(x * x + y * y);\n        // console.log(\"angle is:\", angle);\n        return lineGenerator([\n          [\n            (MentorCircleR(dx.keywords.length) * x) / edge,\n            (MentorCircleR(dx.keywords.length) * y) / edge,\n          ],\n          [x - (KeywordCircleR * x) / edge, y - (KeywordCircleR * y) / edge],\n        ]);\n      }); // 遍历所有数据。d表示当前遍历到的数据，返回绘制的贝塞尔曲线\n    // .style(\"stroke\", edgeColor) // 颜色\n    // .style(\"stroke-width\", 2) // 粗细\n    // .attr(\"class\", \"lines\")\n    // .attr(\"marker-end\", \"url(#resolved)\");\n\n    // 根据箭头标记的id号标记箭头\n    // .attr(\"text\", function (d) {\n    //   console.log(d);\n    //   return textBreaking(d3.select(this), d);\n    // });\n  }\n  function setShow(target, dx) {\n    d3.selectAll(\".vis-map > *\")\n      .selectAll(\"#singleNode\" + dx.id)\n      .selectAll(\"rect\")\n      .remove();\n    d3.selectAll(\".vis-map > *\")\n      // .selectAll(\"#singleNode\" + dx.id)\n      .selectAll(\".keywordText\")\n      .remove();\n    d3.select(\".vis-map\")\n      .select(\"#singleNode\" + dx.id)\n      .selectAll(\".keywordRect\")\n      .data(dx.keywords)\n      .enter()\n      .append(\"rect\")\n      .attr(\n        \"transform\",\n        (d, i) =>\n          `translate(${keywordOffset(dx.keywords.length, i).x + 20},${\n            keywordOffset(dx.keywords.length, i).y\n          })`\n      )\n      .attr(\"fill\", \"black\")\n      .attr(\"display\", (d) => (target === d ? \"block\" : \"none\"))\n      .attr(\"width\", 70)\n      .attr(\"height\", 25)\n      .attr(\"rx\", 5)\n      .attr(\"ry\", 5);\n\n    d3.select(\".vis-map\")\n      .select(\"#singleNode\" + dx.id)\n      .selectAll(\".keywordText\")\n      .data(dx.keywords)\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"keywordText\")\n      .attr(\"font-size\", 12)\n      .attr(\"fill\", \"white\")\n      .attr(\"display\", (d) => (target === d ? \"block\" : \"none\"))\n      .attr(\n        \"transform\",\n        (d, i) =>\n          `translate(${keywordOffset(dx.keywords.length, i).x + 30},${\n            keywordOffset(dx.keywords.length, i).y + 15\n          })`\n      )\n      .text((d) => d);\n  }\n  function genLinkMap(relations) {\n    const hash = {};\n    relations.map(function ({ source, target, relation }) {\n      const key = source + \"-\" + target;\n      if (hash[key]) {\n        hash[key] += 1;\n        hash[key + \"-relation\"] += \"、\" + relation;\n      } else {\n        hash[key] = 1;\n        hash[key + \"-relation\"] = relation;\n      }\n    });\n    return hash;\n  }\n  function genLinks(relations) {\n    const indexHash = {};\n    return relations.map(function ({ id, source, target, relation, value }, i) {\n      const linkKey = source + \"-\" + target;\n      const count = linkMap[linkKey];\n      if (indexHash[linkKey]) {\n        indexHash[linkKey] -= 1;\n      } else {\n        indexHash[linkKey] = count - 1;\n      }\n      return {\n        id,\n        source: nodesMap[source],\n        target: nodesMap[target],\n        relation,\n        value,\n        relations: linkMap[linkKey + \"-relation\"],\n        count: linkMap[linkKey],\n        index: indexHash[linkKey],\n      };\n    });\n  }\n  // 生成关系连线路径\n  function genLinkPath(link) {\n    const count = link.count;\n    const index = link.index;\n    let sx = link.source.x;\n    let tx = link.target.x;\n    let sy = link.source.y;\n    let ty = link.target.y;\n    return \"M\" + sx + \",\" + sy + \" L\" + tx + \",\" + ty;\n  }\n  function genNodesMap(nodes) {\n    const hash = {};\n    nodes.map(function ({ id, name, school, type, keywords }) {\n      hash[id] = {\n        id,\n        name,\n        school,\n        type,\n        keywords,\n      };\n    });\n    return hash;\n  }\n  // 处理节点文字换行\n  function textBreaking(d3text, text) {\n    const len = text.length;\n    if (len <= 3) {\n      d3text\n        .append(\"tspan\")\n        .attr(\"x\", 0)\n        .attr(\"y\", -3)\n        .style(\"fill\", circleWordColor)\n        .text(text);\n    } else {\n      const topText = text.substring(0, 3);\n      const midText = text.substring(3, 7);\n      let botText = text.substring(7, len);\n      let topY = -22;\n      let midY = 8;\n      let botY = 34;\n      if (len <= 9) {\n        topY += 10;\n        midY += 10;\n      } else {\n        botText = text.substring(7, 9) + \"...\";\n      }\n      d3text.text(\"\");\n      d3text\n        .append(\"tspan\")\n        .attr(\"x\", 0)\n        .attr(\"y\", topY)\n        .style(\"fill\", circleWordColor)\n        .text(function () {\n          return topText;\n        });\n      d3text\n        .append(\"tspan\")\n        .attr(\"x\", 0)\n        .attr(\"y\", midY)\n        .style(\"fill\", circleWordColor)\n        .text(function () {\n          return midText;\n        });\n      d3text\n        .append(\"tspan\")\n        .attr(\"x\", 0)\n        .attr(\"y\", botY - 7)\n        .style(\"fill\", circleWordColor)\n        .text(function () {\n          return botText;\n        });\n    }\n  }\n  // ticked\n  function ticked() {\n    // 连线路径\n    links.attr(\"d\", (link) => genLinkPath(link));\n    // 连线文字位置\n    linksText\n      .attr(\"x\", function (d) {\n        return (d.source.x + d.target.x) / 2;\n      })\n      .attr(\"y\", function (d) {\n        return (d.source.y + d.target.y) / 2;\n      });\n    // 节点位置\n    gs.attr(\"transform\", function (d) {\n      return \"translate(\" + d.x + \",\" + d.y + \")\";\n    });\n  }\n  // drag\n  function started(event, d) {\n    if (!event.active) {\n      forceSimulation.alphaTarget(0.8).restart(); // 设置衰减系数，对节点位置移动过程的模拟，数值越高移动越快，数值范围[0, 1]\n    }\n    d.fx = d.x;\n    d.fy = d.y;\n  }\n  function dragged(event, d) {\n    d.fx = event.x;\n    d.fy = event.y;\n  }\n  function ended(event, d) {\n    if (!event.active) {\n      forceSimulation.alphaTarget(0);\n    }\n    d.fx = null;\n    d.fy = null;\n  }\n};\nexport default draw;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/pool.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/mentorRelation.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/MapBox.jsx",["461","462","463"],"import React, { Component } from 'react';\nimport Map from \"../charts/Map/index\";\nimport MapWhole from \"../charts/MapWhole/index\"\nimport mentorPosition from \"../position_json\";\nimport \"./MapBox.css\"\n// const onChangeMentor = (tar{\n//     // this.props.onChangeMentor(target);\n//     const {selectedMentor} = this.props;\n//     const index = mentorPosition.findIndex((d)=>d.name == selectedMentor[0])\n//     const position = mentorPosition[index].position;\n//     const init_Ox = position.x+200;\n//     const init_Oy = position.y+200;\n//     this.setState({Ox: init_Ox, Oy: init_Oy});\n// }\nclass MapBox extends Component {\n    state = {\n        selected:false,\n        Ox: 380,\n        Oy: 465,\n        Oscale: 0.28,\n    }\n    componentDidUpdate(prevProps){\n        console.log(prevProps);\n        const prevMentor = prevProps.selectedMentor[0];\n        if(prevMentor != this.props.selectedMentor[0]){\n            const selected = this.state.selected;\n            const scaleMap = (selected) ? 1 : 0.5;\n            const selectedMentor = this.props.selectedMentor;\n            const index = mentorPosition.findIndex((d)=>d.name == selectedMentor[0])\n\n            console.log(\"index\", mentorPosition[index].name)\n            const position = mentorPosition[index].position;\n            let init_Ox, init_Oy;\n            init_Ox = (380*2-(position.x*40))/2\n            init_Oy = (465*2-(position.y*40))/2\n            console.log('relative position', init_Ox, init_Oy)\n            console.log('position: ', position.x, position.y)\n            this.setState({Ox: init_Ox, Oy: init_Oy});\n        }//740 910   380 465\n    }\n\n    switch(){\n        // const selected = this.state.selected;\n        // const scaleMap = (selected) ? 1 : 0.5;\n        // const Ox = document.querySelector(\".vis-whole-map\").querySelector(\"g\").getAttribute(\"Ox\")/scaleMap;\n        // const Oy = document.querySelector(\".vis-whole-map\").querySelector(\"g\").getAttribute(\"Oy\")/scaleMap;\n        // console.log('Ox', Ox);\n        // const Oscale = document.querySelector(\".vis-whole-map\").querySelector(\"g\").getAttribute(\"Oscale\");\n        // this.setState({selected: !selected, Ox, Oy, Oscale});\n        // alert(this.state.selected)\n    }\n\n    render() { \n        const{Ox,Oy,Oscale} = this.state;\n        const scaleMap = (this.state.selected) ? 1 : 0.5;\n        // const scaleMapWhole = (this.state.selected) ? 0.3 ;\n        const scaleMapWhole = (this.state.selected) ? 0.5 : 1;\n        const width = 720;\n        const height =  890;\n        // console.log(Ox, Oy);\n        if(scaleMap === 1)\n        return ( \n        <div>\n            {/* <button className = \"switchButton btn btn-primary\" onClick ={()=>this.switch()}>switch</button> */}\n            <div className=\"row\">\n                <div className =\"col-4 smallBox\"><MapWhole scale = {scaleMapWhole} width = {width*scaleMapWhole} height = {height*scaleMapWhole} Ox={Ox} Oy={Oy} Oscale={Oscale} {...this.props}/></div>\n                <div className=\"col-8 bigBox\"><Map scale = {scaleMap} width = {width*scaleMap} height = {height*scaleMap} {...this.props} /></div>\n            </div>\n        </div>\n        );\n        else return(\n            <div>\n                {/* <button className = \"switchButton btn btn-primary\" onClick ={()=>this.switch()}>switch</button> */}\n                <div className=\"row\">\n                <div className =\"col-8 bigBox\"><MapWhole scale = {scaleMapWhole} width = {width*scaleMapWhole} height = {height*scaleMapWhole} Ox={Ox} Oy={Oy} Oscale={Oscale} {...this.props}/></div>\n                <div className=\"col-4 smallBox\"><Map scale = {scaleMap} width = {width*scaleMap} height = {height*scaleMap} {...this.props}/></div>\n                </div>\n            </div>\n        );\n        \n    }\n}\n \nexport default MapBox;","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/MapWhole/index.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/MapWhole/vis.js",["464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518"],"import * as d3 from \"d3\";\nimport Axios from \"axios\";\nimport colorScale from \"../../colorScale\";\nimport mentorPosition from \"../../position_json\";\nconst draw = ({\n  mapNode,\n  scale,\n  width,\n  height,\n  Ox,\n  Oy,\n  Oscale,\n  onChangeMentor,\n  selectedMentor,\n  onAppendMentorL,\n  selectedMentorL,\n}) => {\n  // color scale\n  Ox = Ox * scale;\n  Oy = Oy * scale;\n  const edgeColor = \"#999\";\n  const edgeColorH = \"red\";\n  const edgeColorHL = \"blue\";\n  // const colorScale = {\n  //   安泰经济与管理学院: \"#e8d4d4\",\n  //   化学化工学院: \"#F7B5A2\",\n  //   机械动力与工程学院: \"#B9E4DD\",\n  //   aaa: \"#F7B5A2\",\n  // };\n\n  const circleColor = \"#e8d4d4\";\n  const circleWordColor = \"#111\";\n\n  const MentorCircleR = (length) => {\n    if (length <= 8) return 25 * scale;\n    else return ((2 * length) / Math.PI) * 5 * scale;\n  };\n  const MentorEdgeLength = 200 * scale;\n  const keywEdgeLength = (length) => MentorCircleR(length) * 1.5;\n  const KeywordCircleR = 20 * scale;\n\n  let margin = { top: 10, bottom: 10, left: 10, right: 10 };\n  d3.selectAll(\".vis-whole-map > *\").remove();\n  let svg = d3\n    .select(\".vis-whole-map\")\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom);\n\n  svg\n    .call(\n      d3.zoom().on(\"zoom\", function (event) {\n        // console.log(event.transform);\n        const transform = `translate(${Ox + event.transform.x}, ${\n          Oy + event.transform.y\n        }) scale(${Oscale * event.transform.k})`;\n        g.attr(\"transform\", transform)\n          .attr(\"Ox\", Ox + event.transform.x)\n          .attr(\"Oy\", Oy + event.transform.y)\n          .attr(\"Oscale\", Oscale * event.transform.k);\n      })\n    )\n    .on(\"dblclick.zoom\", null);\n  let g = svg\n    .append(\"g\")\n    .attr(\"transform\", `translate(${Ox}, ${Oy}) scale(${Oscale})`)\n    .attr(\"Ox\", Ox)\n    .attr(\"Oy\", Oy)\n    .attr(\"Oscale\", Oscale)\n    .attr(\"class\", \"container\");\n  // 准备数据\n  // 节点集;transform=\"translate(435.29639556332233,81.34556908343316) scale(0.3626802323806052)\"\n  mapNode = [\n    {\n      id: 0,\n      name: \"周洁如\",\n      school: \"安泰经济与管理学院\",\n      size: 2,\n      position: {\n        x: 15,\n        y: 20,\n      },\n      keywords: [\"神经网络\", \"可视化\", \"aaa\", \"bbb\"],\n    },\n    {\n      id: 1,\n      name: \"江平开\",\n      school: \"化学化工学院\",\n      size: 2,\n      position: {\n        x: 10,\n        y: 29,\n      },\n      keywords: [\"神经网络\", \"可视化\", \"abbb\"],\n    },\n    {\n      id: 2,\n      name: \"吕巍\",\n      school: \"安泰经济与管理学院\",\n      size: 2,\n      position: {\n        x: 450,\n        y: 120,\n      },\n      keywords: [\"神经网络\", \"可视化\"],\n    },\n    {\n      id: 3,\n      name: \"张鹏翥\",\n      school: \"化学化工学院\",\n      size: 2,\n      position: {\n        x: 482,\n        y: 566,\n      },\n      keywords: [\"神经网络\", \"bcaa\"],\n    },\n    {\n      id: 4,\n      name: \"蒋炜\",\n      school: \"安泰经济与管理学院\",\n      size: 2,\n      position: {\n        x: 230,\n        y: 833,\n      },\n      keywords: [\"神经网络\", \"可视化\", \"abcc\", \"aaa\", \"bbb\"],\n    },\n    {\n      id: 5,\n      name: \"田澎\",\n      school: \"机械动力与工程学院\",\n      size: 2,\n      position: {\n        x: 295,\n        y: 467,\n      },\n      keywords: [\"神经网络\", \"可视化\", \"aaa\", \"bbb\"],\n    },\n    {\n      id: 6,\n      name: \"黄丞\",\n      school: \"机械动力与工程学院\",\n      size: 2,\n      position: {\n        x: 554,\n        y: 765,\n      },\n      keywords: [\"神经网络\", \"可视化\"],\n    },\n    {\n      id: 7,\n      name: \"周颖\",\n      school: \"安泰经济与管理学院\",\n      size: 2,\n      position: {\n        x: 732,\n        y: 231,\n      },\n      keywords: [\"神经网络\", \"可视化\"],\n    },\n    {\n      id: 8,\n      name: \"顾琴轩\",\n      school: \"安泰经济与管理学院\",\n      size: 2,\n      position: {\n        x: 876,\n        y: 279,\n      },\n      keywords: [\"神经网络\", \"可视化\"],\n    },\n    {\n      id: 9,\n      name: \"费一文\",\n      school: \"化学化工学院\",\n      size: 2,\n      position: {\n        x: 1000,\n        y: 29,\n      },\n      keywords: [\"神经网络\", \"可视化\"],\n    },\n  ];\n  let nodes = mentorPosition;\n  // let nodes = mapNode;\n  // console.log(mapNode);\n  // 边集'\n  // let tempEdges = mapEdge;\n  // console.log(mapEdge);\n  let tempEdges =\n    mapNode.length == 0\n      ? []\n      : [\n          { id: 1, source: 0, target: 1, relation: \"渠道管理\", value: 2 },\n          { id: 2, source: 0, target: 2, relation: \" 营销策略\", value: 2 },\n          { id: 3, source: 0, target: 3, relation: \"企业模式\", value: 2 },\n          { id: 4, source: 0, target: 4, relation: \"社交网络\", value: 2 },\n        ];\n\n  nodes.forEach((item) => {});\n  // 生成 nodes map\n  let nodesMap = genNodesMap(nodes);\n  let nodesData = [];\n  for (let key in nodesMap) {\n    nodesData.push(nodesMap[key]);\n  }\n  let linkMap = genLinkMap(tempEdges);\n  // 构建 links（source 属性必须从 0 开始）\n  let edges = genLinks(tempEdges);\n\n  // 绘制边\n  // let links = g\n  //   .append(\"g\")\n  //   .selectAll(\"path\")\n  //   .data(edges)\n  //   .enter()\n  //   .append(\"path\")\n  //   .attr(\"d\", (link) => genLinkPath(link)) // 遍历所有数据。d表示当前遍历到的数据，返回绘制的贝塞尔曲线\n  //   .attr(\"id\", (d, i) => {\n  //     return \"edgepath\" + d.id;\n  //   }) // 设置id，用于连线文字\n  //   .style(\"stroke\", edgeColor) // 颜色\n  //   .style(\"stroke-width\", 2) // 粗细\n  //   .attr(\"class\", \"lines\")\n  //   .attr(\"marker-end\", \"url(#resolved)\"); // 根据箭头标记的id号标记箭头\n  // 创建分组\n  let gs = g\n    .append(\"g\")\n    .selectAll(\".circleText\")\n    .data(nodesData)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"singleNode\")\n    .attr(\"id\", function (d) {\n      return \"singleNode\" + d.id;\n    })\n    .style(\"cursor\", \"pointer\")\n    .attr(\"transform\", function (d) {\n      let cirX = d.position.x;\n      let cirY = d.position.y;\n      return \"translate(\" + cirX + \",\" + cirY + \")\";\n    });\n  // 鼠标交互\n  gs.on(\"mouseover\", function (event, d, i) {\n    // 显示连接线上的文字\n    // toggleLine(links, d, true);\n    toggleNode(gs, d, true);\n  })\n    .on(\"mouseout\", function (event, d, i) {\n      // 隐去连接线上的文字\n      // toggleLine(links, d, false);\n      toggleNode(gs, d, false);\n    })\n    .on(\n      \"click\",\n      function (event, d, i) {\n        console.log(d.name);\n        onChangeMentor(d.name);\n      },\n      true\n    )\n    .on(\"contextmenu\", function (event, d, i) {\n      onAppendMentorL(d.name);\n      event.preventDefault();\n    })\n    .call(d3.drag().on(\"start\", started).on(\"drag\", dragged).on(\"end\", ended));\n  svg.on(\n    \"click\",\n    function (event) {\n      nodes.forEach((d) => (d.clickFlag = false));\n      var target = event.srcElement, //  获取事件发生源\n        data = d3.select(target).datum(); //  获取事件发生源的数据\n      removeSingle();\n    },\n    true\n  );\n\n  function toggleLine(linkLine, currNode, isHover) {\n    if (isHover) {\n      // 加重连线样式\n      // links\n      //   .style(\"opacity\", 0.1)\n      //   .filter((link) => isLinkLine(currNode, link))\n      //   .style(\"opacity\", 1)\n      //   .classed(\"link-active\", true);\n    } else {\n      // links.style(\"opacity\", 1).classed(\"link-active\", false);\n    }\n  }\n  function toggleNode(nodeCircle, currNode, isHover) {\n    if (isHover) {\n      // 提升节点层级\n      // nodeCircle.sort((a, b) => a.id === currNode.id ? 1 : -1);\n      // this.parentNode.appendChild(this);\n      nodeCircle\n        .style(\"opacity\", 0.5)\n        .filter((node) => isLinkNode(currNode, node))\n        .style(\"opacity\", 1);\n    } else {\n      nodeCircle.style(\"opacity\", 1);\n    }\n  }\n  function removeSingle() {\n    d3.select(\".singleCircle\").remove();\n  }\n  function toggleCircle(current, d) {\n    var currentD = d;\n    if (d.clickFlag) {\n      removeSingle();\n      // document.getElementById(\"circle8\").innerText = \"\";\n    }\n    d.clickFlag = true;\n    // document.getElementById(\"circle8\").innerText = d.name;\n    var data = [\n      {\n        population: 30,\n        value: \"X\",\n        type: \"delete\",\n      },\n      {\n        population: 30,\n        value: \"收起\",\n        type: \"showOn\",\n      },\n      {\n        population: 30,\n        value: \"展开\",\n        type: \"showOff\",\n      },\n    ];\n    var sum = d3.sum(\n      data.map(function (d) {\n        return d.population;\n      })\n    );\n    for (let i in data) {\n      data[i].Percentage = ((data[i].population / sum) * 100).toFixed(0) + \"%\";\n    }\n    var width = 300,\n      height = 300,\n      margin = { left: 30, top: 30, right: 30, bottom: 30 },\n      svg_width = width + margin.left + margin.right,\n      svg_height = height + margin.top + margin.bottom,\n      font_size = 15;\n    var g = current\n      .append(\"g\")\n      .attr(\"class\", \"singleCircle\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n    var Pie = g.append(\"g\");\n\n    // var color=d3.schemeCategory10;\n\n    // 定义两条路径以使标签的方向正确\n  }\n  //删除当前节点下一级没有其他关系的节点\n  function ManipulateNodes(curr, type) {\n    // document.getElementById(\"circle8\").innerText = \"\";\n    // var removeIndex = nodesData.findIndex(node=>node.id == curr.id)\n    // nodesData.splice(removeIndex,1)\n    // nodes.splice(removeIndex,1)\n    d3.select(this).attr(\"display\", type);\n    let relationNode = [],\n      relationList = [],\n      hasRelationList = [];\n    var clickNode = curr.id; //点击节点的名字\n    d3.selectAll(\".lines\").each(function (e) {\n      if (e.source.id == curr.id || e.target.id == curr.id) {\n        hasRelationList.push(e);\n      } else {\n        relationList.push(e); //出去跟删除节点有关系的其他关系\n      }\n      //需要删除的节点相关的节点\n      if (e.source.id == curr.id) {\n        relationNode.push(e.target);\n      }\n      //需要删除的节点相关的节点\n      if (e.target.id == curr.id) {\n        relationNode.push(e.source);\n      }\n    });\n    var tempNodeList = JSON.parse(JSON.stringify(relationNode));\n    tempNodeList = uniqObjInArray(tempNodeList);\n    //区分下级节点是否是孤节点\n    tempNodeList.forEach(function (item, index) {\n      var hasLine = relationList.findIndex(\n        (jtem) => jtem.target.id == item.id || jtem.source.id == item.id\n      );\n      if (hasLine >= 0) {\n        item.notSingle = true;\n      }\n    });\n    tempNodeList.forEach(function (item, index) {\n      if (!item.notSingle) {\n        d3.select(\"#singleNode\" + item.id).attr(\"display\", type);\n        //d3.select(\"#singleNode\" + item.id).remove();\n      }\n    });\n    var otherTempNode = [];\n    tempNodeList = tempNodeList.map((item) => {\n      if (!item.notSingle) {\n        otherTempNode.push(item);\n      }\n    });\n    hasRelationList.forEach((item) => {\n      otherTempNode.forEach((jtem) => {\n        if (jtem.id == item.source.id || jtem.id == item.target.id) {\n          //d3.select(\"#edgepath\" + item.id).remove();\n          d3.select(\"#edgepath\" + item.id).attr(\"display\", type);\n        }\n      });\n    });\n    d3.selectAll(\".singleNode\").each(function (d, i) {\n      var temp = d.id;\n      //删除当前需要隐藏的节点\n      if (temp == clickNode) {\n        removeSingle();\n      }\n    });\n    d3.selectAll(\".linksText\").each(function (e) {\n      if (e.source === curr || e.target === curr) {\n        //d3.select(this).remove();\n        d3.select(this).attr(\"display\", type);\n      }\n    });\n    gs.style(\"opacity\", 1);\n    // links.style(\"opacity\", 1).classed(\"link-active\", false);\n  }\n  //删除当前及下一级没有其他关系的节点\n  function deleteNode(curr) {\n    // document.getElementById(\"circle8\").innerText = \"\";\n    var removeIndex = nodesData.findIndex((node) => node.id == curr.id);\n    nodesData.splice(removeIndex, 1);\n    nodes.splice(removeIndex, 1);\n    d3.select(this).remove();\n    let relationNode = [],\n      relationList = [];\n    var clickNode = curr.id; //点击节点的名字\n    d3.selectAll(\".lines\").each(function (e) {\n      if (e.source.id == curr.id || e.target.id == curr.id) {\n        //d3.select(this).remove();\n        d3.select(this).attr(\"display\", \"none\");\n      } else {\n        relationList.push(e); //出去跟删除节点有关系的其他关系\n      }\n      //需要删除的节点相关的节点\n      if (e.source.id == curr.id) {\n        relationNode.push(e.target);\n      }\n      //需要删除的节点相关的节点\n      if (e.target.id == curr.id) {\n        relationNode.push(e.source);\n      }\n    });\n    var tempNodeList = JSON.parse(JSON.stringify(relationNode));\n    tempNodeList = uniqObjInArray(tempNodeList);\n    //区分下级节点是否是孤节点\n    tempNodeList.forEach(function (item, index) {\n      var hasLine = relationList.findIndex(\n        (jtem) => jtem.target.id == item.id || jtem.source.id == item.id\n      );\n      if (hasLine >= 0) {\n        item.notSingle = true;\n      }\n    });\n    tempNodeList.forEach(function (item, index) {\n      if (!item.notSingle) {\n        // d3.select(\"#singleNode\" + item.id).remove();\n        d3.select(\"#singleNode\" + item.id).attr(\"display\", \"none\");\n      }\n    });\n    d3.selectAll(\".singleNode\").each(function (d, i) {\n      var temp = d.id;\n      //删除当前需要隐藏的节点\n      if (temp == clickNode) {\n        removeSingle();\n        // d3.select(this).remove();\n        d3.select(this).attr(\"display\", \"none\");\n      }\n    });\n    d3.selectAll(\".linksText\").each(function (e) {\n      if (e.source === curr || e.target === curr) {\n        // d3.select(this).remove();\n        d3.select(this).attr(\"display\", \"none\");\n      }\n    });\n    gs.style(\"opacity\", 1);\n    // links.style(\"opacity\", 1).classed(\"link-active\", false);\n  }\n\n  // 关联节点去重重组\n  function uniqObjInArray(objarray) {\n    let len = objarray.length;\n    let tempJson = {};\n    let res = [];\n    for (let i = 0; i < len; i++) {\n      //取出每一个对象\n      tempJson[JSON.stringify(objarray[i])] = true;\n    }\n    let keyItems = Object.keys(tempJson);\n    for (let j = 0; j < keyItems.length; j++) {\n      res.push(JSON.parse(keyItems[j]));\n    }\n    return res;\n  }\n  function isLinkLine(node, link) {\n    return link.source.id === node.id;\n  }\n  function isLinkNode(currNode, node) {\n    if (currNode.id === node.id) {\n      return true;\n    }\n    return (\n      linkMap[currNode.id + \"-\" + node.id] ||\n      linkMap[node.id + \"-\" + currNode.id]\n    );\n  }\n  function largerNode(nodes, currNode, isHover) {\n    if (isHover) {\n      gs.style(\"stroke-width\", 1)\n        .filter((node) => isNode(currNode, node))\n        .style(\"stroke-width\", 10);\n    } else {\n      gs.style(\"stroke-width\", 1);\n    }\n  }\n  function isNode(node, cNode) {\n    return true;\n  }\n  // 绘制节点\n  var mentorNode = gs\n    .append(\"circle\")\n    .attr(\"r\", (d) => MentorCircleR(d.size))\n    .attr(\"cx\", (d) => d.position.x * 80 * scale)\n    .attr(\"cy\", (d) => d.position.y * 80 * scale)\n    .attr(\"id\", function (d) {\n      return \"circle\" + d.id;\n    })\n    .attr(\"fill\", function (d, i) {\n      const { name, id, school, size, keywords, x, y, vx, vy, vz } = d;\n      // console.log(d);\n      // console.log(name, id, school, type, keywords, x, y, vx, vy, vz);\n      return colorScale(d.school.slice(5), \"T\");\n    })\n    .attr(\"stroke\", (d) => {\n      if (d.name === selectedMentor[0]) return edgeColorH;\n      // console.log(\"selectedMentorL\", selectedMentorL);\n      if (selectedMentorL.indexOf(d.name) > -1) {\n        console.log(\"here\");\n        return edgeColorHL;\n      }\n      return edgeColor;\n    })\n    .attr(\"stroke-width\", (d) =>\n      d.name === selectedMentor[0] || selectedMentorL.indexOf(d.name) > -1\n        ? 15\n        : 3\n    );\n\n  // 文字\n  // var nodeText = gs\n  //   .append(\"text\")\n  //   // .attr('x', -10)\n  //   .attr(\"y\", -20)\n  //   .attr(\"dy\", 10)\n  //   .attr(\"text-anchor\", \"middle\")\n  //   .attr(\"x\", (d) => d.position.x)\n  //   .attr(\"y\", (d) => d.position.y)\n  //   .style(\"font-size\", 12)\n  //   .attr(\"x\", function ({ name }) {\n  //     return textBreaking(d3.select(this), name);\n  //   });\n  gs.append(\"title\").text((node) => {\n    return node.name;\n  });\n\n  function genLinkMap(relations) {\n    const hash = {};\n    relations.map(function ({ source, target, relation }) {\n      const key = source + \"-\" + target;\n      if (hash[key]) {\n        hash[key] += 1;\n        hash[key + \"-relation\"] += \"、\" + relation;\n      } else {\n        hash[key] = 1;\n        hash[key + \"-relation\"] = relation;\n      }\n    });\n    return hash;\n  }\n  function genLinks(relations) {\n    const indexHash = {};\n    return relations.map(function ({ id, source, target, relation, value }, i) {\n      const linkKey = source + \"-\" + target;\n      const count = linkMap[linkKey];\n      if (indexHash[linkKey]) {\n        indexHash[linkKey] -= 1;\n      } else {\n        indexHash[linkKey] = count - 1;\n      }\n      return {\n        id,\n        source: nodesMap[source],\n        target: nodesMap[target],\n        relation,\n        value,\n        relations: linkMap[linkKey + \"-relation\"],\n        count: linkMap[linkKey],\n        index: indexHash[linkKey],\n      };\n    });\n  }\n  // 生成关系连线路径\n  function genLinkPath(link) {\n    const count = link.count;\n    const index = link.index;\n    let sx = link.source.x;\n    let tx = link.target.x;\n    let sy = link.source.y;\n    let ty = link.target.y;\n    return \"M\" + sx + \",\" + sy + \" L\" + tx + \",\" + ty;\n  }\n  function genNodesMap(nodes) {\n    const hash = {};\n    nodes.map(function ({ id, name, school, size, position, keywords }) {\n      hash[id] = {\n        id,\n        name,\n        school,\n        size,\n        position,\n        keywords,\n      };\n    });\n    return hash;\n  }\n  // 处理节点文字换行\n  function textBreaking(d3text, text) {\n    const len = text.length;\n    if (len <= 3) {\n      d3text\n        .append(\"tspan\")\n        .attr(\"x\", 0)\n        .attr(\"y\", -3)\n        .style(\"fill\", circleWordColor)\n        .text(text);\n    } else {\n      const topText = text.substring(0, 3);\n      const midText = text.substring(3, 7);\n      let botText = text.substring(7, len);\n      let topY = -22;\n      let midY = 8;\n      let botY = 34;\n      if (len <= 9) {\n        topY += 10;\n        midY += 10;\n      } else {\n        botText = text.substring(7, 9) + \"...\";\n      }\n      d3text.text(\"\");\n      d3text\n        .append(\"tspan\")\n        .attr(\"x\", 0)\n        .attr(\"y\", topY)\n        .style(\"fill\", circleWordColor)\n        .text(function () {\n          return topText;\n        });\n      d3text\n        .append(\"tspan\")\n        .attr(\"x\", 0)\n        .attr(\"y\", midY)\n        .style(\"fill\", circleWordColor)\n        .text(function () {\n          return midText;\n        });\n      d3text\n        .append(\"tspan\")\n        .attr(\"x\", 0)\n        .attr(\"y\", botY - 7)\n        .style(\"fill\", circleWordColor)\n        .text(function () {\n          return botText;\n        });\n    }\n  }\n  // ticked\n  function ticked() {\n    // 连线路径\n    // links.attr(\"d\", (link) => genLinkPath(link));\n    // 连线文字位置\n    // 节点位置\n    gs.attr(\"transform\", function (d) {\n      return \"translate(\" + d.x + \",\" + d.y + \")\";\n    });\n  }\n  // drag\n  function started(event, d) {\n    if (!event.active) {\n      // forceSimulation.alphaTarget(0.8).restart(); // 设置衰减系数，对节点位置移动过程的模拟，数值越高移动越快，数值范围[0, 1]\n    }\n    d.fx = d.x;\n    d.fy = d.y;\n  }\n  function dragged(event, d) {\n    d.fx = event.x;\n    d.fy = event.y;\n  }\n  function ended(event, d) {\n    if (!event.active) {\n      // forceSimulation.alphaTarget(0);\n    }\n    d.fx = null;\n    d.fy = null;\n  }\n};\nexport default draw;\n\n// coursera-dl -u panqiping@outlook.com -p Peterpan61 --video-resolution 720p --download-quizzes --download-notebooks --cauth  k-YowgyTjx7qO1675wqByXaAiq_RLs2U9ifp6iCx9pWb8cyiCt3q5XPOUnIG3jQFHuHjC7vsp0Yi6Ant7lImHA.GyM5kFE6tr95bCQUbKXRDA.nKYJO2RX-Ypifv7YqUQrMFBiIBjOpAdyq-ihsnOVohW3FU4AMl8S_2Ic6CD7K0IEy2lwuA_YMMwqW5NaG1VkBgggneIEOtonf3_94J6hRErnB9cUKxFsnXGQlShzcqo9ziY14cWAu6lYhR4fq7saGQHsTCeRXISutx-eJQMnvgix3CmLKXMITzf-RW42EmRpozZzSMDi_Li4axYKqVr8gNnq-sZZ0JTs1LnAE9l7iCZLc6XTfy2lU5kU8-2Am03w2F8D9Negy3_CBYkWpz0XGEcAkSwnpFjKiqn3fpD1DGXsvt2mRu_AA_LIGhS3vyafLc8eJjvjppZHdqaiyacLsCPXgzXucLyEwPSM2kdd6hLfCYKAhQQxbLeZCs6MXYM5Jq9eSj2kakzyM6dVThZL4iK5YW46OuIVdMLCf7MIfng  nlp-sequence-models\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/position_json.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Sankey/index.js",[],"/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/charts/Sankey/vis.js",["519","520","521","522"],"// import Axios from \"axios\";\n// import colorScale from \"../../colorScale\";\nimport * as d3 from \"d3\";\nimport { sankey, sankeyLinkHorizontal } from \"d3-sankey\";\nimport mentorPosition from \"../../position_json\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Overlay from \"react-bootstrap/Overlay\";\nimport { useState, useRef } from \"react\";\n\nconst SankeyNode = ({\n  name,\n  x0,\n  x1,\n  y0,\n  y1,\n  color,\n  index,\n  sourceLinks,\n  targetLinks,\n  changeHighlight,\n  changeShow,\n  show,\n}) => {\n  const target = useRef(null);\n  return (\n    <g>\n      {/* <OverlayTrigger\n      placement=\"bottom\"\n      delay={{ show: 250, hide: 400 }}\n      overlay={\n        <Tooltip id={`tooltip-right`}>\n          Tooltip on <strong>right</strong>.\n        </Tooltip>\n      }\n    > */}\n      <rect\n        x={x0}\n        y={y0}\n        ref={target}\n        width={x1 - x0}\n        height={y1 - y0}\n        display={name === \"null\" ? \"none\" : \"block\"}\n        fill={color}\n        onMouseOver={(e) => {\n          console.log(sourceLinks);\n          changeShow([\n            index,\n            // ...sourceLinks.map((l) => l.index),\n            ...sourceLinks.map((l) => l.source.index),\n            ...sourceLinks.map((l) => l.target.index),\n            ...targetLinks.map((l) => l.source.index),\n            ...targetLinks.map((l) => l.target.index),\n            // ...targetLinks.map((l) => l.index),\n          ]);\n          changeHighlight([\n            ...sourceLinks.map((l) => l.index),\n            ...targetLinks.map((l) => l.index),\n          ]);\n        }}\n        onMouseOut={(e) => {\n          // setShow(!show);\n          changeShow([]);\n          changeHighlight([]);\n        }}\n      ></rect>\n\n      {name === \"null\" || (\n        <Overlay target={target.current} show={show} placement=\"bottom\">\n          {(props) => (\n            <Tooltip id=\"overlay-example\" {...props}>\n              {name}\n            </Tooltip>\n          )}\n        </Overlay>\n      )}\n      {/* <text\n        font-size=\"12\"\n        transform={`translate(18,-5) rotate(-90,${x0}, ${y1})`}\n        x={x0}\n        y={y1}\n        display={name === \"null\" ? \"none\" : \"block\"}\n        onMouseOver={(e) => {\n          changeHighlight([\n            ...sourceLinks.map((l) => l.index),\n            ...targetLinks.map((l) => l.index),\n          ]);\n        }}\n        onMouseOut={(e) => {\n          changeHighlight([]);\n        }}\n      >\n        {name}\n      </text> */}\n      {/* </OverlayTrigger> */}\n    </g>\n  );\n};\n\nconst SankeyLink = ({\n  link,\n  color,\n  opacity,\n  index,\n  changeHighlight,\n  nodes,\n}) => (\n  <path\n    d={sankeyLinkHorizontal()(link)}\n    style={{\n      fill: \"none\",\n      strokeOpacity: \".3\",\n      stroke: color,\n      display:\n        link.source.name === \"null\" || link.target.name === \"null\"\n          ? \"none\"\n          : \"block\",\n      strokeWidth: Math.max(1, link.width),\n      opacity,\n    }}\n    onMouseOver={(e) => {\n      changeHighlight([index]);\n    }}\n    onMouseOut={(e) => {\n      changeHighlight([]);\n    }}\n  />\n);\n\nconst MysteriousSankey = ({\n  data,\n  width,\n  height,\n  highlightIndex,\n  changeHighlight,\n  showIndex,\n  changeShow,\n}) => {\n  width = 800;\n  height = 600;\n  // if (data.length === 0)\n  // data = {\n  //   nodes: [\n  //     { name: \"电院\" }, //0\n  //     { name: \"生物工程\" }, //1\n  //     { name: \"安泰\" }, //2\n  //     { name: \"环境\" }, //3\n  //     { name: \"key3\" }, //9\n  //     { name: \"教师2\" }, //5\n  //     { name: \"教师3\" }, //6\n  //     { name: \"教师4\" }, //7\n  //     { name: \"key2\" }, //8\n  //     { name: \"教师1\" }, //4\n\n  //     { name: \"key4\" },\n  //   ],\n  //   links: [\n  //     { source: 0, target: 9, value: 2 },\n  //     { source: 1, target: 5, value: 2 },\n  //     { source: 2, target: 6, value: 2 },\n  //     { source: 3, target: 7, value: 2 },\n  //     { source: 9, target: 8, value: 2 },\n  //     { source: 9, target: 4, value: 2 },\n  //     { source: 5, target: 4, value: 2 },\n  //     { source: 6, target: 10, value: 2 },\n  //     { source: 7, target: 8, value: 2 },\n  //   ],\n  // };\n  if (data.nodes.length === 0) {\n    return <div></div>;\n  } else {\n    const { nodes, links } = sankey()\n      .nodeWidth(25)\n      .nodePadding(10)\n      .extent([\n        [1, 1],\n        [width - 20, height - 5],\n      ])(data);\n    // const color = chroma.scale(\"Set3\").classes(nodes.length);\n    return (\n      <g style={{ mixBlendMode: \"multiply\" }}>\n        {nodes.map((node, i) => (\n          <SankeyNode\n            {...node}\n            color=\"#dde\"\n            index={i}\n            show={showIndex.includes(i) ? true : false}\n            key={node.name}\n            changeHighlight={changeHighlight}\n            changeShow={changeShow}\n          />\n        ))}\n        {links.map((link, i) => {\n          return (\n            <SankeyLink\n              link={link}\n              color={highlightIndex.includes(i) ? \"red\" : \"#bbb\"}\n              opacity={highlightIndex.includes(i) ? 1 : 0.5}\n              index={i}\n              changeHighlight={changeHighlight}\n              nodes={data.nodes}\n              changeShow={changeShow}\n            />\n          );\n        })}\n      </g>\n    );\n  }\n};\n\n// export default draw;\n\n// const draw = ({\n//   mapNode,\n//   scale,\n//   width,\n//   height,\n//   Ox,\n//   Oy,\n//   Oscale,\n//   onChangeMentor,\n//   selectedMentor,\n// }) => {\n//   d3.selectAll(\".vis-flow > *\").remove();\n//   var data = {\n//     nodes: [\n//       { name: \"0\" },\n//       { name: \"1\" },\n//       { name: \"2\" },\n//       { name: \"3\" },\n//       { name: \"4\" },\n//       { name: \"5\" },\n//       { name: \"6\" },\n//       { name: \"7\" },\n//       { name: \"8\" },\n//     ],\n//     links: [\n//       { source: 0, target: 3, value: 10 },\n//       { source: 1, target: 4, value: 10 },\n//       { source: 2, target: 4, value: 5 },\n//       { source: 1, target: 5, value: 5 },\n//       { source: 3, target: 6, value: 5 },\n//       { source: 3, target: 7, value: 5 },\n//       { source: 4, target: 7, value: 10 },\n//       { source: 4, target: 8, value: 5 },\n//       { source: 5, target: 8, value: 5 },\n//     ],\n//   };\n\n//   const { nodes, links } = sankey()\n//     .nodeWidth(15)\n//     .nodePadding(10)\n//     .extent([\n//       [1, 1],\n//       [width - 1, height - 5],\n//     ])(data);\n\n//   // var sankey = Sankey()\n//   //   .nodeWidth(80)\n//   //   .nodePadding(40)\n//   //   .size([width, height])\n//   //   .nodes(data.nodes)\n//   //   .links(data.links);\n//   // var path = sankey.links();\n//   // 绘制连接数据\n//   // console.log(sankey.links(data.links));\n//   let svg = d3\n//     .select(\".vis-flow\")\n//     .append(\"svg\")\n//     .attr(\"width\", width)\n//     .attr(\"height\", height)\n//     .call(d3.zoom);\n//   var Links = svg.append(\"g\").selectAll(\"path\").data(links).enter();\n//   // 绑定节点数据\n//   var Nodes = svg.append(\"g\").selectAll(\".node\").data(nodes).enter();\n\n//   // 绘制连接线\n//   Links.append(\"path\")\n//     .attr(\"fill\", \"none\")\n//     .attr(\"stroke\", function (d, i) {\n//       return \"red\";\n//     })\n//     .attr(\"stroke-opacity\", 0.5)\n//     .attr(\"d\", links)\n//     .attr(\"id\", function (d, i) {\n//       return \"link\" + i;\n//     })\n//     .style(\"stroke-width\", function (d) {\n//       //连线的宽度\n//       return Math.max(1, d.dy);\n//     });\n\n//   // 绘制圆形节点\n//   Nodes.append(\"circle\")\n//     .attr(\"transform\", function (d) {\n//       return \"translate(\" + d.x + \",\" + d.y + \")\";\n//     })\n//     .attr(\"r\", function (d) {\n//       return d.dy / 2;\n//     })\n//     .attr(\"cx\", function (d) {\n//       return d.dx / 2;\n//     })\n//     .attr(\"cy\", function (d) {\n//       return d.dy / 2;\n//     })\n//     .style(\"fill\", \"tomato\")\n//     .style(\"stroke\", \"gray\");\n\n//   // Nodes.append(\"text\")\n//   //   .attr(\"x\", (d) => d.x + sankey.nodeWidth() / 2)\n//   //   .attr(\"y\", (d) => d.y + d.dy / 2)\n//   //   .text(function (d) {\n//   //     return d.name;\n//   //   });\n//   // Links.append(\"text\")\n//   //   .append(\"textPath\")\n//   //   .attr(\"xlink:href\", function (d, i) {\n//   //     return \"#link\" + i;\n//   //   })\n//   //   .attr(\"startOffset\", \"50%\")\n//   //   .text(function (d) {\n//   //     return \"流量:\" + d.value;\n//   //   });\n// };\n// export default draw;\nexport default MysteriousSankey;\n","/Users/panqp/Documents/GitHub/PRP-Project/visualization/db/client/src/components/Notice.jsx",[],{"ruleId":"523","severity":1,"message":"524","line":5,"column":8,"nodeType":"525","messageId":"526","endLine":5,"endColumn":17},{"ruleId":"527","replacedBy":"528"},{"ruleId":"529","replacedBy":"530"},{"ruleId":"523","severity":1,"message":"531","line":2,"column":10,"nodeType":"525","messageId":"526","endLine":2,"endColumn":16},{"ruleId":"523","severity":1,"message":"532","line":2,"column":23,"nodeType":"525","messageId":"526","endLine":2,"endColumn":26},{"ruleId":"523","severity":1,"message":"533","line":13,"column":10,"nodeType":"525","messageId":"526","endLine":13,"endColumn":17},{"ruleId":"523","severity":1,"message":"534","line":13,"column":19,"nodeType":"525","messageId":"526","endLine":13,"endColumn":24},{"ruleId":"523","severity":1,"message":"535","line":18,"column":8,"nodeType":"525","messageId":"526","endLine":18,"endColumn":12},{"ruleId":"523","severity":1,"message":"536","line":23,"column":9,"nodeType":"525","messageId":"526","endLine":23,"endColumn":14},{"ruleId":"523","severity":1,"message":"537","line":23,"column":16,"nodeType":"525","messageId":"526","endLine":23,"endColumn":23},{"ruleId":"523","severity":1,"message":"538","line":23,"column":25,"nodeType":"525","messageId":"526","endLine":23,"endColumn":31},{"ruleId":"539","severity":1,"message":"540","line":109,"column":46,"nodeType":"541","messageId":"542","endLine":109,"endColumn":48},{"ruleId":"523","severity":1,"message":"543","line":119,"column":11,"nodeType":"525","messageId":"526","endLine":119,"endColumn":15},{"ruleId":"523","severity":1,"message":"544","line":139,"column":7,"nodeType":"525","messageId":"526","endLine":139,"endColumn":11},{"ruleId":"523","severity":1,"message":"545","line":140,"column":7,"nodeType":"525","messageId":"526","endLine":140,"endColumn":19},{"ruleId":"523","severity":1,"message":"546","line":142,"column":7,"nodeType":"525","messageId":"526","endLine":142,"endColumn":21},{"ruleId":"523","severity":1,"message":"547","line":143,"column":7,"nodeType":"525","messageId":"526","endLine":143,"endColumn":11},{"ruleId":"523","severity":1,"message":"548","line":243,"column":9,"nodeType":"525","messageId":"526","endLine":243,"endColumn":21},{"ruleId":"523","severity":1,"message":"549","line":245,"column":7,"nodeType":"525","messageId":"526","endLine":245,"endColumn":11},{"ruleId":"539","severity":1,"message":"550","line":247,"column":20,"nodeType":"541","messageId":"542","endLine":247,"endColumn":22},{"ruleId":"523","severity":1,"message":"551","line":2,"column":8,"nodeType":"525","messageId":"526","endLine":2,"endColumn":9},{"ruleId":"523","severity":1,"message":"552","line":2,"column":13,"nodeType":"525","messageId":"526","endLine":2,"endColumn":18},{"ruleId":"523","severity":1,"message":"553","line":26,"column":7,"nodeType":"525","messageId":"526","endLine":26,"endColumn":14},{"ruleId":"523","severity":1,"message":"554","line":27,"column":7,"nodeType":"525","messageId":"526","endLine":27,"endColumn":12},{"ruleId":"523","severity":1,"message":"555","line":34,"column":34,"nodeType":"525","messageId":"526","endLine":34,"endColumn":42},{"ruleId":"539","severity":1,"message":"540","line":50,"column":27,"nodeType":"541","messageId":"542","endLine":50,"endColumn":29},{"ruleId":"539","severity":1,"message":"540","line":52,"column":15,"nodeType":"541","messageId":"542","endLine":52,"endColumn":17},{"ruleId":"523","severity":1,"message":"556","line":1,"column":10,"nodeType":"525","messageId":"526","endLine":1,"endColumn":17},{"ruleId":"523","severity":1,"message":"557","line":3,"column":13,"nodeType":"525","messageId":"526","endLine":3,"endColumn":15},{"ruleId":"523","severity":1,"message":"558","line":5,"column":9,"nodeType":"525","messageId":"526","endLine":5,"endColumn":10},{"ruleId":"523","severity":1,"message":"559","line":4,"column":8,"nodeType":"525","messageId":"526","endLine":4,"endColumn":12},{"ruleId":"523","severity":1,"message":"560","line":5,"column":10,"nodeType":"525","messageId":"526","endLine":5,"endColumn":19},{"ruleId":"523","severity":1,"message":"545","line":20,"column":18,"nodeType":"525","messageId":"526","endLine":20,"endColumn":30},{"ruleId":"523","severity":1,"message":"561","line":3,"column":10,"nodeType":"525","messageId":"526","endLine":3,"endColumn":21},{"ruleId":"523","severity":1,"message":"562","line":30,"column":7,"nodeType":"525","messageId":"526","endLine":30,"endColumn":13},{"ruleId":"523","severity":1,"message":"546","line":6,"column":26,"nodeType":"525","messageId":"526","endLine":6,"endColumn":40},{"ruleId":"563","severity":1,"message":"564","line":31,"column":25,"nodeType":"541","messageId":"565","endLine":31,"endColumn":26},{"ruleId":"563","severity":1,"message":"564","line":36,"column":25,"nodeType":"541","messageId":"565","endLine":36,"endColumn":26},{"ruleId":"523","severity":1,"message":"566","line":47,"column":20,"nodeType":"525","messageId":"526","endLine":47,"endColumn":28},{"ruleId":"523","severity":1,"message":"567","line":5,"column":25,"nodeType":"525","messageId":"526","endLine":5,"endColumn":38},{"ruleId":"523","severity":1,"message":"568","line":42,"column":9,"nodeType":"525","messageId":"526","endLine":42,"endColumn":15},{"ruleId":"523","severity":1,"message":"569","line":47,"column":9,"nodeType":"525","messageId":"526","endLine":47,"endColumn":15},{"ruleId":"523","severity":1,"message":"570","line":58,"column":7,"nodeType":"525","messageId":"526","endLine":58,"endColumn":17},{"ruleId":"523","severity":1,"message":"571","line":157,"column":7,"nodeType":"525","messageId":"526","endLine":157,"endColumn":14},{"ruleId":"523","severity":1,"message":"572","line":185,"column":9,"nodeType":"525","messageId":"526","endLine":185,"endColumn":13},{"ruleId":"523","severity":1,"message":"533","line":3,"column":10,"nodeType":"525","messageId":"526","endLine":3,"endColumn":17},{"ruleId":"523","severity":1,"message":"573","line":4,"column":8,"nodeType":"525","messageId":"526","endLine":4,"endColumn":16},{"ruleId":"523","severity":1,"message":"546","line":7,"column":26,"nodeType":"525","messageId":"526","endLine":7,"endColumn":40},{"ruleId":"527","replacedBy":"574"},{"ruleId":"529","replacedBy":"575"},{"ruleId":"523","severity":1,"message":"556","line":1,"column":10,"nodeType":"525","messageId":"526","endLine":1,"endColumn":17},{"ruleId":"523","severity":1,"message":"557","line":3,"column":13,"nodeType":"525","messageId":"526","endLine":3,"endColumn":15},{"ruleId":"563","severity":1,"message":"564","line":31,"column":25,"nodeType":"541","messageId":"565","endLine":31,"endColumn":26},{"ruleId":"563","severity":1,"message":"564","line":36,"column":25,"nodeType":"541","messageId":"565","endLine":36,"endColumn":26},{"ruleId":"523","severity":1,"message":"566","line":47,"column":20,"nodeType":"525","messageId":"526","endLine":47,"endColumn":28},{"ruleId":"523","severity":1,"message":"546","line":6,"column":26,"nodeType":"525","messageId":"526","endLine":6,"endColumn":40},{"ruleId":"523","severity":1,"message":"567","line":6,"column":42,"nodeType":"525","messageId":"526","endLine":6,"endColumn":55},{"ruleId":"523","severity":1,"message":"559","line":4,"column":8,"nodeType":"525","messageId":"526","endLine":4,"endColumn":12},{"ruleId":"523","severity":1,"message":"560","line":5,"column":10,"nodeType":"525","messageId":"526","endLine":5,"endColumn":19},{"ruleId":"523","severity":1,"message":"545","line":33,"column":18,"nodeType":"525","messageId":"526","endLine":33,"endColumn":30},{"ruleId":"539","severity":1,"message":"540","line":79,"column":12,"nodeType":"541","messageId":"542","endLine":79,"endColumn":14},{"ruleId":"523","severity":1,"message":"573","line":4,"column":8,"nodeType":"525","messageId":"526","endLine":4,"endColumn":16},{"ruleId":"523","severity":1,"message":"546","line":7,"column":26,"nodeType":"525","messageId":"526","endLine":7,"endColumn":40},{"ruleId":"523","severity":1,"message":"576","line":64,"column":11,"nodeType":"525","messageId":"526","endLine":64,"endColumn":12},{"ruleId":"539","severity":1,"message":"550","line":85,"column":24,"nodeType":"541","messageId":"542","endLine":85,"endColumn":26},{"ruleId":"523","severity":1,"message":"551","line":2,"column":8,"nodeType":"525","messageId":"526","endLine":2,"endColumn":9},{"ruleId":"523","severity":1,"message":"552","line":2,"column":13,"nodeType":"525","messageId":"526","endLine":2,"endColumn":18},{"ruleId":"523","severity":1,"message":"573","line":5,"column":8,"nodeType":"525","messageId":"526","endLine":5,"endColumn":16},{"ruleId":"523","severity":1,"message":"553","line":26,"column":7,"nodeType":"525","messageId":"526","endLine":26,"endColumn":14},{"ruleId":"523","severity":1,"message":"554","line":27,"column":7,"nodeType":"525","messageId":"526","endLine":27,"endColumn":12},{"ruleId":"539","severity":1,"message":"540","line":55,"column":15,"nodeType":"541","messageId":"542","endLine":55,"endColumn":17},{"ruleId":"539","severity":1,"message":"540","line":56,"column":15,"nodeType":"541","messageId":"542","endLine":56,"endColumn":17},{"ruleId":"523","severity":1,"message":"567","line":5,"column":25,"nodeType":"525","messageId":"526","endLine":5,"endColumn":38},{"ruleId":"523","severity":1,"message":"568","line":42,"column":9,"nodeType":"525","messageId":"526","endLine":42,"endColumn":15},{"ruleId":"523","severity":1,"message":"569","line":47,"column":9,"nodeType":"525","messageId":"526","endLine":47,"endColumn":15},{"ruleId":"523","severity":1,"message":"570","line":58,"column":7,"nodeType":"525","messageId":"526","endLine":58,"endColumn":17},{"ruleId":"523","severity":1,"message":"571","line":157,"column":7,"nodeType":"525","messageId":"526","endLine":157,"endColumn":14},{"ruleId":"523","severity":1,"message":"572","line":185,"column":9,"nodeType":"525","messageId":"526","endLine":185,"endColumn":13},{"ruleId":"523","severity":1,"message":"558","line":5,"column":9,"nodeType":"525","messageId":"526","endLine":5,"endColumn":10},{"ruleId":"523","severity":1,"message":"561","line":3,"column":10,"nodeType":"525","messageId":"526","endLine":3,"endColumn":21},{"ruleId":"523","severity":1,"message":"562","line":34,"column":7,"nodeType":"525","messageId":"526","endLine":34,"endColumn":13},{"ruleId":"523","severity":1,"message":"533","line":3,"column":10,"nodeType":"525","messageId":"526","endLine":3,"endColumn":17},{"ruleId":"523","severity":1,"message":"531","line":2,"column":10,"nodeType":"525","messageId":"526","endLine":2,"endColumn":16},{"ruleId":"523","severity":1,"message":"532","line":2,"column":23,"nodeType":"525","messageId":"526","endLine":2,"endColumn":26},{"ruleId":"523","severity":1,"message":"533","line":7,"column":10,"nodeType":"525","messageId":"526","endLine":7,"endColumn":17},{"ruleId":"523","severity":1,"message":"534","line":7,"column":19,"nodeType":"525","messageId":"526","endLine":7,"endColumn":24},{"ruleId":"523","severity":1,"message":"535","line":12,"column":8,"nodeType":"525","messageId":"526","endLine":12,"endColumn":12},{"ruleId":"523","severity":1,"message":"577","line":14,"column":8,"nodeType":"525","messageId":"526","endLine":14,"endColumn":15},{"ruleId":"523","severity":1,"message":"536","line":19,"column":9,"nodeType":"525","messageId":"526","endLine":19,"endColumn":14},{"ruleId":"523","severity":1,"message":"537","line":19,"column":16,"nodeType":"525","messageId":"526","endLine":19,"endColumn":23},{"ruleId":"523","severity":1,"message":"538","line":19,"column":25,"nodeType":"525","messageId":"526","endLine":19,"endColumn":31},{"ruleId":"523","severity":1,"message":"544","line":109,"column":11,"nodeType":"525","messageId":"526","endLine":109,"endColumn":15},{"ruleId":"523","severity":1,"message":"567","line":109,"column":17,"nodeType":"525","messageId":"526","endLine":109,"endColumn":30},{"ruleId":"523","severity":1,"message":"546","line":109,"column":32,"nodeType":"525","messageId":"526","endLine":109,"endColumn":46},{"ruleId":"539","severity":1,"message":"550","line":123,"column":40,"nodeType":"541","messageId":"542","endLine":123,"endColumn":42},{"ruleId":"523","severity":1,"message":"548","line":201,"column":9,"nodeType":"525","messageId":"526","endLine":201,"endColumn":21},{"ruleId":"523","severity":1,"message":"549","line":203,"column":7,"nodeType":"525","messageId":"526","endLine":203,"endColumn":11},{"ruleId":"539","severity":1,"message":"550","line":205,"column":20,"nodeType":"541","messageId":"542","endLine":205,"endColumn":22},{"ruleId":"523","severity":1,"message":"531","line":2,"column":10,"nodeType":"525","messageId":"526","endLine":2,"endColumn":16},{"ruleId":"523","severity":1,"message":"532","line":2,"column":23,"nodeType":"525","messageId":"526","endLine":2,"endColumn":26},{"ruleId":"523","severity":1,"message":"578","line":2,"column":28,"nodeType":"525","messageId":"526","endLine":2,"endColumn":33},{"ruleId":"523","severity":1,"message":"533","line":8,"column":10,"nodeType":"525","messageId":"526","endLine":8,"endColumn":17},{"ruleId":"523","severity":1,"message":"534","line":8,"column":19,"nodeType":"525","messageId":"526","endLine":8,"endColumn":24},{"ruleId":"523","severity":1,"message":"579","line":9,"column":8,"nodeType":"525","messageId":"526","endLine":9,"endColumn":18},{"ruleId":"523","severity":1,"message":"580","line":10,"column":8,"nodeType":"525","messageId":"526","endLine":10,"endColumn":14},{"ruleId":"523","severity":1,"message":"581","line":12,"column":8,"nodeType":"525","messageId":"526","endLine":12,"endColumn":14},{"ruleId":"523","severity":1,"message":"535","line":13,"column":8,"nodeType":"525","messageId":"526","endLine":13,"endColumn":12},{"ruleId":"523","severity":1,"message":"582","line":14,"column":8,"nodeType":"525","messageId":"526","endLine":14,"endColumn":17},{"ruleId":"523","severity":1,"message":"577","line":15,"column":8,"nodeType":"525","messageId":"526","endLine":15,"endColumn":15},{"ruleId":"523","severity":1,"message":"583","line":16,"column":8,"nodeType":"525","messageId":"526","endLine":16,"endColumn":13},{"ruleId":"523","severity":1,"message":"584","line":18,"column":8,"nodeType":"525","messageId":"526","endLine":18,"endColumn":12},{"ruleId":"523","severity":1,"message":"585","line":19,"column":8,"nodeType":"525","messageId":"526","endLine":19,"endColumn":11},{"ruleId":"523","severity":1,"message":"586","line":23,"column":10,"nodeType":"525","messageId":"526","endLine":23,"endColumn":17},{"ruleId":"523","severity":1,"message":"536","line":25,"column":9,"nodeType":"525","messageId":"526","endLine":25,"endColumn":14},{"ruleId":"523","severity":1,"message":"537","line":25,"column":16,"nodeType":"525","messageId":"526","endLine":25,"endColumn":23},{"ruleId":"523","severity":1,"message":"538","line":25,"column":25,"nodeType":"525","messageId":"526","endLine":25,"endColumn":31},{"ruleId":"523","severity":1,"message":"544","line":135,"column":11,"nodeType":"525","messageId":"526","endLine":135,"endColumn":15},{"ruleId":"523","severity":1,"message":"567","line":135,"column":17,"nodeType":"525","messageId":"526","endLine":135,"endColumn":30},{"ruleId":"523","severity":1,"message":"546","line":135,"column":32,"nodeType":"525","messageId":"526","endLine":135,"endColumn":46},{"ruleId":"523","severity":1,"message":"587","line":137,"column":9,"nodeType":"525","messageId":"526","endLine":137,"endColumn":12},{"ruleId":"539","severity":1,"message":"550","line":151,"column":40,"nodeType":"541","messageId":"542","endLine":151,"endColumn":42},{"ruleId":"588","severity":1,"message":"589","line":222,"column":25,"nodeType":"590","messageId":"591","endLine":222,"endColumn":27},{"ruleId":"539","severity":1,"message":"550","line":223,"column":58,"nodeType":"541","messageId":"542","endLine":223,"endColumn":60},{"ruleId":"588","severity":1,"message":"589","line":294,"column":25,"nodeType":"590","messageId":"591","endLine":294,"endColumn":27},{"ruleId":"539","severity":1,"message":"550","line":295,"column":58,"nodeType":"541","messageId":"542","endLine":295,"endColumn":60},{"ruleId":"523","severity":1,"message":"566","line":346,"column":11,"nodeType":"525","messageId":"526","endLine":346,"endColumn":19},{"ruleId":"523","severity":1,"message":"544","line":347,"column":13,"nodeType":"525","messageId":"526","endLine":347,"endColumn":17},{"ruleId":"523","severity":1,"message":"545","line":347,"column":19,"nodeType":"525","messageId":"526","endLine":347,"endColumn":31},{"ruleId":"523","severity":1,"message":"547","line":347,"column":48,"nodeType":"525","messageId":"526","endLine":347,"endColumn":52},{"ruleId":"523","severity":1,"message":"544","line":397,"column":7,"nodeType":"525","messageId":"526","endLine":397,"endColumn":11},{"ruleId":"523","severity":1,"message":"592","line":401,"column":7,"nodeType":"525","messageId":"526","endLine":401,"endColumn":12},{"ruleId":"523","severity":1,"message":"593","line":402,"column":7,"nodeType":"525","messageId":"526","endLine":402,"endColumn":12},{"ruleId":"523","severity":1,"message":"594","line":404,"column":7,"nodeType":"525","messageId":"526","endLine":404,"endColumn":17},{"ruleId":"523","severity":1,"message":"595","line":405,"column":7,"nodeType":"525","messageId":"526","endLine":405,"endColumn":16},{"ruleId":"523","severity":1,"message":"596","line":406,"column":7,"nodeType":"525","messageId":"526","endLine":406,"endColumn":19},{"ruleId":"523","severity":1,"message":"548","line":415,"column":9,"nodeType":"525","messageId":"526","endLine":415,"endColumn":21},{"ruleId":"523","severity":1,"message":"549","line":417,"column":7,"nodeType":"525","messageId":"526","endLine":417,"endColumn":11},{"ruleId":"539","severity":1,"message":"550","line":419,"column":20,"nodeType":"541","messageId":"542","endLine":419,"endColumn":22},{"ruleId":"523","severity":1,"message":"597","line":8,"column":9,"nodeType":"525","messageId":"526","endLine":8,"endColumn":13},{"ruleId":"523","severity":1,"message":"598","line":3,"column":8,"nodeType":"525","messageId":"526","endLine":3,"endColumn":13},{"ruleId":"523","severity":1,"message":"599","line":27,"column":9,"nodeType":"525","messageId":"526","endLine":27,"endColumn":20},{"ruleId":"539","severity":1,"message":"550","line":32,"column":19,"nodeType":"541","messageId":"542","endLine":32,"endColumn":21},{"ruleId":"523","severity":1,"message":"600","line":49,"column":9,"nodeType":"525","messageId":"526","endLine":49,"endColumn":25},{"ruleId":"523","severity":1,"message":"601","line":62,"column":9,"nodeType":"525","messageId":"526","endLine":62,"endColumn":12},{"ruleId":"539","severity":1,"message":"550","line":201,"column":34,"nodeType":"541","messageId":"542","endLine":201,"endColumn":36},{"ruleId":"523","severity":1,"message":"602","line":259,"column":7,"nodeType":"525","messageId":"526","endLine":259,"endColumn":13},{"ruleId":"523","severity":1,"message":"603","line":364,"column":12,"nodeType":"525","messageId":"526","endLine":364,"endColumn":26},{"ruleId":"523","severity":1,"message":"604","line":517,"column":12,"nodeType":"525","messageId":"526","endLine":517,"endColumn":24},{"ruleId":"523","severity":1,"message":"605","line":553,"column":7,"nodeType":"525","messageId":"526","endLine":553,"endColumn":16},{"ruleId":"523","severity":1,"message":"606","line":554,"column":7,"nodeType":"525","messageId":"526","endLine":554,"endColumn":17},{"ruleId":"523","severity":1,"message":"607","line":555,"column":7,"nodeType":"525","messageId":"526","endLine":555,"endColumn":16},{"ruleId":"608","severity":1,"message":"609","line":584,"column":9,"nodeType":"610","messageId":"611","endLine":591,"endColumn":10},{"ruleId":"523","severity":1,"message":"612","line":659,"column":15,"nodeType":"525","messageId":"526","endLine":659,"endColumn":16},{"ruleId":"539","severity":1,"message":"550","line":708,"column":23,"nodeType":"541","messageId":"542","endLine":708,"endColumn":25},{"ruleId":"539","severity":1,"message":"550","line":708,"column":49,"nodeType":"541","messageId":"542","endLine":708,"endColumn":51},{"ruleId":"539","severity":1,"message":"550","line":714,"column":23,"nodeType":"541","messageId":"542","endLine":714,"endColumn":25},{"ruleId":"539","severity":1,"message":"550","line":718,"column":23,"nodeType":"541","messageId":"542","endLine":718,"endColumn":25},{"ruleId":"539","severity":1,"message":"550","line":727,"column":34,"nodeType":"541","messageId":"542","endLine":727,"endColumn":36},{"ruleId":"539","severity":1,"message":"550","line":727,"column":63,"nodeType":"541","messageId":"542","endLine":727,"endColumn":65},{"ruleId":"588","severity":1,"message":"613","line":740,"column":44,"nodeType":"590","messageId":"591","endLine":740,"endColumn":46},{"ruleId":"539","severity":1,"message":"550","line":747,"column":21,"nodeType":"541","messageId":"542","endLine":747,"endColumn":23},{"ruleId":"539","severity":1,"message":"550","line":747,"column":50,"nodeType":"541","messageId":"542","endLine":747,"endColumn":52},{"ruleId":"539","severity":1,"message":"550","line":756,"column":16,"nodeType":"541","messageId":"542","endLine":756,"endColumn":18},{"ruleId":"539","severity":1,"message":"550","line":772,"column":61,"nodeType":"541","messageId":"542","endLine":772,"endColumn":63},{"ruleId":"539","severity":1,"message":"550","line":780,"column":23,"nodeType":"541","messageId":"542","endLine":780,"endColumn":25},{"ruleId":"539","severity":1,"message":"550","line":780,"column":49,"nodeType":"541","messageId":"542","endLine":780,"endColumn":51},{"ruleId":"539","severity":1,"message":"550","line":787,"column":23,"nodeType":"541","messageId":"542","endLine":787,"endColumn":25},{"ruleId":"539","severity":1,"message":"550","line":791,"column":23,"nodeType":"541","messageId":"542","endLine":791,"endColumn":25},{"ruleId":"539","severity":1,"message":"550","line":800,"column":34,"nodeType":"541","messageId":"542","endLine":800,"endColumn":36},{"ruleId":"539","severity":1,"message":"550","line":800,"column":63,"nodeType":"541","messageId":"542","endLine":800,"endColumn":65},{"ruleId":"539","severity":1,"message":"550","line":815,"column":16,"nodeType":"541","messageId":"542","endLine":815,"endColumn":18},{"ruleId":"523","severity":1,"message":"614","line":858,"column":12,"nodeType":"525","messageId":"526","endLine":858,"endColumn":22},{"ruleId":"523","severity":1,"message":"615","line":871,"column":7,"nodeType":"525","messageId":"526","endLine":871,"endColumn":17},{"ruleId":"523","severity":1,"message":"549","line":878,"column":15,"nodeType":"525","messageId":"526","endLine":878,"endColumn":19},{"ruleId":"523","severity":1,"message":"616","line":878,"column":21,"nodeType":"525","messageId":"526","endLine":878,"endColumn":23},{"ruleId":"523","severity":1,"message":"617","line":878,"column":25,"nodeType":"525","messageId":"526","endLine":878,"endColumn":31},{"ruleId":"523","severity":1,"message":"618","line":878,"column":33,"nodeType":"525","messageId":"526","endLine":878,"endColumn":37},{"ruleId":"523","severity":1,"message":"619","line":878,"column":39,"nodeType":"525","messageId":"526","endLine":878,"endColumn":47},{"ruleId":"523","severity":1,"message":"620","line":878,"column":49,"nodeType":"525","messageId":"526","endLine":878,"endColumn":50},{"ruleId":"523","severity":1,"message":"621","line":878,"column":52,"nodeType":"525","messageId":"526","endLine":878,"endColumn":53},{"ruleId":"523","severity":1,"message":"622","line":878,"column":55,"nodeType":"525","messageId":"526","endLine":878,"endColumn":57},{"ruleId":"523","severity":1,"message":"623","line":878,"column":59,"nodeType":"525","messageId":"526","endLine":878,"endColumn":61},{"ruleId":"523","severity":1,"message":"624","line":878,"column":63,"nodeType":"525","messageId":"526","endLine":878,"endColumn":65},{"ruleId":"523","severity":1,"message":"625","line":888,"column":7,"nodeType":"525","messageId":"526","endLine":888,"endColumn":15},{"ruleId":"523","severity":1,"message":"626","line":905,"column":9,"nodeType":"525","messageId":"526","endLine":905,"endColumn":13},{"ruleId":"588","severity":1,"message":"627","line":1028,"column":19,"nodeType":"628","messageId":"591","endLine":1028,"endColumn":28},{"ruleId":"523","severity":1,"message":"554","line":1064,"column":11,"nodeType":"525","messageId":"526","endLine":1064,"endColumn":16},{"ruleId":"523","severity":1,"message":"629","line":1065,"column":11,"nodeType":"525","messageId":"526","endLine":1065,"endColumn":16},{"ruleId":"588","severity":1,"message":"627","line":1074,"column":15,"nodeType":"628","messageId":"591","endLine":1074,"endColumn":24},{"ruleId":"539","severity":1,"message":"540","line":25,"column":23,"nodeType":"541","messageId":"542","endLine":25,"endColumn":25},{"ruleId":"523","severity":1,"message":"630","line":27,"column":19,"nodeType":"525","messageId":"526","endLine":27,"endColumn":27},{"ruleId":"539","severity":1,"message":"550","line":29,"column":64,"nodeType":"541","messageId":"542","endLine":29,"endColumn":66},{"ruleId":"523","severity":1,"message":"631","line":2,"column":8,"nodeType":"525","messageId":"526","endLine":2,"endColumn":13},{"ruleId":"523","severity":1,"message":"599","line":31,"column":9,"nodeType":"525","messageId":"526","endLine":31,"endColumn":20},{"ruleId":"523","severity":1,"message":"600","line":38,"column":9,"nodeType":"525","messageId":"526","endLine":38,"endColumn":25},{"ruleId":"523","severity":1,"message":"632","line":39,"column":9,"nodeType":"525","messageId":"526","endLine":39,"endColumn":23},{"ruleId":"523","severity":1,"message":"633","line":40,"column":9,"nodeType":"525","messageId":"526","endLine":40,"endColumn":23},{"ruleId":"539","severity":1,"message":"550","line":192,"column":20,"nodeType":"541","messageId":"542","endLine":192,"endColumn":22},{"ruleId":"523","severity":1,"message":"634","line":210,"column":7,"nodeType":"525","messageId":"526","endLine":210,"endColumn":12},{"ruleId":"523","severity":1,"message":"544","line":273,"column":9,"nodeType":"525","messageId":"526","endLine":273,"endColumn":13},{"ruleId":"523","severity":1,"message":"635","line":279,"column":12,"nodeType":"525","messageId":"526","endLine":279,"endColumn":22},{"ruleId":"523","severity":1,"message":"604","line":307,"column":12,"nodeType":"525","messageId":"526","endLine":307,"endColumn":24},{"ruleId":"523","severity":1,"message":"636","line":308,"column":9,"nodeType":"525","messageId":"526","endLine":308,"endColumn":17},{"ruleId":"523","severity":1,"message":"605","line":343,"column":7,"nodeType":"525","messageId":"526","endLine":343,"endColumn":16},{"ruleId":"523","severity":1,"message":"606","line":344,"column":7,"nodeType":"525","messageId":"526","endLine":344,"endColumn":17},{"ruleId":"523","severity":1,"message":"607","line":345,"column":7,"nodeType":"525","messageId":"526","endLine":345,"endColumn":16},{"ruleId":"523","severity":1,"message":"637","line":351,"column":9,"nodeType":"525","messageId":"526","endLine":351,"endColumn":12},{"ruleId":"523","severity":1,"message":"638","line":358,"column":12,"nodeType":"525","messageId":"526","endLine":358,"endColumn":27},{"ruleId":"539","severity":1,"message":"550","line":369,"column":23,"nodeType":"541","messageId":"542","endLine":369,"endColumn":25},{"ruleId":"539","severity":1,"message":"550","line":369,"column":49,"nodeType":"541","messageId":"542","endLine":369,"endColumn":51},{"ruleId":"539","severity":1,"message":"550","line":375,"column":23,"nodeType":"541","messageId":"542","endLine":375,"endColumn":25},{"ruleId":"539","severity":1,"message":"550","line":379,"column":23,"nodeType":"541","messageId":"542","endLine":379,"endColumn":25},{"ruleId":"539","severity":1,"message":"550","line":388,"column":34,"nodeType":"541","messageId":"542","endLine":388,"endColumn":36},{"ruleId":"539","severity":1,"message":"550","line":388,"column":63,"nodeType":"541","messageId":"542","endLine":388,"endColumn":65},{"ruleId":"588","severity":1,"message":"613","line":401,"column":44,"nodeType":"590","messageId":"591","endLine":401,"endColumn":46},{"ruleId":"539","severity":1,"message":"550","line":408,"column":21,"nodeType":"541","messageId":"542","endLine":408,"endColumn":23},{"ruleId":"539","severity":1,"message":"550","line":408,"column":50,"nodeType":"541","messageId":"542","endLine":408,"endColumn":52},{"ruleId":"539","severity":1,"message":"550","line":417,"column":16,"nodeType":"541","messageId":"542","endLine":417,"endColumn":18},{"ruleId":"523","severity":1,"message":"639","line":431,"column":12,"nodeType":"525","messageId":"526","endLine":431,"endColumn":22},{"ruleId":"539","severity":1,"message":"550","line":433,"column":61,"nodeType":"541","messageId":"542","endLine":433,"endColumn":63},{"ruleId":"539","severity":1,"message":"550","line":441,"column":23,"nodeType":"541","messageId":"542","endLine":441,"endColumn":25},{"ruleId":"539","severity":1,"message":"550","line":441,"column":49,"nodeType":"541","messageId":"542","endLine":441,"endColumn":51},{"ruleId":"539","severity":1,"message":"550","line":448,"column":23,"nodeType":"541","messageId":"542","endLine":448,"endColumn":25},{"ruleId":"539","severity":1,"message":"550","line":452,"column":23,"nodeType":"541","messageId":"542","endLine":452,"endColumn":25},{"ruleId":"539","severity":1,"message":"550","line":461,"column":34,"nodeType":"541","messageId":"542","endLine":461,"endColumn":36},{"ruleId":"539","severity":1,"message":"550","line":461,"column":63,"nodeType":"541","messageId":"542","endLine":461,"endColumn":65},{"ruleId":"539","severity":1,"message":"550","line":476,"column":16,"nodeType":"541","messageId":"542","endLine":476,"endColumn":18},{"ruleId":"523","severity":1,"message":"640","line":507,"column":12,"nodeType":"525","messageId":"526","endLine":507,"endColumn":22},{"ruleId":"523","severity":1,"message":"614","line":519,"column":12,"nodeType":"525","messageId":"526","endLine":519,"endColumn":22},{"ruleId":"523","severity":1,"message":"615","line":532,"column":7,"nodeType":"525","messageId":"526","endLine":532,"endColumn":17},{"ruleId":"523","severity":1,"message":"549","line":541,"column":15,"nodeType":"525","messageId":"526","endLine":541,"endColumn":19},{"ruleId":"523","severity":1,"message":"616","line":541,"column":21,"nodeType":"525","messageId":"526","endLine":541,"endColumn":23},{"ruleId":"523","severity":1,"message":"617","line":541,"column":25,"nodeType":"525","messageId":"526","endLine":541,"endColumn":31},{"ruleId":"523","severity":1,"message":"641","line":541,"column":33,"nodeType":"525","messageId":"526","endLine":541,"endColumn":37},{"ruleId":"523","severity":1,"message":"619","line":541,"column":39,"nodeType":"525","messageId":"526","endLine":541,"endColumn":47},{"ruleId":"523","severity":1,"message":"620","line":541,"column":49,"nodeType":"525","messageId":"526","endLine":541,"endColumn":50},{"ruleId":"523","severity":1,"message":"621","line":541,"column":52,"nodeType":"525","messageId":"526","endLine":541,"endColumn":53},{"ruleId":"523","severity":1,"message":"622","line":541,"column":55,"nodeType":"525","messageId":"526","endLine":541,"endColumn":57},{"ruleId":"523","severity":1,"message":"623","line":541,"column":59,"nodeType":"525","messageId":"526","endLine":541,"endColumn":61},{"ruleId":"523","severity":1,"message":"624","line":541,"column":63,"nodeType":"525","messageId":"526","endLine":541,"endColumn":65},{"ruleId":"588","severity":1,"message":"627","line":580,"column":19,"nodeType":"628","messageId":"591","endLine":580,"endColumn":28},{"ruleId":"523","severity":1,"message":"642","line":615,"column":12,"nodeType":"525","messageId":"526","endLine":615,"endColumn":23},{"ruleId":"523","severity":1,"message":"554","line":616,"column":11,"nodeType":"525","messageId":"526","endLine":616,"endColumn":16},{"ruleId":"523","severity":1,"message":"629","line":617,"column":11,"nodeType":"525","messageId":"526","endLine":617,"endColumn":16},{"ruleId":"588","severity":1,"message":"627","line":626,"column":15,"nodeType":"628","messageId":"591","endLine":626,"endColumn":24},{"ruleId":"523","severity":1,"message":"643","line":639,"column":12,"nodeType":"525","messageId":"526","endLine":639,"endColumn":24},{"ruleId":"523","severity":1,"message":"644","line":689,"column":12,"nodeType":"525","messageId":"526","endLine":689,"endColumn":18},{"ruleId":"523","severity":1,"message":"557","line":3,"column":13,"nodeType":"525","messageId":"526","endLine":3,"endColumn":15},{"ruleId":"523","severity":1,"message":"645","line":5,"column":8,"nodeType":"525","messageId":"526","endLine":5,"endColumn":22},{"ruleId":"523","severity":1,"message":"646","line":7,"column":8,"nodeType":"525","messageId":"526","endLine":7,"endColumn":22},{"ruleId":"523","severity":1,"message":"647","line":9,"column":10,"nodeType":"525","messageId":"526","endLine":9,"endColumn":18},"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","no-native-reassign",["648"],"no-negated-in-lhs",["649"],"'select' is defined but never used.","'map' is defined but never used.","'forEach' is defined but never used.","'range' is defined but never used.","'Info' is defined but never used.","'Sider' is assigned a value but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'temp' is defined but never used.","'data' is assigned a value but never used.","'selectedYear' is assigned a value but never used.","'selectedMentor' is assigned a value but never used.","'Keys' is assigned a value but never used.","'dataScatterE' is assigned a value but never used.","'name' is assigned a value but never used.","Expected '===' and instead saw '=='.","'_' is defined but never used.","'floor' is defined but never used.","'dataPie' is assigned a value but never used.","'count' is assigned a value but never used.","'yearData' is assigned a value but never used.","'Divider' is defined but never used.","'d3' is defined but never used.","'i' is assigned a value but never used.","'draw' is defined but never used.","'selectAll' is defined but never used.","'scaleLinear' is defined but never used.","'legend' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'isMentor' is assigned a value but never used.","'selectedTopic' is assigned a value but never used.","'xScale' is assigned a value but never used.","'yScale' is assigned a value but never used.","'scaleColor' is assigned a value but never used.","'circles' is assigned a value but never used.","'zoom' is assigned a value but never used.","'allTopic' is defined but never used.",["648"],["649"],"'g' is assigned a value but never used.","'Scatter' is defined but never used.","'count' is defined but never used.","'ThemeRiver' is defined but never used.","'Search' is defined but never used.","'Legend' is defined but never used.","'Recommend' is defined but never used.","'Cloud' is defined but never used.","'Line' is defined but never used.","'Map' is defined but never used.","'Tooltip' is defined but never used.","'key' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'dataV' is assigned a value but never used.","'dataE' is assigned a value but never used.","'dataLegend' is assigned a value but never used.","'dataRecom' is assigned a value but never used.","'dataRecomKey' is assigned a value but never used.","'text' is assigned a value but never used.","'React' is defined but never used.","'circleColor' is assigned a value but never used.","'MentorEdgeLength' is assigned a value but never used.","'arr' is assigned a value but never used.","'marker' is assigned a value but never used.","'toggleLineText' is defined but never used.","'toggleCircle' is defined but never used.","'svg_width' is assigned a value but never used.","'svg_height' is assigned a value but never used.","'font_size' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'p' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","'largerNode' is defined but never used.","'mentorNode' is assigned a value but never used.","'id' is assigned a value but never used.","'school' is assigned a value but never used.","'type' is assigned a value but never used.","'keywords' is assigned a value but never used.","'x' is assigned a value but never used.","'y' is assigned a value but never used.","'vx' is assigned a value but never used.","'vy' is assigned a value but never used.","'vz' is assigned a value but never used.","'nodeText' is assigned a value but never used.","'node' is assigned a value but never used.","Array.prototype.map() expects a return value from function.","FunctionExpression","'index' is assigned a value but never used.","'scaleMap' is assigned a value but never used.","'Axios' is defined but never used.","'keywEdgeLength' is assigned a value but never used.","'KeywordCircleR' is assigned a value but never used.","'edges' is assigned a value but never used.","'toggleLine' is defined but never used.","'currentD' is assigned a value but never used.","'Pie' is assigned a value but never used.","'ManipulateNodes' is defined but never used.","'deleteNode' is defined but never used.","'isLinkLine' is defined but never used.","'size' is assigned a value but never used.","'genLinkPath' is defined but never used.","'textBreaking' is defined but never used.","'ticked' is defined but never used.","'mentorPosition' is defined but never used.","'OverlayTrigger' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]